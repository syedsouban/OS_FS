
;; Function void printf(char*) (_Z6printfPc, funcdef_no=0, decl_uid=1063, cgraph_uid=0, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 21 n_edges 26 count 21 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a48 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r162,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r155: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r155,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r154: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r154,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r153: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r153,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r147: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r147,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r146: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r146,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r145: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r145,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r139: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r139,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r138: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r138,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r137: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r137,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a35 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a36 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a37 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a38 (r127,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a39 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a46 (r121,l0) best Q_REGS, allocno Q_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a49 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a50 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a51 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a78 (r92,l0) best Q_REGS, allocno Q_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a82 (r89,l0) best Q_REGS, allocno Q_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a1(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a2(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a3(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a4(r142,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a5(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a6(r156,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a7(r155,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a8(r154,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a9(r153,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a10(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a11(r151,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a12(r143,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a13(r150,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a14(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a15(r148,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a16(r146,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a17(r147,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a18(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:20
  a19(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a20(r145,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:10
  a21(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a22(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a23(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a24(r140,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a25(r139,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a26(r138,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a27(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a28(r137,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a29(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:20
  a30(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a31(r135,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:10
  a32(r134,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a33(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a34(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a35(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a36(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a37(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a38(r127,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a39(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a40(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a41(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a42(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a43(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a44(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a45(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a46(r121,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:7
  a47(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a48(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a49(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a50(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a51(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a52(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a53(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a54(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a55(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a56(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a57(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a58(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a59(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a60(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:20
  a61(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a62(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:10
  a63(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a64(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a65(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a66(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a67(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a68(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a69(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a70(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a71(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:20
  a72(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a73(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:10
  a74(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a75(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a76(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a77(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a78(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:7
  a79(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a80(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a81(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a82(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:8
  a83(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a84(r162,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a85(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7

   Insn 181(l0): point = 1
   Insn 12(l0): point = 4
   Insn 11(l0): point = 6
   Insn 10(l0): point = 8
   Insn 9(l0): point = 10
   Insn 8(l0): point = 12
   Insn 7(l0): point = 14
   Insn 177(l0): point = 17
   Insn 161(l0): point = 19
   Insn 91(l0): point = 22
   Insn 90(l0): point = 24
   Insn 89(l0): point = 26
   Insn 81(l0): point = 29
   Insn 80(l0): point = 31
   Insn 79(l0): point = 33
   Insn 183(l0): point = 36
   Insn 76(l0): point = 39
   Insn 75(l0): point = 41
   Insn 74(l0): point = 43
   Insn 73(l0): point = 45
   Insn 72(l0): point = 47
   Insn 71(l0): point = 49
   Insn 70(l0): point = 51
   Insn 69(l0): point = 53
   Insn 68(l0): point = 55
   Insn 67(l0): point = 57
   Insn 66(l0): point = 59
   Insn 65(l0): point = 61
   Insn 64(l0): point = 63
   Insn 63(l0): point = 65
   Insn 62(l0): point = 67
   Insn 61(l0): point = 69
   Insn 60(l0): point = 71
   Insn 59(l0): point = 73
   Insn 58(l0): point = 75
   Insn 57(l0): point = 77
   Insn 56(l0): point = 79
   Insn 55(l0): point = 81
   Insn 54(l0): point = 83
   Insn 53(l0): point = 85
   Insn 52(l0): point = 87
   Insn 51(l0): point = 89
   Insn 50(l0): point = 91
   Insn 49(l0): point = 93
   Insn 48(l0): point = 95
   Insn 47(l0): point = 97
   Insn 46(l0): point = 99
   Insn 45(l0): point = 101
   Insn 44(l0): point = 103
   Insn 43(l0): point = 105
   Insn 42(l0): point = 107
   Insn 41(l0): point = 109
   Insn 40(l0): point = 111
   Insn 39(l0): point = 113
   Insn 38(l0): point = 115
   Insn 37(l0): point = 117
   Insn 36(l0): point = 119
   Insn 35(l0): point = 121
   Insn 34(l0): point = 123
   Insn 33(l0): point = 125
   Insn 171(l0): point = 128
   Insn 28(l0): point = 130
   Insn 27(l0): point = 132
   Insn 26(l0): point = 134
   Insn 25(l0): point = 136
   Insn 20(l0): point = 139
   Insn 19(l0): point = 141
   Insn 18(l0): point = 143
   Insn 17(l0): point = 145
   Insn 16(l0): point = 147
   Insn 15(l0): point = 149
   Insn 14(l0): point = 151
   Insn 86(l0): point = 154
   Insn 85(l0): point = 156
   Insn 84(l0): point = 158
   Insn 83(l0): point = 160
   Insn 158(l0): point = 163
   Insn 157(l0): point = 165
   Insn 97(l0): point = 168
   Insn 96(l0): point = 170
   Insn 95(l0): point = 172
   Insn 93(l0): point = 175
   Insn 175(l0): point = 178
   Insn 151(l0): point = 180
   Insn 150(l0): point = 182
   Insn 149(l0): point = 184
   Insn 103(l0): point = 187
   Insn 102(l0): point = 189
   Insn 101(l0): point = 191
   Insn 99(l0): point = 194
   Insn 173(l0): point = 197
   Insn 143(l0): point = 199
   Insn 142(l0): point = 201
   Insn 141(l0): point = 203
   Insn 140(l0): point = 205
   Insn 139(l0): point = 207
   Insn 138(l0): point = 209
   Insn 137(l0): point = 211
   Insn 136(l0): point = 213
   Insn 135(l0): point = 215
   Insn 134(l0): point = 217
   Insn 133(l0): point = 219
   Insn 132(l0): point = 221
   Insn 131(l0): point = 223
   Insn 130(l0): point = 225
   Insn 129(l0): point = 227
   Insn 128(l0): point = 229
   Insn 127(l0): point = 231
   Insn 126(l0): point = 233
   Insn 125(l0): point = 235
   Insn 124(l0): point = 237
   Insn 123(l0): point = 239
   Insn 122(l0): point = 241
   Insn 121(l0): point = 243
   Insn 120(l0): point = 245
   Insn 119(l0): point = 247
   Insn 118(l0): point = 249
   Insn 117(l0): point = 251
   Insn 116(l0): point = 253
   Insn 115(l0): point = 255
   Insn 114(l0): point = 257
   Insn 113(l0): point = 259
   Insn 112(l0): point = 261
   Insn 111(l0): point = 263
   Insn 110(l0): point = 265
   Insn 109(l0): point = 267
   Insn 108(l0): point = 269
   Insn 107(l0): point = 271
   Insn 106(l0): point = 273
   Insn 105(l0): point = 275
   Insn 5(l0): point = 278
 a0(r161): [181..182]
 a1(r160): [183..184]
 a2(r159): [200..201]
 a3(r158): [202..203]
 a4(r142): [206..247]
 a5(r157): [206..207]
 a6(r156): [208..209]
 a7(r155): [210..211]
 a8(r154): [212..213]
 a9(r153): [214..215]
 a10(r152): [216..217]
 a11(r151): [218..219]
 a12(r143): [218..245]
 a13(r150): [220..221]
 a14(r149): [222..223]
 a15(r148): [224..225]
 a16(r146): [224..229]
 a17(r147): [226..227]
 a18(r171): [234..239] [230..231]
 a19(r172): [232..233]
 a20(r145): [236..241]
 a21(r144): [242..243]
 a22(r141): [248..249]
 a23(r133): [248..275]
 a24(r140): [250..251]
 a25(r139): [252..253]
 a26(r138): [254..255]
 a27(r136): [254..259]
 a28(r137): [256..257]
 a29(r169): [264..269] [260..261]
 a30(r170): [262..263]
 a31(r135): [266..271]
 a32(r134): [272..273]
 a33(r132): [190..191]
 a34(r131): [171..172]
 a35(r130): [25..26]
 a36(r129): [155..156]
 a37(r128): [157..158]
 a38(r127): [32..33]
 a39(r126): [40..41]
 a40(r125): [42..43]
 a41(r105): [46..97]
 a42(r124): [46..47]
 a43(r123): [48..49]
 a44(r122): [50..51]
 a45(r118): [50..61]
 a46(r121): [52..53]
 a47(r120): [54..55]
 a48(r168): [56..57]
 a49(r119): [56..59]
 a50(r117): [62..63]
 a51(r116): [64..65]
 a52(r115): [66..67]
 a53(r114): [68..69]
 a54(r106): [68..95]
 a55(r113): [70..71]
 a56(r112): [72..73]
 a57(r111): [74..75]
 a58(r109): [74..79]
 a59(r110): [76..77]
 a60(r166): [84..89] [80..81]
 a61(r167): [82..83]
 a62(r108): [86..91]
 a63(r107): [92..93]
 a64(r104): [98..99]
 a65(r96): [98..125]
 a66(r103): [100..101]
 a67(r102): [102..103]
 a68(r101): [104..105]
 a69(r99): [104..109]
 a70(r100): [106..107]
 a71(r164): [114..119] [110..111]
 a72(r165): [112..113]
 a73(r98): [116..121]
 a74(r97): [122..123]
 a75(r95): [131..132]
 a76(r94): [133..134]
 a77(r93): [142..143]
 a78(r92): [144..145]
 a79(r91): [146..147]
 a80(r163): [148..149]
 a81(r90): [148..151]
 a82(r89): [7..8]
 a83(r88): [9..10]
 a84(r162): [11..12]
 a85(r87): [11..14]
Compressing live ranges: from 281 to 144 - 51%
Ranges after the compression:
 a0(r161): [86..87]
 a1(r160): [88..89]
 a2(r159): [92..93]
 a3(r158): [94..95]
 a4(r142): [96..125]
 a5(r157): [96..97]
 a6(r156): [98..99]
 a7(r155): [100..101]
 a8(r154): [102..103]
 a9(r153): [104..105]
 a10(r152): [106..107]
 a11(r151): [108..109]
 a12(r143): [108..125]
 a13(r150): [110..111]
 a14(r149): [112..113]
 a15(r148): [114..115]
 a16(r146): [114..117]
 a17(r147): [116..117]
 a18(r171): [122..123] [118..119]
 a19(r172): [120..121]
 a20(r145): [122..123]
 a21(r144): [124..125]
 a22(r141): [126..127]
 a23(r133): [126..143]
 a24(r140): [128..129]
 a25(r139): [130..131]
 a26(r138): [132..133]
 a27(r136): [132..135]
 a28(r137): [134..135]
 a29(r169): [140..141] [136..137]
 a30(r170): [138..139]
 a31(r135): [140..141]
 a32(r134): [142..143]
 a33(r132): [90..91]
 a34(r131): [84..85]
 a35(r130): [6..7]
 a36(r129): [80..81]
 a37(r128): [82..83]
 a38(r127): [8..9]
 a39(r126): [10..11]
 a40(r125): [12..13]
 a41(r105): [14..49]
 a42(r124): [14..15]
 a43(r123): [16..17]
 a44(r122): [18..19]
 a45(r118): [18..25]
 a46(r121): [20..21]
 a47(r120): [22..23]
 a48(r168): [24..25]
 a49(r119): [24..25]
 a50(r117): [26..27]
 a51(r116): [28..29]
 a52(r115): [30..31]
 a53(r114): [32..33]
 a54(r106): [32..49]
 a55(r113): [34..35]
 a56(r112): [36..37]
 a57(r111): [38..39]
 a58(r109): [38..41]
 a59(r110): [40..41]
 a60(r166): [46..47] [42..43]
 a61(r167): [44..45]
 a62(r108): [46..47]
 a63(r107): [48..49]
 a64(r104): [50..51]
 a65(r96): [50..67]
 a66(r103): [52..53]
 a67(r102): [54..55]
 a68(r101): [56..57]
 a69(r99): [56..59]
 a70(r100): [58..59]
 a71(r164): [64..65] [60..61]
 a72(r165): [62..63]
 a73(r98): [64..65]
 a74(r97): [66..67]
 a75(r95): [68..69]
 a76(r94): [70..71]
 a77(r93): [72..73]
 a78(r92): [74..75]
 a79(r91): [76..77]
 a80(r163): [78..79]
 a81(r90): [78..79]
 a82(r89): [0..1]
 a83(r88): [2..3]
 a84(r162): [4..5]
 a85(r87): [4..5]
  regions=1, blocks=21, points=144
    allocnos=86 (big 0), copies=0, conflicts=0, ranges=90
Disposition:
   85:r87  l0     1   83:r88  l0     0   82:r89  l0     0   81:r90  l0     1
   79:r91  l0     0   78:r92  l0     0   77:r93  l0     0   76:r94  l0     0
   75:r95  l0     0   65:r96  l0     2   74:r97  l0     0   73:r98  l0     1
   69:r99  l0     1   70:r100 l0     0   68:r101 l0     0   67:r102 l0     0
   66:r103 l0     0   64:r104 l0     0   41:r105 l0     2   54:r106 l0     3
   63:r107 l0     0   62:r108 l0     1   58:r109 l0     1   59:r110 l0     0
   57:r111 l0     0   56:r112 l0     0   55:r113 l0     0   53:r114 l0     0
   52:r115 l0     0   51:r116 l0     0   50:r117 l0     0   45:r118 l0     3
   49:r119 l0     1   47:r120 l0     0   46:r121 l0     0   44:r122 l0     0
   43:r123 l0     0   42:r124 l0     0   40:r125 l0     0   39:r126 l0     0
   38:r127 l0     0   37:r128 l0     0   36:r129 l0     0   35:r130 l0     0
   34:r131 l0     0   33:r132 l0     0   23:r133 l0     2   32:r134 l0     0
   31:r135 l0     1   27:r136 l0     1   28:r137 l0     0   26:r138 l0     0
   25:r139 l0     0   24:r140 l0     0   22:r141 l0     0    4:r142 l0     2
   12:r143 l0     3   21:r144 l0     0   20:r145 l0     1   16:r146 l0     1
   17:r147 l0     0   15:r148 l0     0   14:r149 l0     0   13:r150 l0     0
   11:r151 l0     0   10:r152 l0     0    9:r153 l0     0    8:r154 l0     0
    7:r155 l0     0    6:r156 l0     0    5:r157 l0     0    3:r158 l0     0
    2:r159 l0     0    1:r160 l0     0    0:r161 l0     0   84:r162 l0     0
   80:r163 l0     0   71:r164 l0     0   72:r165 l0     0   60:r166 l0     0
   61:r167 l0     0   48:r168 l0     0   29:r169 l0     0   30:r170 l0     0
   18:r171 l0     0   19:r172 l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void printf(char*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 6[bp] 17[flags]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r6={1d,20u} r7={1d,20u} r16={1d,22u,3e} r17={43d,6u} r20={1d,26u} r87={1d,1u,1e} r88={1d,1u} r89={1d,1u} r90={1d,1u,1e} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,2u,1e} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,2u,1e} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u,1e} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,2u,1e} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,2u,1e} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={4d,4u} r165={1d,1u} r166={4d,4u} r167={1d,1u} r168={1d,1u} r169={4d,4u} r170={1d,1u} r171={4d,4u} r172={1d,1u} 
;;    total ref usage 354{148d,196u,10e} in 131{131 regular + 0 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 162 2 (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) printf.cpp:15 90 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              17 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 162
(code_label 162 5 6 3 12 "" [1 uses])
(note 6 162 7 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 7 6 8 3 (set (reg:SI 87 [ D.1174 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) printf.cpp:15 90 {*movsi_internal}
     (nil))
(insn 8 7 9 3 (set (reg/f:SI 162)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 str+0 S4 A32])) printf.cpp:15 90 {*movsi_internal}
     (nil))
(insn 9 8 10 3 (parallel [
            (set (reg/f:SI 88 [ D.1175 ])
                (plus:SI (reg:SI 87 [ D.1174 ])
                    (reg/f:SI 162)))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:15 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 162)
        (expr_list:REG_DEAD (reg:SI 87 [ D.1174 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 str+0 S4 A32])
                        (reg:SI 87 [ D.1174 ]))
                    (nil))))))
(insn 10 9 11 3 (set (reg:QI 89 [ D.1176 ])
        (mem:QI (reg/f:SI 88 [ D.1175 ]) [0 *_12+0 S1 A8])) printf.cpp:15 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 88 [ D.1175 ])
        (nil)))
(insn 11 10 12 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ D.1176 ])
            (const_int 0 [0]))) printf.cpp:15 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 89 [ D.1176 ])
        (nil)))
(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 180)
            (pc))) printf.cpp:15 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 180)
;;  succ:       19
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90 91 92 93 163
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:SI 90 [ D.1174 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) printf.cpp:17 90 {*movsi_internal}
     (nil))
(insn 15 14 16 4 (set (reg/f:SI 163)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 str+0 S4 A32])) printf.cpp:17 90 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (parallel [
            (set (reg/f:SI 91 [ D.1175 ])
                (plus:SI (reg:SI 90 [ D.1174 ])
                    (reg/f:SI 163)))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:17 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 163)
        (expr_list:REG_DEAD (reg:SI 90 [ D.1174 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 str+0 S4 A32])
                        (reg:SI 90 [ D.1174 ]))
                    (nil))))))
(insn 17 16 18 4 (set (reg:QI 92 [ D.1176 ])
        (mem:QI (reg/f:SI 91 [ D.1175 ]) [0 *_15+0 S1 A8])) printf.cpp:17 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ D.1175 ])
        (nil)))
(insn 18 17 19 4 (set (reg:SI 93 [ D.1177 ])
        (sign_extend:SI (reg:QI 92 [ D.1176 ]))) printf.cpp:17 148 {extendqisi2}
     (expr_list:REG_DEAD (reg:QI 92 [ D.1176 ])
        (nil)))
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ D.1177 ])
            (const_int 10 [0xa]))) printf.cpp:17 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 93 [ D.1177 ])
        (nil)))
(jump_insn 20 19 24 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 170)
            (pc))) printf.cpp:17 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 170)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 94 95
(note 24 20 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1x") [flags 0x2]  <var_decl 0x7f80af469c60 x>) [0 x+0 S2 A16])
        (const_int 0 [0])) printf.cpp:20 92 {*movhi_internal}
     (nil))
(insn 26 25 27 5 (set (reg:HI 94 [ D.1178 ])
        (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1y") [flags 0x2]  <var_decl 0x7f80af469cf0 y>) [0 y+0 S2 A16])) printf.cpp:21 92 {*movhi_internal}
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg:HI 95 [ D.1178 ])
                (plus:HI (reg:HI 94 [ D.1178 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:21 220 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 94 [ D.1178 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 171 5 (set (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1y") [flags 0x2]  <var_decl 0x7f80af469cf0 y>) [0 y+0 S2 A16])
        (reg:HI 95 [ D.1178 ])) printf.cpp:21 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 95 [ D.1178 ])
        (nil)))
(jump_insn 171 28 172 5 (set (pc)
        (label_ref 77)) printf.cpp:22 654 {jump}
     (nil)
 -> 77)
;;  succ:       7 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 172 171 170)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 164 165 166 167 168
(code_label 170 172 32 6 13 "" [1 uses])
(note 32 170 33 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 6 (set (reg/f:SI 96 [ D.1179 ])
        (mem/f/c:SI (symbol_ref:SI ("_ZZ6printfPcE11VideoMemory") [flags 0x2]  <var_decl 0x7f80af469bd0 VideoMemory>) [0 VideoMemory+0 S4 A32])) printf.cpp:24 90 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:HI 97 [ D.1178 ])
        (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1y") [flags 0x2]  <var_decl 0x7f80af469cf0 y>) [0 y+0 S2 A16])) printf.cpp:24 92 {*movhi_internal}
     (nil))
(insn 35 34 36 6 (set (reg:SI 98 [ D.1177 ])
        (zero_extend:SI (reg:HI 97 [ D.1178 ]))) printf.cpp:24 139 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 97 [ D.1178 ])
        (nil)))
(insn 36 35 37 6 (set (reg:SI 164)
        (reg:SI 98 [ D.1177 ])) printf.cpp:24 90 {*movsi_internal}
     (nil))
(insn 37 36 38 6 (parallel [
            (set (reg:SI 164)
                (ashift:SI (reg:SI 164)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:24 511 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 38 37 39 6 (parallel [
            (set (reg:SI 164)
                (plus:SI (reg:SI 164)
                    (reg:SI 98 [ D.1177 ])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:24 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 98 [ D.1177 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:SI (reg:SI 98 [ D.1177 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 39 38 40 6 (parallel [
            (set (reg:SI 165)
                (ashift:SI (reg:SI 164)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:24 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 164)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 40 39 41 6 (set (reg:SI 164)
        (reg:SI 165)) printf.cpp:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 165)
        (nil)))
(insn 41 40 42 6 (set (reg:SI 99 [ D.1177 ])
        (reg:SI 164)) printf.cpp:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 164)
        (nil)))
(insn 42 41 43 6 (set (reg:HI 100 [ D.1178 ])
        (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1x") [flags 0x2]  <var_decl 0x7f80af469c60 x>) [0 x+0 S2 A16])) printf.cpp:24 92 {*movhi_internal}
     (nil))
(insn 43 42 44 6 (set (reg:SI 101 [ D.1177 ])
        (zero_extend:SI (reg:HI 100 [ D.1178 ]))) printf.cpp:24 139 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 100 [ D.1178 ])
        (nil)))
(insn 44 43 45 6 (parallel [
            (set (reg:SI 102 [ D.1177 ])
                (plus:SI (reg:SI 99 [ D.1177 ])
                    (reg:SI 101 [ D.1177 ])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:24 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 101 [ D.1177 ])
        (expr_list:REG_DEAD (reg:SI 99 [ D.1177 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 45 44 46 6 (set (reg:SI 103 [ D.1180 ])
        (reg:SI 102 [ D.1177 ])) printf.cpp:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 102 [ D.1177 ])
        (nil)))
(insn 46 45 47 6 (parallel [
            (set (reg:SI 104 [ D.1180 ])
                (ashift:SI (reg:SI 103 [ D.1180 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:24 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 103 [ D.1180 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 47 46 48 6 (parallel [
            (set (reg/f:SI 105 [ D.1179 ])
                (plus:SI (reg/f:SI 96 [ D.1179 ])
                    (reg:SI 104 [ D.1180 ])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:24 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 104 [ D.1180 ])
        (expr_list:REG_DEAD (reg/f:SI 96 [ D.1179 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 48 47 49 6 (set (reg/f:SI 106 [ D.1179 ])
        (mem/f/c:SI (symbol_ref:SI ("_ZZ6printfPcE11VideoMemory") [flags 0x2]  <var_decl 0x7f80af469bd0 VideoMemory>) [0 VideoMemory+0 S4 A32])) printf.cpp:24 90 {*movsi_internal}
     (nil))
(insn 49 48 50 6 (set (reg:HI 107 [ D.1178 ])
        (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1y") [flags 0x2]  <var_decl 0x7f80af469cf0 y>) [0 y+0 S2 A16])) printf.cpp:24 92 {*movhi_internal}
     (nil))
(insn 50 49 51 6 (set (reg:SI 108 [ D.1177 ])
        (zero_extend:SI (reg:HI 107 [ D.1178 ]))) printf.cpp:24 139 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 107 [ D.1178 ])
        (nil)))
(insn 51 50 52 6 (set (reg:SI 166)
        (reg:SI 108 [ D.1177 ])) printf.cpp:24 90 {*movsi_internal}
     (nil))
(insn 52 51 53 6 (parallel [
            (set (reg:SI 166)
                (ashift:SI (reg:SI 166)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:24 511 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 53 52 54 6 (parallel [
            (set (reg:SI 166)
                (plus:SI (reg:SI 166)
                    (reg:SI 108 [ D.1177 ])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:24 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 108 [ D.1177 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:SI (reg:SI 108 [ D.1177 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 54 53 55 6 (parallel [
            (set (reg:SI 167)
                (ashift:SI (reg:SI 166)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:24 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 166)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 55 54 56 6 (set (reg:SI 166)
        (reg:SI 167)) printf.cpp:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 167)
        (nil)))
(insn 56 55 57 6 (set (reg:SI 109 [ D.1177 ])
        (reg:SI 166)) printf.cpp:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 166)
        (nil)))
(insn 57 56 58 6 (set (reg:HI 110 [ D.1178 ])
        (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1x") [flags 0x2]  <var_decl 0x7f80af469c60 x>) [0 x+0 S2 A16])) printf.cpp:24 92 {*movhi_internal}
     (nil))
(insn 58 57 59 6 (set (reg:SI 111 [ D.1177 ])
        (zero_extend:SI (reg:HI 110 [ D.1178 ]))) printf.cpp:24 139 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 110 [ D.1178 ])
        (nil)))
(insn 59 58 60 6 (parallel [
            (set (reg:SI 112 [ D.1177 ])
                (plus:SI (reg:SI 109 [ D.1177 ])
                    (reg:SI 111 [ D.1177 ])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:24 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 111 [ D.1177 ])
        (expr_list:REG_DEAD (reg:SI 109 [ D.1177 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 60 59 61 6 (set (reg:SI 113 [ D.1180 ])
        (reg:SI 112 [ D.1177 ])) printf.cpp:24 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 112 [ D.1177 ])
        (nil)))
(insn 61 60 62 6 (parallel [
            (set (reg:SI 114 [ D.1180 ])
                (ashift:SI (reg:SI 113 [ D.1180 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:24 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 113 [ D.1180 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 62 61 63 6 (parallel [
            (set (reg/f:SI 115 [ D.1179 ])
                (plus:SI (reg/f:SI 106 [ D.1179 ])
                    (reg:SI 114 [ D.1180 ])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:24 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 114 [ D.1180 ])
        (expr_list:REG_DEAD (reg/f:SI 106 [ D.1179 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 63 62 64 6 (set (reg:HI 116 [ D.1178 ])
        (mem:HI (reg/f:SI 115 [ D.1179 ]) [0 *_42+0 S2 A16])) printf.cpp:24 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 115 [ D.1179 ])
        (nil)))
(insn 64 63 65 6 (set (reg:HI 117 [ D.1181 ])
        (reg:HI 116 [ D.1178 ])) printf.cpp:24 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 116 [ D.1178 ])
        (nil)))
(insn 65 64 66 6 (parallel [
            (set (reg:HI 118 [ D.1181 ])
                (and:HI (reg:HI 117 [ D.1181 ])
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:24 383 {*andhi_1}
     (expr_list:REG_DEAD (reg:HI 117 [ D.1181 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 66 65 67 6 (set (reg:SI 119 [ D.1174 ])
        (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) printf.cpp:24 90 {*movsi_internal}
     (nil))
(insn 67 66 68 6 (set (reg/f:SI 168)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 str+0 S4 A32])) printf.cpp:24 90 {*movsi_internal}
     (nil))
(insn 68 67 69 6 (parallel [
            (set (reg/f:SI 120 [ D.1175 ])
                (plus:SI (reg:SI 119 [ D.1174 ])
                    (reg/f:SI 168)))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:24 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 168)
        (expr_list:REG_DEAD (reg:SI 119 [ D.1174 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 str+0 S4 A32])
                        (reg:SI 119 [ D.1174 ]))
                    (nil))))))
(insn 69 68 70 6 (set (reg:QI 121 [ D.1176 ])
        (mem:QI (reg/f:SI 120 [ D.1175 ]) [0 *_47+0 S1 A8])) printf.cpp:24 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 120 [ D.1175 ])
        (nil)))
(insn 70 69 71 6 (set (reg:HI 122 [ D.1181 ])
        (sign_extend:HI (reg:QI 121 [ D.1176 ]))) printf.cpp:24 150 {extendqihi2}
     (expr_list:REG_DEAD (reg:QI 121 [ D.1176 ])
        (nil)))
(insn 71 70 72 6 (parallel [
            (set (reg:HI 123 [ D.1181 ])
                (ior:HI (reg:HI 118 [ D.1181 ])
                    (reg:HI 122 [ D.1181 ])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:24 403 {*iorhi_1}
     (expr_list:REG_DEAD (reg:HI 122 [ D.1181 ])
        (expr_list:REG_DEAD (reg:HI 118 [ D.1181 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 72 71 73 6 (set (reg:HI 124 [ D.1178 ])
        (reg:HI 123 [ D.1181 ])) printf.cpp:24 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 123 [ D.1181 ])
        (nil)))
(insn 73 72 74 6 (set (mem:HI (reg/f:SI 105 [ D.1179 ]) [0 *_32+0 S2 A16])
        (reg:HI 124 [ D.1178 ])) printf.cpp:24 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 124 [ D.1178 ])
        (expr_list:REG_DEAD (reg/f:SI 105 [ D.1179 ])
            (nil))))
(insn 74 73 75 6 (set (reg:HI 125 [ D.1178 ])
        (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1x") [flags 0x2]  <var_decl 0x7f80af469c60 x>) [0 x+0 S2 A16])) printf.cpp:25 92 {*movhi_internal}
     (nil))
(insn 75 74 76 6 (parallel [
            (set (reg:HI 126 [ D.1178 ])
                (plus:HI (reg:HI 125 [ D.1178 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:25 220 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 125 [ D.1178 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 76 75 182 6 (set (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1x") [flags 0x2]  <var_decl 0x7f80af469c60 x>) [0 x+0 S2 A16])
        (reg:HI 126 [ D.1178 ])) printf.cpp:25 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 126 [ D.1178 ])
        (nil)))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 7, flags: (NEW, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 182 76 183 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 77 20 (const_int 0 [0]) printf.cpp:26 684 {nop}
     (nil))
;;  succ:       7 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 20, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 [100.0%]  (FALLTHRU)
;;              5 [100.0%] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 127
(code_label 77 183 78 7 5 "" [1 uses])
(note 78 77 79 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 7 (set (reg:HI 127 [ D.1178 ])
        (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1x") [flags 0x2]  <var_decl 0x7f80af469c60 x>) [0 x+0 S2 A16])) printf.cpp:28 92 {*movhi_internal}
     (nil))
(insn 80 79 81 7 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 127 [ D.1178 ])
            (const_int 79 [0x4f]))) printf.cpp:28 6 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 127 [ D.1178 ])
        (nil)))
(jump_insn 81 80 82 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 87)
            (pc))) printf.cpp:28 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 87)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 128 129
(note 82 81 83 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 8 (set (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1x") [flags 0x2]  <var_decl 0x7f80af469c60 x>) [0 x+0 S2 A16])
        (const_int 0 [0])) printf.cpp:30 92 {*movhi_internal}
     (nil))
(insn 84 83 85 8 (set (reg:HI 128 [ D.1178 ])
        (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1y") [flags 0x2]  <var_decl 0x7f80af469cf0 y>) [0 y+0 S2 A16])) printf.cpp:31 92 {*movhi_internal}
     (nil))
(insn 85 84 86 8 (parallel [
            (set (reg:HI 129 [ D.1178 ])
                (plus:HI (reg:HI 128 [ D.1178 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:31 220 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 128 [ D.1178 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 86 85 87 8 (set (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1y") [flags 0x2]  <var_decl 0x7f80af469cf0 y>) [0 y+0 S2 A16])
        (reg:HI 129 [ D.1178 ])) printf.cpp:31 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 129 [ D.1178 ])
        (nil)))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
;;              8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 130
(code_label 87 86 88 9 6 "" [1 uses])
(note 88 87 89 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 9 (set (reg:HI 130 [ D.1178 ])
        (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1y") [flags 0x2]  <var_decl 0x7f80af469cf0 y>) [0 y+0 S2 A16])) printf.cpp:33 92 {*movhi_internal}
     (nil))
(insn 90 89 91 9 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 130 [ D.1178 ])
            (const_int 24 [0x18]))) printf.cpp:33 6 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 130 [ D.1178 ])
        (nil)))
(jump_insn 91 90 92 9 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 159)
            (pc))) printf.cpp:33 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 159)
;;  succ:       10 (FALLTHRU)
;;              17
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 92 91 93 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 93 92 152 10 (set (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1y") [flags 0x2]  <var_decl 0x7f80af469cf0 y>) [0 y+0 S2 A16])
        (const_int 0 [0])) printf.cpp:35 92 {*movhi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              15 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 131
(code_label 152 93 94 11 11 "" [1 uses])
(note 94 152 95 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 11 (set (reg:HI 131 [ D.1178 ])
        (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1y") [flags 0x2]  <var_decl 0x7f80af469cf0 y>) [0 y+0 S2 A16])) printf.cpp:35 92 {*movhi_internal}
     (nil))
(insn 96 95 97 11 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 131 [ D.1178 ])
            (const_int 24 [0x18]))) printf.cpp:35 6 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 131 [ D.1178 ])
        (nil)))
(jump_insn 97 96 98 11 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 155)
            (pc))) printf.cpp:35 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 155)
;;  succ:       16
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 98 97 99 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 144 12 (set (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1x") [flags 0x2]  <var_decl 0x7f80af469c60 x>) [0 x+0 S2 A16])
        (const_int 0 [0])) printf.cpp:36 92 {*movhi_internal}
     (nil))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;;              14 [100.0%] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 132
(code_label 144 99 100 13 10 "" [1 uses])
(note 100 144 101 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 13 (set (reg:HI 132 [ D.1178 ])
        (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1x") [flags 0x2]  <var_decl 0x7f80af469c60 x>) [0 x+0 S2 A16])) printf.cpp:36 92 {*movhi_internal}
     (nil))
(insn 102 101 103 13 (set (reg:CC 17 flags)
        (compare:CC (reg:HI 132 [ D.1178 ])
            (const_int 79 [0x4f]))) printf.cpp:36 6 {*cmphi_1}
     (expr_list:REG_DEAD (reg:HI 132 [ D.1178 ])
        (nil)))
(jump_insn 103 102 104 13 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 147)
            (pc))) printf.cpp:36 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CC 17 flags)
        (nil))
 -> 147)
;;  succ:       15
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 169 170 171 172
(note 104 103 105 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 14 (set (reg/f:SI 133 [ D.1179 ])
        (mem/f/c:SI (symbol_ref:SI ("_ZZ6printfPcE11VideoMemory") [flags 0x2]  <var_decl 0x7f80af469bd0 VideoMemory>) [0 VideoMemory+0 S4 A32])) printf.cpp:37 90 {*movsi_internal}
     (nil))
(insn 106 105 107 14 (set (reg:HI 134 [ D.1178 ])
        (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1y") [flags 0x2]  <var_decl 0x7f80af469cf0 y>) [0 y+0 S2 A16])) printf.cpp:37 92 {*movhi_internal}
     (nil))
(insn 107 106 108 14 (set (reg:SI 135 [ D.1177 ])
        (zero_extend:SI (reg:HI 134 [ D.1178 ]))) printf.cpp:37 139 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 134 [ D.1178 ])
        (nil)))
(insn 108 107 109 14 (set (reg:SI 169)
        (reg:SI 135 [ D.1177 ])) printf.cpp:37 90 {*movsi_internal}
     (nil))
(insn 109 108 110 14 (parallel [
            (set (reg:SI 169)
                (ashift:SI (reg:SI 169)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:37 511 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 110 109 111 14 (parallel [
            (set (reg:SI 169)
                (plus:SI (reg:SI 169)
                    (reg:SI 135 [ D.1177 ])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:37 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 135 [ D.1177 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:SI (reg:SI 135 [ D.1177 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 111 110 112 14 (parallel [
            (set (reg:SI 170)
                (ashift:SI (reg:SI 169)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:37 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 169)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 112 111 113 14 (set (reg:SI 169)
        (reg:SI 170)) printf.cpp:37 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 170)
        (nil)))
(insn 113 112 114 14 (set (reg:SI 136 [ D.1177 ])
        (reg:SI 169)) printf.cpp:37 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 169)
        (nil)))
(insn 114 113 115 14 (set (reg:HI 137 [ D.1178 ])
        (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1x") [flags 0x2]  <var_decl 0x7f80af469c60 x>) [0 x+0 S2 A16])) printf.cpp:37 92 {*movhi_internal}
     (nil))
(insn 115 114 116 14 (set (reg:SI 138 [ D.1177 ])
        (zero_extend:SI (reg:HI 137 [ D.1178 ]))) printf.cpp:37 139 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 137 [ D.1178 ])
        (nil)))
(insn 116 115 117 14 (parallel [
            (set (reg:SI 139 [ D.1177 ])
                (plus:SI (reg:SI 136 [ D.1177 ])
                    (reg:SI 138 [ D.1177 ])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:37 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 138 [ D.1177 ])
        (expr_list:REG_DEAD (reg:SI 136 [ D.1177 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 117 116 118 14 (set (reg:SI 140 [ D.1180 ])
        (reg:SI 139 [ D.1177 ])) printf.cpp:37 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 139 [ D.1177 ])
        (nil)))
(insn 118 117 119 14 (parallel [
            (set (reg:SI 141 [ D.1180 ])
                (ashift:SI (reg:SI 140 [ D.1180 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:37 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 140 [ D.1180 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 119 118 120 14 (parallel [
            (set (reg/f:SI 142 [ D.1179 ])
                (plus:SI (reg/f:SI 133 [ D.1179 ])
                    (reg:SI 141 [ D.1180 ])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:37 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 141 [ D.1180 ])
        (expr_list:REG_DEAD (reg/f:SI 133 [ D.1179 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 120 119 121 14 (set (reg/f:SI 143 [ D.1179 ])
        (mem/f/c:SI (symbol_ref:SI ("_ZZ6printfPcE11VideoMemory") [flags 0x2]  <var_decl 0x7f80af469bd0 VideoMemory>) [0 VideoMemory+0 S4 A32])) printf.cpp:37 90 {*movsi_internal}
     (nil))
(insn 121 120 122 14 (set (reg:HI 144 [ D.1178 ])
        (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1y") [flags 0x2]  <var_decl 0x7f80af469cf0 y>) [0 y+0 S2 A16])) printf.cpp:37 92 {*movhi_internal}
     (nil))
(insn 122 121 123 14 (set (reg:SI 145 [ D.1177 ])
        (zero_extend:SI (reg:HI 144 [ D.1178 ]))) printf.cpp:37 139 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 144 [ D.1178 ])
        (nil)))
(insn 123 122 124 14 (set (reg:SI 171)
        (reg:SI 145 [ D.1177 ])) printf.cpp:37 90 {*movsi_internal}
     (nil))
(insn 124 123 125 14 (parallel [
            (set (reg:SI 171)
                (ashift:SI (reg:SI 171)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:37 511 {*ashlsi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 125 124 126 14 (parallel [
            (set (reg:SI 171)
                (plus:SI (reg:SI 171)
                    (reg:SI 145 [ D.1177 ])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:37 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 145 [ D.1177 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (mult:SI (reg:SI 145 [ D.1177 ])
                    (const_int 5 [0x5]))
                (nil)))))
(insn 126 125 127 14 (parallel [
            (set (reg:SI 172)
                (ashift:SI (reg:SI 171)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:37 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 171)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 127 126 128 14 (set (reg:SI 171)
        (reg:SI 172)) printf.cpp:37 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 172)
        (nil)))
(insn 128 127 129 14 (set (reg:SI 146 [ D.1177 ])
        (reg:SI 171)) printf.cpp:37 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 171)
        (nil)))
(insn 129 128 130 14 (set (reg:HI 147 [ D.1178 ])
        (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1x") [flags 0x2]  <var_decl 0x7f80af469c60 x>) [0 x+0 S2 A16])) printf.cpp:37 92 {*movhi_internal}
     (nil))
(insn 130 129 131 14 (set (reg:SI 148 [ D.1177 ])
        (zero_extend:SI (reg:HI 147 [ D.1178 ]))) printf.cpp:37 139 {*zero_extendhisi2}
     (expr_list:REG_DEAD (reg:HI 147 [ D.1178 ])
        (nil)))
(insn 131 130 132 14 (parallel [
            (set (reg:SI 149 [ D.1177 ])
                (plus:SI (reg:SI 146 [ D.1177 ])
                    (reg:SI 148 [ D.1177 ])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:37 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 148 [ D.1177 ])
        (expr_list:REG_DEAD (reg:SI 146 [ D.1177 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 132 131 133 14 (set (reg:SI 150 [ D.1180 ])
        (reg:SI 149 [ D.1177 ])) printf.cpp:37 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 149 [ D.1177 ])
        (nil)))
(insn 133 132 134 14 (parallel [
            (set (reg:SI 151 [ D.1180 ])
                (ashift:SI (reg:SI 150 [ D.1180 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:37 511 {*ashlsi3_1}
     (expr_list:REG_DEAD (reg:SI 150 [ D.1180 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 134 133 135 14 (parallel [
            (set (reg/f:SI 152 [ D.1179 ])
                (plus:SI (reg/f:SI 143 [ D.1179 ])
                    (reg:SI 151 [ D.1180 ])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:37 217 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 151 [ D.1180 ])
        (expr_list:REG_DEAD (reg/f:SI 143 [ D.1179 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 135 134 136 14 (set (reg:HI 153 [ D.1178 ])
        (mem:HI (reg/f:SI 152 [ D.1179 ]) [0 *_87+0 S2 A16])) printf.cpp:37 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg/f:SI 152 [ D.1179 ])
        (nil)))
(insn 136 135 137 14 (set (reg:HI 154 [ D.1181 ])
        (reg:HI 153 [ D.1178 ])) printf.cpp:37 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 153 [ D.1178 ])
        (nil)))
(insn 137 136 138 14 (parallel [
            (set (reg:HI 155 [ D.1181 ])
                (and:HI (reg:HI 154 [ D.1181 ])
                    (const_int -256 [0xffffffffffffff00])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:37 383 {*andhi_1}
     (expr_list:REG_DEAD (reg:HI 154 [ D.1181 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 138 137 139 14 (parallel [
            (set (reg:HI 156 [ D.1181 ])
                (ior:HI (reg:HI 155 [ D.1181 ])
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:37 403 {*iorhi_1}
     (expr_list:REG_DEAD (reg:HI 155 [ D.1181 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 139 138 140 14 (set (reg:HI 157 [ D.1178 ])
        (reg:HI 156 [ D.1181 ])) printf.cpp:37 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 156 [ D.1181 ])
        (nil)))
(insn 140 139 141 14 (set (mem:HI (reg/f:SI 142 [ D.1179 ]) [0 *_77+0 S2 A16])
        (reg:HI 157 [ D.1178 ])) printf.cpp:37 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 157 [ D.1178 ])
        (expr_list:REG_DEAD (reg/f:SI 142 [ D.1179 ])
            (nil))))
(insn 141 140 142 14 (set (reg:HI 158 [ D.1178 ])
        (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1x") [flags 0x2]  <var_decl 0x7f80af469c60 x>) [0 x+0 S2 A16])) printf.cpp:36 92 {*movhi_internal}
     (nil))
(insn 142 141 143 14 (parallel [
            (set (reg:HI 159 [ D.1178 ])
                (plus:HI (reg:HI 158 [ D.1178 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:36 220 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 158 [ D.1178 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 143 142 173 14 (set (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1x") [flags 0x2]  <var_decl 0x7f80af469c60 x>) [0 x+0 S2 A16])
        (reg:HI 159 [ D.1178 ])) printf.cpp:36 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 159 [ D.1178 ])
        (nil)))
(jump_insn 173 143 174 14 (set (pc)
        (label_ref 144)) printf.cpp:36 654 {jump}
     (nil)
 -> 144)
;;  succ:       13 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 174 173 147)
;; basic block 15, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 160 161
(code_label 147 174 148 15 9 "" [1 uses])
(note 148 147 149 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 15 (set (reg:HI 160 [ D.1178 ])
        (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1y") [flags 0x2]  <var_decl 0x7f80af469cf0 y>) [0 y+0 S2 A16])) printf.cpp:35 92 {*movhi_internal}
     (nil))
(insn 150 149 151 15 (parallel [
            (set (reg:HI 161 [ D.1178 ])
                (plus:HI (reg:HI 160 [ D.1178 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:35 220 {*addhi_1}
     (expr_list:REG_DEAD (reg:HI 160 [ D.1178 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 151 150 175 15 (set (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1y") [flags 0x2]  <var_decl 0x7f80af469cf0 y>) [0 y+0 S2 A16])
        (reg:HI 161 [ D.1178 ])) printf.cpp:35 92 {*movhi_internal}
     (expr_list:REG_DEAD (reg:HI 161 [ D.1178 ])
        (nil)))
(jump_insn 175 151 176 15 (set (pc)
        (label_ref 152)) printf.cpp:35 654 {jump}
     (nil)
 -> 152)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 176 175 155)
;; basic block 16, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 155 176 156 16 8 "" [1 uses])
(note 156 155 157 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 16 (set (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1x") [flags 0x2]  <var_decl 0x7f80af469c60 x>) [0 x+0 S2 A16])
        (const_int 0 [0])) printf.cpp:38 92 {*movhi_internal}
     (nil))
(insn 158 157 159 16 (set (mem/c:HI (symbol_ref:SI ("_ZZ6printfPcE1y") [flags 0x2]  <var_decl 0x7f80af469cf0 y>) [0 y+0 S2 A16])
        (const_int 0 [0])) printf.cpp:39 92 {*movhi_internal}
     (nil))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 16, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;;              16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 159 158 160 17 7 "" [1 uses])
(note 160 159 161 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 177 17 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:SI (reg/f:SI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) printf.cpp:15 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 177 161 178 17 (set (pc)
        (label_ref 162)) printf.cpp:15 654 {jump}
     (nil)
 -> 162)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 178 177 180)
;; basic block 19, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 17, next block 18, flags: (NEW, RTL, MODIFIED)
;;  pred:       3
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 180 178 179 19 14 "" [1 uses])
(note 179 180 181 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 181 179 167 19 (const_int 0 [0]) printf.cpp:42 684 {nop}
     (nil))
;;  succ:       18 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 19, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 [100.0%]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 167 181 168 18 1 "" [0 uses])
(note 168 167 0 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

