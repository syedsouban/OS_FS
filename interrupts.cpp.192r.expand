
;; Function InterruptHandler::InterruptHandler(uint8_t, InterruptManager*) (_ZN16InterruptHandlerC2EhP16InterruptManager, funcdef_no=8, decl_uid=1310, cgraph_uid=8, symbol_order=8)

InterruptHandler::InterruptHandler(uint8_t, InterruptManager*) (struct InterruptHandler * const this, uint8_t interruptNumber, struct InterruptManager * interruptManager)
{
  int D.1503;
  int (*__vtbl_ptr_type) () * D.1502;
  int (*__vtbl_ptr_type) () * _1;
  int _9;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = &_ZTV16InterruptHandler + 8;
  this_3(D)->_vptr.InterruptHandler = _1;
  this_3(D)->interruptNumber = interruptNumber_5(D);
  this_3(D)->interruptManager = interruptManager_7(D);
  _9 = (int) interruptNumber_5(D);
  interruptManager_7(D)->handlers[_9] = this_3(D);
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 3 (this_3(D) - 3 )
Partition 5 (interruptNumber_5(D) - 5 )
Partition 7 (interruptManager_7(D) - 7 )
Partition 9 (_9 - 9 )


Partition map 

Partition 0 (this_3(D) - 3 )
Partition 1 (interruptNumber_5(D) - 5 )
Partition 2 (interruptManager_7(D) - 7 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_3(D) - 3 )
Partition 1 (interruptNumber_5(D) - 5 )
Partition 2 (interruptManager_7(D) - 7 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (this_3(D) - 3 )
Partition 2 (interruptNumber_5(D) - 5 )
Partition 3 (interruptManager_7(D) - 7 )
Partition 4 (_9 - 9 )

InterruptHandler::InterruptHandler(uint8_t, InterruptManager*) (struct InterruptHandler * const this, uint8_t interruptNumber, struct InterruptManager * interruptManager)
{
  int D.1503;
  int (*__vtbl_ptr_type) () * D.1502;
  int (*__vtbl_ptr_type) () * _1;
  int _9;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = &_ZTV16InterruptHandler + 8;
  this_3(D)->_vptr.InterruptHandler = _1;
  this_3(D)->interruptNumber = interruptNumber_5(D);
  this_3(D)->interruptManager = interruptManager_7(D);
  _9 = (int) interruptNumber_5(D);
  interruptManager_7(D)->handlers[_9] = this_3(D);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = &_ZTV16InterruptHandler + 8;

(insn 7 6 0 (set (reg/f:SI 87 [ D.1627 ])
        (const:SI (plus:SI (symbol_ref/i:SI ("_ZTV16InterruptHandler") [flags 0x2]  <var_decl 0x7f920469a900 _ZTV16InterruptHandler>)
                (const_int 8 [0x8])))) interrupts.cpp:5 -1
     (nil))

;; this_3(D)->_vptr.InterruptHandler = _1;

(insn 8 7 9 (set (reg/f:SI 90)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:5 -1
     (nil))

(insn 9 8 0 (set (mem/f/j:SI (reg/f:SI 90) [0 this_3(D)->_vptr.InterruptHandler+0 S4 A32])
        (reg/f:SI 87 [ D.1627 ])) interrupts.cpp:5 -1
     (nil))

;; this_3(D)->interruptNumber = interruptNumber_5(D);

(insn 10 9 11 (set (reg/f:SI 91)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:7 -1
     (nil))

(insn 11 10 12 (set (reg:QI 92)
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 interruptNumber+0 S1 A32])) interrupts.cpp:7 -1
     (nil))

(insn 12 11 0 (set (mem/j:QI (plus:SI (reg/f:SI 91)
                (const_int 4 [0x4])) [0 this_3(D)->interruptNumber+0 S1 A32])
        (reg:QI 92)) interrupts.cpp:7 -1
     (nil))

;; this_3(D)->interruptManager = interruptManager_7(D);

(insn 13 12 14 (set (reg/f:SI 93)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:8 -1
     (nil))

(insn 14 13 15 (set (reg/f:SI 94)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 interruptManager+0 S4 A32])) interrupts.cpp:8 -1
     (nil))

(insn 15 14 0 (set (mem/f/j:SI (plus:SI (reg/f:SI 93)
                (const_int 8 [0x8])) [0 this_3(D)->interruptManager+0 S4 A32])
        (reg/f:SI 94)) interrupts.cpp:8 -1
     (nil))

;; _9 = (int) interruptNumber_5(D);

(insn 16 15 0 (set (reg:SI 88 [ D.1628 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:9 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; interruptManager_7(D)->handlers[_9] = this_3(D);

(insn 17 16 18 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 interruptManager+0 S4 A32])) interrupts.cpp:9 -1
     (nil))

(insn 18 17 19 (set (reg/f:SI 96)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:9 -1
     (nil))

(insn 19 18 0 (set (mem/f/j:SI (plus:SI (mult:SI (reg:SI 88 [ D.1628 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 95)) [0 interruptManager_7(D)->handlers S4 A32])
        (reg/f:SI 96)) interrupts.cpp:9 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg:SI 89)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 interruptNumber+0 S4 A32])) interrupts.cpp:5 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 interruptNumber+0 S1 A32])
        (subreg:QI (reg:SI 89) 0)) interrupts.cpp:5 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 87 [ D.1627 ])
        (const:SI (plus:SI (symbol_ref/i:SI ("_ZTV16InterruptHandler") [flags 0x2]  <var_decl 0x7f920469a900 _ZTV16InterruptHandler>)
                (const_int 8 [0x8])))) interrupts.cpp:5 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 90)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:5 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/j:SI (reg/f:SI 90) [0 this_3(D)->_vptr.InterruptHandler+0 S4 A32])
        (reg/f:SI 87 [ D.1627 ])) interrupts.cpp:5 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 91)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:7 -1
     (nil))
(insn 11 10 12 2 (set (reg:QI 92)
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 interruptNumber+0 S1 A32])) interrupts.cpp:7 -1
     (nil))
(insn 12 11 13 2 (set (mem/j:QI (plus:SI (reg/f:SI 91)
                (const_int 4 [0x4])) [0 this_3(D)->interruptNumber+0 S1 A32])
        (reg:QI 92)) interrupts.cpp:7 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 93)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:8 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:SI 94)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 interruptManager+0 S4 A32])) interrupts.cpp:8 -1
     (nil))
(insn 15 14 16 2 (set (mem/f/j:SI (plus:SI (reg/f:SI 93)
                (const_int 8 [0x8])) [0 this_3(D)->interruptManager+0 S4 A32])
        (reg/f:SI 94)) interrupts.cpp:8 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 88 [ D.1628 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:9 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:SI 95)
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 interruptManager+0 S4 A32])) interrupts.cpp:9 -1
     (nil))
(insn 18 17 19 2 (set (reg/f:SI 96)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:9 -1
     (nil))
(insn 19 18 22 2 (set (mem/f/j:SI (plus:SI (mult:SI (reg:SI 88 [ D.1628 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 95)) [0 interruptManager_7(D)->handlers S4 A32])
        (reg/f:SI 96)) interrupts.cpp:9 -1
     (nil))
(insn 22 19 0 2 (const_int 0 [0]) interrupts.cpp:10 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function virtual uint32_t InterruptHandler::HandleInterrupt(uint32_t) (_ZN16InterruptHandler15HandleInterruptEj, funcdef_no=10, decl_uid=1304, cgraph_uid=10, symbol_order=10)

virtual uint32_t InterruptHandler::HandleInterrupt(uint32_t) (struct InterruptHandler * const this, uint32_t esp)
{
  uint32_t D.1504;
  uint32_t _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = esp_1(D);
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _2;
;;    succ:       EXIT

}



Partition map 

Partition 1 (esp_1(D) - 1 )
Partition 2 (_2 - 2 )


Partition map 

Partition 0 (esp_1(D) - 1 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (esp_1(D) - 1 )

After Coalescing:

Partition map 

Partition 0 (esp_1(D) - 1 )
Partition 1 (_2 - 2 )

virtual uint32_t InterruptHandler::HandleInterrupt(uint32_t) (struct InterruptHandler * const this, uint32_t esp)
{
  uint32_t D.1504;
  uint32_t _2;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = esp_1(D);
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _2;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _2 = esp_1(D);

(insn 5 4 0 (set (reg:SI 87 [ D.1629 ])
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 esp+0 S4 A32])) interrupts.cpp:13 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 6 5 7 3 "" [0 uses])

(note 7 6 0 NOTE_INSN_BASIC_BLOCK)

;; return _2;

(insn 8 7 9 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.1629 ])) interrupts.cpp:13 -1
     (nil))

(jump_insn 9 8 10 (set (pc)
        (label_ref 0)) interrupts.cpp:13 -1
     (nil))

(barrier 10 9 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 9.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg:SI 87 [ D.1629 ])
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 esp+0 S4 A32])) interrupts.cpp:13 -1
     (nil))
(insn 8 5 12 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.1629 ])) interrupts.cpp:13 -1
     (nil))
(insn 12 8 13 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) interrupts.cpp:14 -1
     (nil))
(insn 13 12 0 2 (use (reg/i:SI 0 ax)) interrupts.cpp:14 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function InterruptHandler::~InterruptHandler() (_ZN16InterruptHandlerD2Ev, funcdef_no=12, decl_uid=1317, cgraph_uid=12, symbol_order=12)

InterruptHandler::~InterruptHandler() (struct InterruptHandler * const this)
{
  int D.1515;
  unsigned char D.1514;
  struct InterruptManager * D.1513;
  struct InterruptHandler * D.1510;
  int D.1509;
  unsigned char D.1508;
  struct InterruptManager * D.1507;
  int (*__vtbl_ptr_type) () * D.1506;
  int (*__vtbl_ptr_type) () * _2;
  struct InterruptManager * _6;
  unsigned char _7;
  int _8;
  struct InterruptHandler * _9;
  struct InterruptManager * _10;
  unsigned char _11;
  int _12;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = &_ZTV16InterruptHandler + 8;
  this_4(D)->_vptr.InterruptHandler = _2;
  _6 = this_4(D)->interruptManager;
  _7 = this_4(D)->interruptNumber;
  _8 = (int) _7;
  _9 = _6->handlers[_8];
  if (_9 == this_4(D))
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _10 = this_4(D)->interruptManager;
  _11 = this_4(D)->interruptNumber;
  _12 = (int) _11;
  _10->handlers[_12] = 0B;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (_2 - 2 )
Partition 4 (this_4(D) - 4 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )


Partition map 

Partition 0 (this_4(D) - 4 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_4(D) - 4 )

After Coalescing:

Partition map 

Partition 0 (_2 - 2 )
Partition 1 (this_4(D) - 4 )
Partition 2 (_6 - 6 )
Partition 3 (_7 - 7 )
Partition 4 (_8 - 8 )
Partition 5 (_9 - 9 )
Partition 6 (_10 - 10 )
Partition 7 (_11 - 11 )
Partition 8 (_12 - 12 )

InterruptHandler::~InterruptHandler() (struct InterruptHandler * const this)
{
  int D.1515;
  unsigned char D.1514;
  struct InterruptManager * D.1513;
  struct InterruptHandler * D.1510;
  int D.1509;
  unsigned char D.1508;
  struct InterruptManager * D.1507;
  int (*__vtbl_ptr_type) () * D.1506;
  int (*__vtbl_ptr_type) () * _2;
  struct InterruptManager * _6;
  unsigned char _7;
  int _8;
  struct InterruptHandler * _9;
  struct InterruptManager * _10;
  unsigned char _11;
  int _12;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = &_ZTV16InterruptHandler + 8;
  this_4(D)->_vptr.InterruptHandler = _2;
  _6 = this_4(D)->interruptManager;
  _7 = this_4(D)->interruptNumber;
  _8 = (int) _7;
  _9 = _6->handlers[_8];
  if (_9 == this_4(D))
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _10 = this_4(D)->interruptManager;
  _11 = this_4(D)->interruptNumber;
  _12 = (int) _11;
  _10->handlers[_12] = 0B;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  MEM[(struct  &)this_4(D)] ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _2 = &_ZTV16InterruptHandler + 8;

(insn 5 4 0 (set (reg/f:SI 87 [ D.1630 ])
        (const:SI (plus:SI (symbol_ref/i:SI ("_ZTV16InterruptHandler") [flags 0x2]  <var_decl 0x7f920469a900 _ZTV16InterruptHandler>)
                (const_int 8 [0x8])))) interrupts.cpp:16 -1
     (nil))

;; this_4(D)->_vptr.InterruptHandler = _2;

(insn 6 5 7 (set (reg/f:SI 95)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:16 -1
     (nil))

(insn 7 6 0 (set (mem/f/j:SI (reg/f:SI 95) [0 this_4(D)->_vptr.InterruptHandler+0 S4 A32])
        (reg/f:SI 87 [ D.1630 ])) interrupts.cpp:16 -1
     (nil))

;; _6 = this_4(D)->interruptManager;

(insn 8 7 9 (set (reg/f:SI 96)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:17 -1
     (nil))

(insn 9 8 0 (set (reg/f:SI 88 [ D.1631 ])
        (mem/f/j:SI (plus:SI (reg/f:SI 96)
                (const_int 8 [0x8])) [0 this_4(D)->interruptManager+0 S4 A32])) interrupts.cpp:17 -1
     (nil))

;; _7 = this_4(D)->interruptNumber;

(insn 10 9 11 (set (reg/f:SI 97)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:17 -1
     (nil))

(insn 11 10 0 (set (reg:QI 89 [ D.1632 ])
        (mem/j:QI (plus:SI (reg/f:SI 97)
                (const_int 4 [0x4])) [0 this_4(D)->interruptNumber+0 S1 A32])) interrupts.cpp:17 -1
     (nil))

;; _8 = (int) _7;

(insn 12 11 0 (set (reg:SI 90 [ D.1633 ])
        (zero_extend:SI (reg:QI 89 [ D.1632 ]))) interrupts.cpp:17 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _9 = _6->handlers[_8];

(insn 13 12 0 (set (reg/f:SI 91 [ D.1634 ])
        (mem/f/j:SI (plus:SI (mult:SI (reg:SI 90 [ D.1633 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 88 [ D.1631 ])) [0 _6->handlers S4 A32])) interrupts.cpp:17 -1
     (nil))

;; if (_9 == this_4(D))

(insn 14 13 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 91 [ D.1634 ])
            (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32]))) interrupts.cpp:17 -1
     (nil))

(jump_insn 15 14 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) interrupts.cpp:17 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _10 = this_4(D)->interruptManager;

(insn 17 16 18 (set (reg/f:SI 98)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:18 -1
     (nil))

(insn 18 17 0 (set (reg/f:SI 92 [ D.1631 ])
        (mem/f/j:SI (plus:SI (reg/f:SI 98)
                (const_int 8 [0x8])) [0 this_4(D)->interruptManager+0 S4 A32])) interrupts.cpp:18 -1
     (nil))

;; _11 = this_4(D)->interruptNumber;

(insn 19 18 20 (set (reg/f:SI 99)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:18 -1
     (nil))

(insn 20 19 0 (set (reg:QI 93 [ D.1632 ])
        (mem/j:QI (plus:SI (reg/f:SI 99)
                (const_int 4 [0x4])) [0 this_4(D)->interruptNumber+0 S1 A32])) interrupts.cpp:18 -1
     (nil))

;; _12 = (int) _11;

(insn 21 20 0 (set (reg:SI 94 [ D.1633 ])
        (zero_extend:SI (reg:QI 93 [ D.1632 ]))) interrupts.cpp:18 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _10->handlers[_12] = 0B;

(insn 22 21 0 (set (mem/f/j:SI (plus:SI (mult:SI (reg:SI 94 [ D.1633 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 92 [ D.1631 ])) [0 _10->handlers S4 A32])
        (const_int 0 [0])) interrupts.cpp:18 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 23 22 24 5 "" [0 uses])

(note 24 23 0 NOTE_INSN_BASIC_BLOCK)

;; MEM[(struct  &)this_4(D)] ={v} {CLOBBER};

(nil)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 6
Merging block 5 into block 4...
Merged blocks 4 and 5.
Merged 4 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 87 [ D.1630 ])
        (const:SI (plus:SI (symbol_ref/i:SI ("_ZTV16InterruptHandler") [flags 0x2]  <var_decl 0x7f920469a900 _ZTV16InterruptHandler>)
                (const_int 8 [0x8])))) interrupts.cpp:16 -1
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 95)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:16 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/j:SI (reg/f:SI 95) [0 this_4(D)->_vptr.InterruptHandler+0 S4 A32])
        (reg/f:SI 87 [ D.1630 ])) interrupts.cpp:16 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 96)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:17 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 88 [ D.1631 ])
        (mem/f/j:SI (plus:SI (reg/f:SI 96)
                (const_int 8 [0x8])) [0 this_4(D)->interruptManager+0 S4 A32])) interrupts.cpp:17 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:SI 97)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:17 -1
     (nil))
(insn 11 10 12 2 (set (reg:QI 89 [ D.1632 ])
        (mem/j:QI (plus:SI (reg/f:SI 97)
                (const_int 4 [0x4])) [0 this_4(D)->interruptNumber+0 S1 A32])) interrupts.cpp:17 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 90 [ D.1633 ])
        (zero_extend:SI (reg:QI 89 [ D.1632 ]))) interrupts.cpp:17 -1
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 91 [ D.1634 ])
        (mem/f/j:SI (plus:SI (mult:SI (reg:SI 90 [ D.1633 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 88 [ D.1631 ])) [0 _6->handlers S4 A32])) interrupts.cpp:17 -1
     (nil))
(insn 14 13 15 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 91 [ D.1634 ])
            (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32]))) interrupts.cpp:17 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 25)
            (pc))) interrupts.cpp:17 612 {*jcc_1}
     (nil)
 -> 25)
;;  succ:       4 (FALLTHRU)
;;              6

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 16 15 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg/f:SI 98)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:18 -1
     (nil))
(insn 18 17 19 4 (set (reg/f:SI 92 [ D.1631 ])
        (mem/f/j:SI (plus:SI (reg/f:SI 98)
                (const_int 8 [0x8])) [0 this_4(D)->interruptManager+0 S4 A32])) interrupts.cpp:18 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:SI 99)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:18 -1
     (nil))
(insn 20 19 21 4 (set (reg:QI 93 [ D.1632 ])
        (mem/j:QI (plus:SI (reg/f:SI 99)
                (const_int 4 [0x4])) [0 this_4(D)->interruptNumber+0 S1 A32])) interrupts.cpp:18 -1
     (nil))
(insn 21 20 22 4 (set (reg:SI 94 [ D.1633 ])
        (zero_extend:SI (reg:QI 93 [ D.1632 ]))) interrupts.cpp:18 -1
     (nil))
(insn 22 21 25 4 (set (mem/f/j:SI (plus:SI (mult:SI (reg:SI 94 [ D.1633 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 92 [ D.1631 ])) [0 _10->handlers S4 A32])
        (const_int 0 [0])) interrupts.cpp:18 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
;;              2
(code_label 25 22 26 6 4 "" [1 uses])
(note 26 25 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function static void InterruptManager::SetInterruptDescriptorTableEntry(uint8_t, uint16_t, void (*)(), uint8_t, uint8_t) (_ZN16InterruptManager32SetInterruptDescriptorTableEntryEhtPFvvEhh, funcdef_no=14, decl_uid=1345, cgraph_uid=14, symbol_order=16)

static void InterruptManager::SetInterruptDescriptorTableEntry(uint8_t, uint16_t, void (*)(), uint8_t, uint8_t) (uint8_t interruptNumber, uint16_t csSelectorOffset, void (*<T3c0>) (void) handler, uint8_t DescriptorPriviligeLevel, uint8_t DescriptorType)
{
  const uint8_t IDT_DESC_PRESENT;
  int D.1532;
  unsigned char D.1531;
  unsigned char D.1530;
  unsigned char D.1529;
  int D.1528;
  int D.1527;
  int D.1526;
  int D.1525;
  int D.1524;
  short unsigned int D.1523;
  unsigned int D.1522;
  unsigned int handler.1;
  int D.1520;
  short unsigned int D.1519;
  int handler.0;
  int D.1517;
  int _3;
  int handler.0_5;
  short unsigned int _6;
  int _9;
  unsigned int handler.1_10;
  unsigned int _11;
  short unsigned int _12;
  int _14;
  int _17;
  int _19;
  int _20;
  int _21;
  unsigned char _22;
  unsigned char _24;
  unsigned char _25;
  int _27;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  IDT_DESC_PRESENT_1 = 128;
  _3 = (int) interruptNumber_2(D);
  handler.0_5 = (int) handler_4(D);
  _6 = (short unsigned int) handler.0_5;
  interruptDescriptorTable[_3].handlerAddressLowBits = _6;
  _9 = (int) interruptNumber_2(D);
  handler.1_10 = (unsigned int) handler_4(D);
  _11 = handler.1_10 >> 16;
  _12 = (short unsigned int) _11;
  interruptDescriptorTable[_9].handlerAddressHighBits = _12;
  _14 = (int) interruptNumber_2(D);
  interruptDescriptorTable[_14].gdt_cs_selector = csSelectorOffset_15(D);
  _17 = (int) interruptNumber_2(D);
  _19 = (int) DescriptorPriviligeLevel_18(D);
  _20 = _19 & 3;
  _21 = _20 << 5;
  _22 = (unsigned char) _21;
  _24 = _22 | DescriptorType_23(D);
  _25 = _24 | 128;
  interruptDescriptorTable[_17].access = _25;
  _27 = (int) interruptNumber_2(D);
  interruptDescriptorTable[_27].reserved = 0;
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (IDT_DESC_PRESENT_1 - 1 )
Partition 2 (interruptNumber_2(D) - 2 )
Partition 3 (_3 - 3 )
Partition 4 (handler_4(D) - 4 )
Partition 5 (handler.0_5 - 5 )
Partition 6 (_6 - 6 )
Partition 9 (_9 - 9 )
Partition 10 (handler.1_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 14 (_14 - 14 )
Partition 15 (csSelectorOffset_15(D) - 15 )
Partition 17 (_17 - 17 )
Partition 18 (DescriptorPriviligeLevel_18(D) - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (DescriptorType_23(D) - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 27 (_27 - 27 )


Partition map 

Partition 0 (interruptNumber_2(D) - 2 )
Partition 1 (handler_4(D) - 4 )
Partition 2 (csSelectorOffset_15(D) - 15 )
Partition 3 (DescriptorPriviligeLevel_18(D) - 18 )
Partition 4 (DescriptorType_23(D) - 23 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (interruptNumber_2(D) - 2 )
Partition 1 (handler_4(D) - 4 )
Partition 2 (csSelectorOffset_15(D) - 15 )
Partition 3 (DescriptorPriviligeLevel_18(D) - 18 )
Partition 4 (DescriptorType_23(D) - 23 )

After Coalescing:

Partition map 

Partition 0 (IDT_DESC_PRESENT_1 - 1 )
Partition 1 (interruptNumber_2(D) - 2 )
Partition 2 (_3 - 3 )
Partition 3 (handler_4(D) - 4 )
Partition 4 (handler.0_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_9 - 9 )
Partition 7 (handler.1_10 - 10 )
Partition 8 (_11 - 11 )
Partition 9 (_12 - 12 )
Partition 10 (_14 - 14 )
Partition 11 (csSelectorOffset_15(D) - 15 )
Partition 12 (_17 - 17 )
Partition 13 (DescriptorPriviligeLevel_18(D) - 18 )
Partition 14 (_19 - 19 )
Partition 15 (_20 - 20 )
Partition 16 (_21 - 21 )
Partition 17 (_22 - 22 )
Partition 18 (DescriptorType_23(D) - 23 )
Partition 19 (_24 - 24 )
Partition 20 (_25 - 25 )
Partition 21 (_27 - 27 )

static void InterruptManager::SetInterruptDescriptorTableEntry(uint8_t, uint16_t, void (*)(), uint8_t, uint8_t) (uint8_t interruptNumber, uint16_t csSelectorOffset, void (*<T3c0>) (void) handler, uint8_t DescriptorPriviligeLevel, uint8_t DescriptorType)
{
  const uint8_t IDT_DESC_PRESENT;
  int D.1532;
  unsigned char D.1531;
  unsigned char D.1530;
  unsigned char D.1529;
  int D.1528;
  int D.1527;
  int D.1526;
  int D.1525;
  int D.1524;
  short unsigned int D.1523;
  unsigned int D.1522;
  unsigned int handler.1;
  int D.1520;
  short unsigned int D.1519;
  int handler.0;
  int D.1517;
  int _3;
  int handler.0_5;
  short unsigned int _6;
  int _9;
  unsigned int handler.1_10;
  unsigned int _11;
  short unsigned int _12;
  int _14;
  int _17;
  int _19;
  int _20;
  int _21;
  unsigned char _22;
  unsigned char _24;
  unsigned char _25;
  int _27;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  IDT_DESC_PRESENT_1 = 128;
  _3 = (int) interruptNumber_2(D);
  handler.0_5 = (int) handler_4(D);
  _6 = (short unsigned int) handler.0_5;
  interruptDescriptorTable[_3].handlerAddressLowBits = _6;
  _9 = (int) interruptNumber_2(D);
  handler.1_10 = (unsigned int) handler_4(D);
  _11 = handler.1_10 >> 16;
  _12 = (short unsigned int) _11;
  interruptDescriptorTable[_9].handlerAddressHighBits = _12;
  _14 = (int) interruptNumber_2(D);
  interruptDescriptorTable[_14].gdt_cs_selector = csSelectorOffset_15(D);
  _17 = (int) interruptNumber_2(D);
  _19 = (int) DescriptorPriviligeLevel_18(D);
  _20 = _19 & 3;
  _21 = _20 << 5;
  _22 = (unsigned char) _21;
  _24 = _22 | DescriptorType_23(D);
  _25 = _24 | 128;
  interruptDescriptorTable[_17].access = _25;
  _27 = (int) interruptNumber_2(D);
  interruptDescriptorTable[_27].reserved = 0;
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; IDT_DESC_PRESENT_1 = 128;

(insn 13 12 0 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 IDT_DESC_PRESENT+0 S1 A8])
        (const_int -128 [0xffffffffffffff80])) interrupts.cpp:28 -1
     (nil))

;; _3 = (int) interruptNumber_2(D);

(insn 14 13 0 (set (reg:SI 87 [ D.1635 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:29 -1
     (nil))

;; _5 = (int) handler_4(D);

(insn 15 14 0 (set (reg:SI 88 [ D.1635 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 handler+0 S4 A32])) interrupts.cpp:29 -1
     (nil))

;; _6 = (short unsigned int) _5;

(insn 16 15 0 (set (reg:HI 89 [ D.1636 ])
        (subreg:HI (reg:SI 88 [ D.1635 ]) 0)) interrupts.cpp:29 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; interruptDescriptorTable[_3].handlerAddressLowBits = _6;

(insn 17 16 0 (set (mem/j:HI (plus:SI (mult:SI (reg:SI 87 [ D.1635 ])
                    (const_int 8 [0x8]))
                (symbol_ref:SI ("_ZN16InterruptManager24interruptDescriptorTableE") [flags 0x2]  <var_decl 0x7f920469ae10 interruptDescriptorTable>)) [0 interruptDescriptorTable[_3].handlerAddressLowBits+0 S2 A64])
        (reg:HI 89 [ D.1636 ])) interrupts.cpp:29 -1
     (nil))

;; _9 = (int) interruptNumber_2(D);

(insn 18 17 0 (set (reg:SI 90 [ D.1635 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:30 -1
     (nil))

;; _10 = (unsigned int) handler_4(D);

(insn 19 18 0 (set (reg:SI 91 [ D.1637 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 handler+0 S4 A32])) interrupts.cpp:30 -1
     (nil))

;; _11 = _10 >> 16;

(insn 20 19 0 (parallel [
            (set (reg:SI 92 [ D.1637 ])
                (lshiftrt:SI (reg:SI 91 [ D.1637 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:30 -1
     (nil))

;; _12 = (short unsigned int) _11;

(insn 21 20 0 (set (reg:HI 93 [ D.1636 ])
        (subreg:HI (reg:SI 92 [ D.1637 ]) 0)) interrupts.cpp:30 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; interruptDescriptorTable[_9].handlerAddressHighBits = _12;

(insn 22 21 0 (set (mem/j:HI (plus:SI (mult:SI (reg:SI 90 [ D.1635 ])
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("_ZN16InterruptManager24interruptDescriptorTableE") [flags 0x2]  <var_decl 0x7f920469ae10 interruptDescriptorTable>)
                        (const_int 6 [0x6])))) [0 interruptDescriptorTable[_9].handlerAddressHighBits+0 S2 A16])
        (reg:HI 93 [ D.1636 ])) interrupts.cpp:30 -1
     (nil))

;; _14 = (int) interruptNumber_2(D);

(insn 23 22 0 (set (reg:SI 94 [ D.1635 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:31 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; interruptDescriptorTable[_14].gdt_cs_selector = csSelectorOffset_15(D);

(insn 24 23 25 (set (reg:HI 107)
        (mem/c:HI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 csSelectorOffset+0 S2 A32])) interrupts.cpp:31 -1
     (nil))

(insn 25 24 0 (set (mem/j:HI (plus:SI (mult:SI (reg:SI 94 [ D.1635 ])
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("_ZN16InterruptManager24interruptDescriptorTableE") [flags 0x2]  <var_decl 0x7f920469ae10 interruptDescriptorTable>)
                        (const_int 2 [0x2])))) [0 interruptDescriptorTable[_14].gdt_cs_selector+0 S2 A16])
        (reg:HI 107)) interrupts.cpp:31 -1
     (nil))

;; _17 = (int) interruptNumber_2(D);

(insn 26 25 0 (set (reg:SI 95 [ D.1635 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:32 -1
     (nil))

;; _19 = (int) DescriptorPriviligeLevel_18(D);

(insn 27 26 0 (set (reg:SI 96 [ D.1635 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 DescriptorPriviligeLevel+0 S1 A32]))) interrupts.cpp:32 -1
     (nil))

;; _20 = _19 & 3;

(insn 28 27 0 (parallel [
            (set (reg:SI 97 [ D.1635 ])
                (and:SI (reg:SI 96 [ D.1635 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:32 -1
     (nil))

;; _21 = _20 << 5;

(insn 29 28 0 (parallel [
            (set (reg:SI 98 [ D.1635 ])
                (ashift:SI (reg:SI 97 [ D.1635 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:32 -1
     (nil))

;; _22 = (unsigned char) _21;

(insn 30 29 0 (set (reg:QI 99 [ D.1638 ])
        (subreg:QI (reg:SI 98 [ D.1635 ]) 0)) interrupts.cpp:32 -1
     (nil))

;; _24 = _22 | DescriptorType_23(D);

(insn 31 30 0 (parallel [
            (set (reg:QI 100 [ D.1638 ])
                (ior:QI (reg:QI 99 [ D.1638 ])
                    (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 DescriptorType+0 S1 A32])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:32 -1
     (nil))

;; _25 = _24 | 128;

(insn 32 31 0 (parallel [
            (set (reg:QI 101 [ D.1638 ])
                (ior:QI (reg:QI 100 [ D.1638 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:32 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; interruptDescriptorTable[_17].access = _25;

(insn 33 32 0 (set (mem/j:QI (plus:SI (mult:SI (reg:SI 95 [ D.1635 ])
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("_ZN16InterruptManager24interruptDescriptorTableE") [flags 0x2]  <var_decl 0x7f920469ae10 interruptDescriptorTable>)
                        (const_int 5 [0x5])))) [0 interruptDescriptorTable[_17].access+0 S1 A8])
        (reg:QI 101 [ D.1638 ])) interrupts.cpp:32 -1
     (nil))

;; _27 = (int) interruptNumber_2(D);

(insn 34 33 0 (set (reg:SI 102 [ D.1635 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:33 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; interruptDescriptorTable[_27].reserved = 0;

(insn 35 34 0 (set (mem/j:QI (plus:SI (mult:SI (reg:SI 102 [ D.1635 ])
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("_ZN16InterruptManager24interruptDescriptorTableE") [flags 0x2]  <var_decl 0x7f920469ae10 interruptDescriptorTable>)
                        (const_int 4 [0x4])))) [0 interruptDescriptorTable[_27].reserved+0 S1 A32])
        (const_int 0 [0])) interrupts.cpp:33 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 11 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 11 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 11 4 2 (set (reg:SI 103)
        (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 interruptNumber+0 S4 A32])) interrupts.cpp:27 -1
     (nil))
(insn 4 2 6 2 (set (reg:SI 104)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 csSelectorOffset+0 S4 A32])) interrupts.cpp:27 -1
     (nil))
(insn 6 4 8 2 (set (reg:SI 105)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 12 [0xc])) [0 DescriptorPriviligeLevel+0 S4 A32])) interrupts.cpp:27 -1
     (nil))
(insn 8 6 3 2 (set (reg:SI 106)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 16 [0x10])) [0 DescriptorType+0 S4 A32])) interrupts.cpp:27 -1
     (nil))
(insn 3 8 5 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32])
        (subreg:QI (reg:SI 103) 0)) interrupts.cpp:27 -1
     (nil))
(insn 5 3 7 2 (set (mem/c:HI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 csSelectorOffset+0 S2 A32])
        (subreg:HI (reg:SI 104) 0)) interrupts.cpp:27 -1
     (nil))
(insn 7 5 9 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [0 DescriptorPriviligeLevel+0 S1 A32])
        (subreg:QI (reg:SI 105) 0)) interrupts.cpp:27 -1
     (nil))
(insn 9 7 10 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [0 DescriptorType+0 S1 A32])
        (subreg:QI (reg:SI 106) 0)) interrupts.cpp:27 -1
     (nil))
(note 10 9 13 2 NOTE_INSN_FUNCTION_BEG)
(insn 13 10 14 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -1 [0xffffffffffffffff])) [0 IDT_DESC_PRESENT+0 S1 A8])
        (const_int -128 [0xffffffffffffff80])) interrupts.cpp:28 -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 87 [ D.1635 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:29 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 88 [ D.1635 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 handler+0 S4 A32])) interrupts.cpp:29 -1
     (nil))
(insn 16 15 17 2 (set (reg:HI 89 [ D.1636 ])
        (subreg:HI (reg:SI 88 [ D.1635 ]) 0)) interrupts.cpp:29 -1
     (nil))
(insn 17 16 18 2 (set (mem/j:HI (plus:SI (mult:SI (reg:SI 87 [ D.1635 ])
                    (const_int 8 [0x8]))
                (symbol_ref:SI ("_ZN16InterruptManager24interruptDescriptorTableE") [flags 0x2]  <var_decl 0x7f920469ae10 interruptDescriptorTable>)) [0 interruptDescriptorTable[_3].handlerAddressLowBits+0 S2 A64])
        (reg:HI 89 [ D.1636 ])) interrupts.cpp:29 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 90 [ D.1635 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:30 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 91 [ D.1637 ])
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 handler+0 S4 A32])) interrupts.cpp:30 -1
     (nil))
(insn 20 19 21 2 (parallel [
            (set (reg:SI 92 [ D.1637 ])
                (lshiftrt:SI (reg:SI 91 [ D.1637 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:30 -1
     (nil))
(insn 21 20 22 2 (set (reg:HI 93 [ D.1636 ])
        (subreg:HI (reg:SI 92 [ D.1637 ]) 0)) interrupts.cpp:30 -1
     (nil))
(insn 22 21 23 2 (set (mem/j:HI (plus:SI (mult:SI (reg:SI 90 [ D.1635 ])
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("_ZN16InterruptManager24interruptDescriptorTableE") [flags 0x2]  <var_decl 0x7f920469ae10 interruptDescriptorTable>)
                        (const_int 6 [0x6])))) [0 interruptDescriptorTable[_9].handlerAddressHighBits+0 S2 A16])
        (reg:HI 93 [ D.1636 ])) interrupts.cpp:30 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 94 [ D.1635 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:31 -1
     (nil))
(insn 24 23 25 2 (set (reg:HI 107)
        (mem/c:HI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [0 csSelectorOffset+0 S2 A32])) interrupts.cpp:31 -1
     (nil))
(insn 25 24 26 2 (set (mem/j:HI (plus:SI (mult:SI (reg:SI 94 [ D.1635 ])
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("_ZN16InterruptManager24interruptDescriptorTableE") [flags 0x2]  <var_decl 0x7f920469ae10 interruptDescriptorTable>)
                        (const_int 2 [0x2])))) [0 interruptDescriptorTable[_14].gdt_cs_selector+0 S2 A16])
        (reg:HI 107)) interrupts.cpp:31 -1
     (nil))
(insn 26 25 27 2 (set (reg:SI 95 [ D.1635 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:32 -1
     (nil))
(insn 27 26 28 2 (set (reg:SI 96 [ D.1635 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [0 DescriptorPriviligeLevel+0 S1 A32]))) interrupts.cpp:32 -1
     (nil))
(insn 28 27 29 2 (parallel [
            (set (reg:SI 97 [ D.1635 ])
                (and:SI (reg:SI 96 [ D.1635 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:32 -1
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg:SI 98 [ D.1635 ])
                (ashift:SI (reg:SI 97 [ D.1635 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:32 -1
     (nil))
(insn 30 29 31 2 (set (reg:QI 99 [ D.1638 ])
        (subreg:QI (reg:SI 98 [ D.1635 ]) 0)) interrupts.cpp:32 -1
     (nil))
(insn 31 30 32 2 (parallel [
            (set (reg:QI 100 [ D.1638 ])
                (ior:QI (reg:QI 99 [ D.1638 ])
                    (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [0 DescriptorType+0 S1 A32])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:32 -1
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg:QI 101 [ D.1638 ])
                (ior:QI (reg:QI 100 [ D.1638 ])
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:32 -1
     (nil))
(insn 33 32 34 2 (set (mem/j:QI (plus:SI (mult:SI (reg:SI 95 [ D.1635 ])
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("_ZN16InterruptManager24interruptDescriptorTableE") [flags 0x2]  <var_decl 0x7f920469ae10 interruptDescriptorTable>)
                        (const_int 5 [0x5])))) [0 interruptDescriptorTable[_17].access+0 S1 A8])
        (reg:QI 101 [ D.1638 ])) interrupts.cpp:32 -1
     (nil))
(insn 34 33 35 2 (set (reg:SI 102 [ D.1635 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:33 -1
     (nil))
(insn 35 34 38 2 (set (mem/j:QI (plus:SI (mult:SI (reg:SI 102 [ D.1635 ])
                    (const_int 8 [0x8]))
                (const:SI (plus:SI (symbol_ref:SI ("_ZN16InterruptManager24interruptDescriptorTableE") [flags 0x2]  <var_decl 0x7f920469ae10 interruptDescriptorTable>)
                        (const_int 4 [0x4])))) [0 interruptDescriptorTable[_27].reserved+0 S1 A32])
        (const_int 0 [0])) interrupts.cpp:33 -1
     (nil))
(insn 38 35 0 2 (const_int 0 [0]) interrupts.cpp:34 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function InterruptManager::InterruptManager(GlobalDescriptorTable*) (_ZN16InterruptManagerC2EP21GlobalDescriptorTable, funcdef_no=16, decl_uid=1373, cgraph_uid=16, symbol_order=18)

InterruptManager::InterruptManager(GlobalDescriptorTable*) (struct InterruptManager * const this, struct GlobalDescriptorTable * gdt)
{
  uint16_t i;
  struct interruptDescriptorTablePointer idt;
  const uint8_t IDT_INTERRUPT_GATE;
  uint8_t CodeSegment;
  struct Port8BitSlow * D.1563;
  struct Port8BitSlow * D.1562;
  struct Port8BitSlow * D.1561;
  struct Port8BitSlow * D.1560;
  unsigned int interruptDescriptorTable.2;
  short unsigned int D.1558;
  short unsigned int D.1557;
  short unsigned int D.1556;
  struct Port8BitSlow * D.1555;
  struct Port8BitSlow * D.1554;
  struct Port8BitSlow * D.1553;
  struct Port8BitSlow * D.1552;
  struct Port8BitSlow * D.1551;
  struct Port8BitSlow * D.1550;
  struct Port8BitSlow * D.1549;
  struct Port8BitSlow * D.1548;
  struct Port8BitSlow * D.1547;
  struct Port8BitSlow * D.1546;
  int D.1545;
  int D.1544;
  int D.1543;
  unsigned char D.1542;
  int D.1541;
  int D.1540;
  short unsigned int D.1537;
  struct Port8BitSlow * D.1536;
  struct Port8BitSlow * D.1535;
  struct Port8BitSlow * D.1534;
  struct Port8BitSlow * D.1533;
  struct Port8BitSlow * _4;
  struct Port8BitSlow * _7;
  struct Port8BitSlow * _9;
  struct Port8BitSlow * _11;
  short unsigned int _15;
  int _19;
  int _21;
  unsigned char _22;
  int _23;
  int _26;
  int _28;
  struct Port8BitSlow * _30;
  struct Port8BitSlow * _32;
  struct Port8BitSlow * _34;
  struct Port8BitSlow * _36;
  struct Port8BitSlow * _38;
  struct Port8BitSlow * _40;
  struct Port8BitSlow * _42;
  struct Port8BitSlow * _44;
  struct Port8BitSlow * _46;
  struct Port8BitSlow * _48;
  short unsigned int _50;
  short unsigned int _51;
  short unsigned int _52;
  unsigned int interruptDescriptorTable.2_54;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _4 = &this_3(D)->picMasterCommandPort;
  Port8BitSlow::Port8BitSlow (_4, 32);
  _7 = &this_3(D)->picSlaveCommandPort;
  Port8BitSlow::Port8BitSlow (_7, 160);
  _9 = &this_3(D)->picMasterDataPort;
  Port8BitSlow::Port8BitSlow (_9, 33);
  _11 = &this_3(D)->picSlaveDataPort;
  Port8BitSlow::Port8BitSlow (_11, 161);
  _15 = GlobalDescriptorTable::GetCodeSegmentOffset (gdt_13(D));
  CodeSegment_16 = (uint8_t) _15;
  IDT_INTERRUPT_GATE_17 = 14;
  i_18 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                4
  # i_1 = PHI <i_18(2), i_25(4)>
  if (i_1 > 255)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  _19 = (int) i_1;
  this_3(D)->handlers[_19] = 0B;
  _21 = (int) CodeSegment_16;
  _22 = (unsigned char) i_1;
  _23 = (int) _22;
  InterruptManager::SetInterruptDescriptorTableEntry (_23, _21, IgnoreInterruptRequest, 0, 14);
  i_25 = i_1 + 1;
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       3
  _26 = (int) CodeSegment_16;
  InterruptManager::SetInterruptDescriptorTableEntry (32, _26, handleInterruptRequest0x00, 0, 14);
  _28 = (int) CodeSegment_16;
  InterruptManager::SetInterruptDescriptorTableEntry (33, _28, handleInterruptRequest0x01, 0, 14);
  _30 = &this_3(D)->picMasterCommandPort;
  Port8BitSlow::Write (_30, 17);
  _32 = &this_3(D)->picSlaveCommandPort;
  Port8BitSlow::Write (_32, 17);
  _34 = &this_3(D)->picMasterDataPort;
  Port8BitSlow::Write (_34, 32);
  _36 = &this_3(D)->picSlaveDataPort;
  Port8BitSlow::Write (_36, 40);
  _38 = &this_3(D)->picMasterDataPort;
  Port8BitSlow::Write (_38, 4);
  _40 = &this_3(D)->picSlaveDataPort;
  Port8BitSlow::Write (_40, 2);
  _42 = &this_3(D)->picMasterDataPort;
  Port8BitSlow::Write (_42, 1);
  _44 = &this_3(D)->picSlaveDataPort;
  Port8BitSlow::Write (_44, 1);
  _46 = &this_3(D)->picMasterDataPort;
  Port8BitSlow::Write (_46, 0);
  _48 = &this_3(D)->picSlaveDataPort;
  Port8BitSlow::Write (_48, 0);
  _50 = 8;
  _51 = _50 * 256;
  _52 = _51 + 65535;
  idt.size = _52;
  interruptDescriptorTable.2_54 = (unsigned int) &interruptDescriptorTable;
  idt.base = interruptDescriptorTable.2_54;
  __asm__ __volatile__("lidt %0" :  : "m" idt);
  idt ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (i_1 - 1 )
Partition 3 (this_3(D) - 3 )
Partition 4 (_4 - 4 )
Partition 7 (_7 - 7 )
Partition 9 (_9 - 9 )
Partition 11 (_11 - 11 )
Partition 13 (gdt_13(D) - 13 )
Partition 15 (_15 - 15 )
Partition 16 (CodeSegment_16 - 16 )
Partition 17 (IDT_INTERRUPT_GATE_17 - 17 )
Partition 18 (i_18 - 18 )
Partition 19 (_19 - 19 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 25 (i_25 - 25 )
Partition 26 (_26 - 26 )
Partition 28 (_28 - 28 )
Partition 30 (_30 - 30 )
Partition 32 (_32 - 32 )
Partition 34 (_34 - 34 )
Partition 36 (_36 - 36 )
Partition 38 (_38 - 38 )
Partition 40 (_40 - 40 )
Partition 42 (_42 - 42 )
Partition 44 (_44 - 44 )
Partition 46 (_46 - 46 )
Partition 48 (_48 - 48 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 54 (interruptDescriptorTable.2_54 - 54 )


Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (this_3(D) - 3 )
Partition 2 (gdt_13(D) - 13 )
Partition 3 (i_18 - 18 )
Partition 4 (i_25 - 25 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) i_1 <-> i_18
(2147483646) i_1 <-> i_25

Partition map 

Partition 0 (i_1 - 1 )
Partition 1 (this_3(D) - 3 )
Partition 2 (gdt_13(D) - 13 )
Partition 3 (i_18 - 18 )
Partition 4 (i_25 - 25 )

Coalesce list: (1)i_1 & (18)i_18 [map: 0, 3] : Success -> 0
Coalesce list: (1)i_1 & (25)i_25 [map: 0, 4] : Success -> 0
Coalesce list: (1)i_1 & (25)i_1: Already Coalesced.
Coalesce list: (1)i_1 & (18)i_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (i_1 - 1 18 25 )
Partition 1 (this_3(D) - 3 )
Partition 2 (_4 - 4 )
Partition 3 (_7 - 7 )
Partition 4 (_9 - 9 )
Partition 5 (_11 - 11 )
Partition 6 (gdt_13(D) - 13 )
Partition 7 (_15 - 15 )
Partition 8 (CodeSegment_16 - 16 )
Partition 9 (IDT_INTERRUPT_GATE_17 - 17 )
Partition 10 (_19 - 19 )
Partition 11 (_21 - 21 )
Partition 12 (_22 - 22 )
Partition 13 (_23 - 23 )
Partition 14 (_26 - 26 )
Partition 15 (_28 - 28 )
Partition 16 (_30 - 30 )
Partition 17 (_32 - 32 )
Partition 18 (_34 - 34 )
Partition 19 (_36 - 36 )
Partition 20 (_38 - 38 )
Partition 21 (_40 - 40 )
Partition 22 (_42 - 42 )
Partition 23 (_44 - 44 )
Partition 24 (_46 - 46 )
Partition 25 (_48 - 48 )
Partition 26 (_50 - 50 )
Partition 27 (_51 - 51 )
Partition 28 (_52 - 52 )
Partition 29 (interruptDescriptorTable.2_54 - 54 )

InterruptManager::InterruptManager(GlobalDescriptorTable*) (struct InterruptManager * const this, struct GlobalDescriptorTable * gdt)
{
  uint16_t i;
  struct interruptDescriptorTablePointer idt;
  const uint8_t IDT_INTERRUPT_GATE;
  uint8_t CodeSegment;
  struct Port8BitSlow * D.1563;
  struct Port8BitSlow * D.1562;
  struct Port8BitSlow * D.1561;
  struct Port8BitSlow * D.1560;
  unsigned int interruptDescriptorTable.2;
  short unsigned int D.1558;
  short unsigned int D.1557;
  short unsigned int D.1556;
  struct Port8BitSlow * D.1555;
  struct Port8BitSlow * D.1554;
  struct Port8BitSlow * D.1553;
  struct Port8BitSlow * D.1552;
  struct Port8BitSlow * D.1551;
  struct Port8BitSlow * D.1550;
  struct Port8BitSlow * D.1549;
  struct Port8BitSlow * D.1548;
  struct Port8BitSlow * D.1547;
  struct Port8BitSlow * D.1546;
  int D.1545;
  int D.1544;
  int D.1543;
  unsigned char D.1542;
  int D.1541;
  int D.1540;
  short unsigned int D.1537;
  struct Port8BitSlow * D.1536;
  struct Port8BitSlow * D.1535;
  struct Port8BitSlow * D.1534;
  struct Port8BitSlow * D.1533;
  struct Port8BitSlow * _4;
  struct Port8BitSlow * _7;
  struct Port8BitSlow * _9;
  struct Port8BitSlow * _11;
  short unsigned int _15;
  int _19;
  int _21;
  unsigned char _22;
  int _23;
  int _26;
  int _28;
  struct Port8BitSlow * _30;
  struct Port8BitSlow * _32;
  struct Port8BitSlow * _34;
  struct Port8BitSlow * _36;
  struct Port8BitSlow * _38;
  struct Port8BitSlow * _40;
  struct Port8BitSlow * _42;
  struct Port8BitSlow * _44;
  struct Port8BitSlow * _46;
  struct Port8BitSlow * _48;
  short unsigned int _50;
  short unsigned int _51;
  short unsigned int _52;
  unsigned int interruptDescriptorTable.2_54;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _4 = &this_3(D)->picMasterCommandPort;
  Port8BitSlow::Port8BitSlow (_4, 32);
  _7 = &this_3(D)->picSlaveCommandPort;
  Port8BitSlow::Port8BitSlow (_7, 160);
  _9 = &this_3(D)->picMasterDataPort;
  Port8BitSlow::Port8BitSlow (_9, 33);
  _11 = &this_3(D)->picSlaveDataPort;
  Port8BitSlow::Port8BitSlow (_11, 161);
  _15 = GlobalDescriptorTable::GetCodeSegmentOffset (gdt_13(D));
  CodeSegment_16 = (uint8_t) _15;
  IDT_INTERRUPT_GATE_17 = 14;
  i_18 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                4
  # i_1 = PHI <i_18(2), i_25(4)>
  if (i_1 > 255)
    goto <bb 5>;
  else
    goto <bb 4>;
;;    succ:       5
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  _19 = (int) i_1;
  this_3(D)->handlers[_19] = 0B;
  _21 = (int) CodeSegment_16;
  _22 = (unsigned char) i_1;
  _23 = (int) _22;
  InterruptManager::SetInterruptDescriptorTableEntry (_23, _21, IgnoreInterruptRequest, 0, 14);
  i_25 = i_1 + 1;
  goto <bb 3>;
;;    succ:       3

;;   basic block 5, loop depth 0
;;    pred:       3
  _26 = (int) CodeSegment_16;
  InterruptManager::SetInterruptDescriptorTableEntry (32, _26, handleInterruptRequest0x00, 0, 14);
  _28 = (int) CodeSegment_16;
  InterruptManager::SetInterruptDescriptorTableEntry (33, _28, handleInterruptRequest0x01, 0, 14);
  _30 = &this_3(D)->picMasterCommandPort;
  Port8BitSlow::Write (_30, 17);
  _32 = &this_3(D)->picSlaveCommandPort;
  Port8BitSlow::Write (_32, 17);
  _34 = &this_3(D)->picMasterDataPort;
  Port8BitSlow::Write (_34, 32);
  _36 = &this_3(D)->picSlaveDataPort;
  Port8BitSlow::Write (_36, 40);
  _38 = &this_3(D)->picMasterDataPort;
  Port8BitSlow::Write (_38, 4);
  _40 = &this_3(D)->picSlaveDataPort;
  Port8BitSlow::Write (_40, 2);
  _42 = &this_3(D)->picMasterDataPort;
  Port8BitSlow::Write (_42, 1);
  _44 = &this_3(D)->picSlaveDataPort;
  Port8BitSlow::Write (_44, 1);
  _46 = &this_3(D)->picMasterDataPort;
  Port8BitSlow::Write (_46, 0);
  _48 = &this_3(D)->picSlaveDataPort;
  Port8BitSlow::Write (_48, 0);
  _50 = 8;
  _51 = _50 * 256;
  _52 = _51 + 65535;
  idt.size = _52;
  interruptDescriptorTable.2_54 = (unsigned int) &interruptDescriptorTable;
  idt.base = interruptDescriptorTable.2_54;
  __asm__ __volatile__("lidt %0" :  : "m" idt);
  idt ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _4 = &this_3(D)->picMasterCommandPort;

(insn 5 4 6 (set (reg/f:SI 112)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:40 -1
     (nil))

(insn 6 5 0 (parallel [
            (set (reg/f:SI 87 [ D.1639 ])
                (plus:SI (reg/f:SI 112)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1024 [0x400]))
        (nil)))

;; Port8BitSlow::Port8BitSlow (_4, 32);

(insn 7 6 8 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 8 7 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 32 [0x20])) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 9 8 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 87 [ D.1639 ])) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 10 9 11 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlowC1Et") [flags 0x41]  <function_decl 0x7f920468dd80 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:40 -1
     (nil)
    (nil))

(insn 11 10 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _7 = &this_3(D)->picSlaveCommandPort;

(insn 12 11 13 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:40 -1
     (nil))

(insn 13 12 0 (parallel [
            (set (reg/f:SI 88 [ D.1639 ])
                (plus:SI (reg/f:SI 113)
                    (const_int 1032 [0x408])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1032 [0x408]))
        (nil)))

;; Port8BitSlow::Port8BitSlow (_7, 160);

(insn 14 13 15 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 15 14 16 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 160 [0xa0])) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 16 15 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 88 [ D.1639 ])) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 17 16 18 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlowC1Et") [flags 0x41]  <function_decl 0x7f920468dd80 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:40 -1
     (nil)
    (nil))

(insn 18 17 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _9 = &this_3(D)->picMasterDataPort;

(insn 19 18 20 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:40 -1
     (nil))

(insn 20 19 0 (parallel [
            (set (reg/f:SI 89 [ D.1639 ])
                (plus:SI (reg/f:SI 114)
                    (const_int 1040 [0x410])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1040 [0x410]))
        (nil)))

;; Port8BitSlow::Port8BitSlow (_9, 33);

(insn 21 20 22 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 22 21 23 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 33 [0x21])) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 23 22 24 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 89 [ D.1639 ])) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 24 23 25 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlowC1Et") [flags 0x41]  <function_decl 0x7f920468dd80 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:40 -1
     (nil)
    (nil))

(insn 25 24 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _11 = &this_3(D)->picSlaveDataPort;

(insn 26 25 27 (set (reg/f:SI 115)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:40 -1
     (nil))

(insn 27 26 0 (parallel [
            (set (reg/f:SI 90 [ D.1639 ])
                (plus:SI (reg/f:SI 115)
                    (const_int 1048 [0x418])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1048 [0x418]))
        (nil)))

;; Port8BitSlow::Port8BitSlow (_11, 161);

(insn 28 27 29 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 29 28 30 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 161 [0xa1])) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 30 29 31 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 90 [ D.1639 ])) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 31 30 32 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlowC1Et") [flags 0x41]  <function_decl 0x7f920468dd80 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:40 -1
     (nil)
    (nil))

(insn 32 31 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _15 = GlobalDescriptorTable::GetCodeSegmentOffset (gdt_13(D));

(insn 33 32 34 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:43 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 34 33 35 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gdt+0 S4 A32])) interrupts.cpp:43 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 35 34 36 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZN21GlobalDescriptorTable20GetCodeSegmentOffsetEv") [flags 0x41]  <function_decl 0x7f92046825e8 GetCodeSegmentOffset>) [0 GetCodeSegmentOffset S1 A8])
            (const_int 16 [0x10]))) interrupts.cpp:43 -1
     (nil)
    (nil))

(insn 36 35 37 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:43 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

(insn 37 36 0 (set (reg:HI 91 [ D.1640 ])
        (reg:HI 0 ax)) interrupts.cpp:43 -1
     (nil))

;; CodeSegment_16 = (uint8_t) _15;

(insn 38 37 0 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -3 [0xfffffffffffffffd])) [0 CodeSegment+0 S1 A8])
        (subreg:QI (reg:HI 91 [ D.1640 ]) 0)) interrupts.cpp:43 -1
     (nil))

;; IDT_INTERRUPT_GATE_17 = 14;

(insn 39 38 0 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 IDT_INTERRUPT_GATE+0 S1 A8])
        (const_int 14 [0xe])) interrupts.cpp:44 -1
     (nil))

;; i_18 = 0;

(insn 40 39 0 (set (mem/c:HI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 i+0 S2 A16])
        (const_int 0 [0])) interrupts.cpp:45 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; if (i_1 > 255)

(insn 42 41 43 (set (reg:CC 17 flags)
        (compare:CC (mem/c:HI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 i+0 S2 A16])
            (const_int 255 [0xff]))) interrupts.cpp:45 -1
     (nil))

(jump_insn 43 42 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) interrupts.cpp:45 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _19 = (int) i_1;

(insn 45 44 0 (set (reg:SI 92 [ D.1641 ])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 i+0 S2 A16]))) interrupts.cpp:46 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; this_3(D)->handlers[_19] = 0B;

(insn 46 45 47 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:46 -1
     (nil))

(insn 47 46 0 (set (mem/f/j:SI (plus:SI (mult:SI (reg:SI 92 [ D.1641 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 116)) [0 this_3(D)->handlers S4 A32])
        (const_int 0 [0])) interrupts.cpp:46 -1
     (nil))

;; _21 = (int) CodeSegment_16;

(insn 48 47 0 (set (reg:SI 93 [ D.1641 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -3 [0xfffffffffffffffd])) [0 CodeSegment+0 S1 A8]))) interrupts.cpp:47 -1
     (nil))

;; _22 = (unsigned char) i_1;

(insn 49 48 50 (set (reg:HI 117)
        (mem/c:HI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 i+0 S2 A16])) interrupts.cpp:47 -1
     (nil))

(insn 50 49 0 (set (reg:QI 94 [ D.1642 ])
        (subreg:QI (reg:HI 117) 0)) interrupts.cpp:47 -1
     (nil))

;; _23 = (int) _22;

(insn 51 50 0 (set (reg:SI 95 [ D.1641 ])
        (zero_extend:SI (reg:QI 94 [ D.1642 ]))) interrupts.cpp:47 -1
     (nil))

;; InterruptManager::SetInterruptDescriptorTableEntry (_23, _21, IgnoreInterruptRequest, 0, 14);

(insn 52 51 53 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:47 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 53 52 54 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 14 [0xe])) interrupts.cpp:47 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(insn 54 53 55 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) interrupts.cpp:47 -1
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))

(insn 55 54 56 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (symbol_ref:SI ("_ZN16InterruptManager22IgnoreInterruptRequestEv") [flags 0x41]  <function_decl 0x7f92046a7510 IgnoreInterruptRequest>)) interrupts.cpp:47 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))

(insn 56 55 57 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg:SI 93 [ D.1641 ])) interrupts.cpp:47 -1
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))

(insn 57 56 58 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg:SI 95 [ D.1641 ])) interrupts.cpp:47 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))

(call_insn 58 57 59 (call (mem:QI (symbol_ref:SI ("_ZN16InterruptManager32SetInterruptDescriptorTableEntryEhtPFvvEhh") [flags 0x3]  <function_decl 0x7f920469cd80 SetInterruptDescriptorTableEntry>) [0 SetInterruptDescriptorTableEntry S1 A8])
        (const_int 32 [0x20])) interrupts.cpp:47 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 59 58 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:47 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; i_25 = i_1 + 1;

(insn 60 59 0 (parallel [
            (set (mem/c:HI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -2 [0xfffffffffffffffe])) [0 i+0 S2 A16])
                (plus:HI (mem/c:HI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -2 [0xfffffffffffffffe])) [0 i+0 S2 A16])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:45 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 64 63 65 9 "" [0 uses])

(note 65 64 0 NOTE_INSN_BASIC_BLOCK)

;; _26 = (int) CodeSegment_16;

(insn 66 65 0 (set (reg:SI 96 [ D.1641 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -3 [0xfffffffffffffffd])) [0 CodeSegment+0 S1 A8]))) interrupts.cpp:49 -1
     (nil))

;; InterruptManager::SetInterruptDescriptorTableEntry (32, _26, handleInterruptRequest0x00, 0, 14);

(insn 67 66 68 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:49 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 68 67 69 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 14 [0xe])) interrupts.cpp:49 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(insn 69 68 70 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) interrupts.cpp:49 -1
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))

(insn 70 69 71 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (symbol_ref:SI ("_ZN16InterruptManager26handleInterruptRequest0x00Ev") [flags 0x41]  <function_decl 0x7f92046a7360 handleInterruptRequest0x00>)) interrupts.cpp:49 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))

(insn 71 70 72 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg:SI 96 [ D.1641 ])) interrupts.cpp:49 -1
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))

(insn 72 71 73 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 32 [0x20])) interrupts.cpp:49 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))

(call_insn 73 72 74 (call (mem:QI (symbol_ref:SI ("_ZN16InterruptManager32SetInterruptDescriptorTableEntryEhtPFvvEhh") [flags 0x3]  <function_decl 0x7f920469cd80 SetInterruptDescriptorTableEntry>) [0 SetInterruptDescriptorTableEntry S1 A8])
        (const_int 32 [0x20])) interrupts.cpp:49 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 74 73 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:49 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _28 = (int) CodeSegment_16;

(insn 75 74 0 (set (reg:SI 97 [ D.1641 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -3 [0xfffffffffffffffd])) [0 CodeSegment+0 S1 A8]))) interrupts.cpp:50 -1
     (nil))

;; InterruptManager::SetInterruptDescriptorTableEntry (33, _28, handleInterruptRequest0x01, 0, 14);

(insn 76 75 77 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:50 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 77 76 78 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 14 [0xe])) interrupts.cpp:50 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(insn 78 77 79 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) interrupts.cpp:50 -1
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))

(insn 79 78 80 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (symbol_ref:SI ("_ZN16InterruptManager26handleInterruptRequest0x01Ev") [flags 0x41]  <function_decl 0x7f92046a7438 handleInterruptRequest0x01>)) interrupts.cpp:50 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))

(insn 80 79 81 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg:SI 97 [ D.1641 ])) interrupts.cpp:50 -1
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))

(insn 81 80 82 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 33 [0x21])) interrupts.cpp:50 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))

(call_insn 82 81 83 (call (mem:QI (symbol_ref:SI ("_ZN16InterruptManager32SetInterruptDescriptorTableEntryEhtPFvvEhh") [flags 0x3]  <function_decl 0x7f920469cd80 SetInterruptDescriptorTableEntry>) [0 SetInterruptDescriptorTableEntry S1 A8])
        (const_int 32 [0x20])) interrupts.cpp:50 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 83 82 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:50 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _30 = &this_3(D)->picMasterCommandPort;

(insn 84 83 85 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:52 -1
     (nil))

(insn 85 84 0 (parallel [
            (set (reg/f:SI 98 [ D.1639 ])
                (plus:SI (reg/f:SI 118)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:52 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1024 [0x400]))
        (nil)))

;; Port8BitSlow::Write (_30, 17);

(insn 86 85 87 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:52 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 87 86 88 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 17 [0x11])) interrupts.cpp:52 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 88 87 89 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 98 [ D.1639 ])) interrupts.cpp:52 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 89 88 90 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:52 -1
     (nil)
    (nil))

(insn 90 89 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:52 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _32 = &this_3(D)->picSlaveCommandPort;

(insn 91 90 92 (set (reg/f:SI 119)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:53 -1
     (nil))

(insn 92 91 0 (parallel [
            (set (reg/f:SI 99 [ D.1639 ])
                (plus:SI (reg/f:SI 119)
                    (const_int 1032 [0x408])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:53 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1032 [0x408]))
        (nil)))

;; Port8BitSlow::Write (_32, 17);

(insn 93 92 94 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:53 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 94 93 95 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 17 [0x11])) interrupts.cpp:53 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 95 94 96 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 99 [ D.1639 ])) interrupts.cpp:53 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 96 95 97 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:53 -1
     (nil)
    (nil))

(insn 97 96 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:53 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _34 = &this_3(D)->picMasterDataPort;

(insn 98 97 99 (set (reg/f:SI 120)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:55 -1
     (nil))

(insn 99 98 0 (parallel [
            (set (reg/f:SI 100 [ D.1639 ])
                (plus:SI (reg/f:SI 120)
                    (const_int 1040 [0x410])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:55 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1040 [0x410]))
        (nil)))

;; Port8BitSlow::Write (_34, 32);

(insn 100 99 101 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:55 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 101 100 102 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 32 [0x20])) interrupts.cpp:55 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 102 101 103 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 100 [ D.1639 ])) interrupts.cpp:55 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 103 102 104 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:55 -1
     (nil)
    (nil))

(insn 104 103 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:55 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _36 = &this_3(D)->picSlaveDataPort;

(insn 105 104 106 (set (reg/f:SI 121)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:56 -1
     (nil))

(insn 106 105 0 (parallel [
            (set (reg/f:SI 101 [ D.1639 ])
                (plus:SI (reg/f:SI 121)
                    (const_int 1048 [0x418])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:56 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1048 [0x418]))
        (nil)))

;; Port8BitSlow::Write (_36, 40);

(insn 107 106 108 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:56 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 108 107 109 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 40 [0x28])) interrupts.cpp:56 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 109 108 110 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 101 [ D.1639 ])) interrupts.cpp:56 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 110 109 111 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:56 -1
     (nil)
    (nil))

(insn 111 110 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:56 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _38 = &this_3(D)->picMasterDataPort;

(insn 112 111 113 (set (reg/f:SI 122)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:58 -1
     (nil))

(insn 113 112 0 (parallel [
            (set (reg/f:SI 102 [ D.1639 ])
                (plus:SI (reg/f:SI 122)
                    (const_int 1040 [0x410])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:58 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1040 [0x410]))
        (nil)))

;; Port8BitSlow::Write (_38, 4);

(insn 114 113 115 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:58 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 115 114 116 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 4 [0x4])) interrupts.cpp:58 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 116 115 117 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 102 [ D.1639 ])) interrupts.cpp:58 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 117 116 118 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:58 -1
     (nil)
    (nil))

(insn 118 117 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:58 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _40 = &this_3(D)->picSlaveDataPort;

(insn 119 118 120 (set (reg/f:SI 123)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:59 -1
     (nil))

(insn 120 119 0 (parallel [
            (set (reg/f:SI 103 [ D.1639 ])
                (plus:SI (reg/f:SI 123)
                    (const_int 1048 [0x418])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:59 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1048 [0x418]))
        (nil)))

;; Port8BitSlow::Write (_40, 2);

(insn 121 120 122 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:59 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 122 121 123 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 2 [0x2])) interrupts.cpp:59 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 123 122 124 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 103 [ D.1639 ])) interrupts.cpp:59 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 124 123 125 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:59 -1
     (nil)
    (nil))

(insn 125 124 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:59 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _42 = &this_3(D)->picMasterDataPort;

(insn 126 125 127 (set (reg/f:SI 124)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:61 -1
     (nil))

(insn 127 126 0 (parallel [
            (set (reg/f:SI 104 [ D.1639 ])
                (plus:SI (reg/f:SI 124)
                    (const_int 1040 [0x410])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:61 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1040 [0x410]))
        (nil)))

;; Port8BitSlow::Write (_42, 1);

(insn 128 127 129 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:61 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 129 128 130 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 1 [0x1])) interrupts.cpp:61 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 130 129 131 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 104 [ D.1639 ])) interrupts.cpp:61 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 131 130 132 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:61 -1
     (nil)
    (nil))

(insn 132 131 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:61 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _44 = &this_3(D)->picSlaveDataPort;

(insn 133 132 134 (set (reg/f:SI 125)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:62 -1
     (nil))

(insn 134 133 0 (parallel [
            (set (reg/f:SI 105 [ D.1639 ])
                (plus:SI (reg/f:SI 125)
                    (const_int 1048 [0x418])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:62 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1048 [0x418]))
        (nil)))

;; Port8BitSlow::Write (_44, 1);

(insn 135 134 136 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:62 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 136 135 137 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 1 [0x1])) interrupts.cpp:62 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 137 136 138 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 105 [ D.1639 ])) interrupts.cpp:62 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 138 137 139 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:62 -1
     (nil)
    (nil))

(insn 139 138 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:62 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _46 = &this_3(D)->picMasterDataPort;

(insn 140 139 141 (set (reg/f:SI 126)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:64 -1
     (nil))

(insn 141 140 0 (parallel [
            (set (reg/f:SI 106 [ D.1639 ])
                (plus:SI (reg/f:SI 126)
                    (const_int 1040 [0x410])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:64 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1040 [0x410]))
        (nil)))

;; Port8BitSlow::Write (_46, 0);

(insn 142 141 143 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:64 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 143 142 144 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) interrupts.cpp:64 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 144 143 145 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 106 [ D.1639 ])) interrupts.cpp:64 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 145 144 146 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:64 -1
     (nil)
    (nil))

(insn 146 145 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:64 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _48 = &this_3(D)->picSlaveDataPort;

(insn 147 146 148 (set (reg/f:SI 127)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:65 -1
     (nil))

(insn 148 147 0 (parallel [
            (set (reg/f:SI 107 [ D.1639 ])
                (plus:SI (reg/f:SI 127)
                    (const_int 1048 [0x418])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:65 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1048 [0x418]))
        (nil)))

;; Port8BitSlow::Write (_48, 0);

(insn 149 148 150 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:65 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 150 149 151 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) interrupts.cpp:65 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 151 150 152 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 107 [ D.1639 ])) interrupts.cpp:65 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 152 151 153 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:65 -1
     (nil)
    (nil))

(insn 153 152 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:65 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _50 = 8;

(insn 154 153 0 (set (reg:HI 108 [ D.1640 ])
        (const_int 8 [0x8])) interrupts.cpp:69 -1
     (nil))

;; _51 = _50 * 256;

(insn 155 154 0 (parallel [
            (set (reg:HI 109 [ D.1640 ])
                (ashift:HI (reg:HI 108 [ D.1640 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:69 -1
     (nil))

;; _52 = _51 + 65535;

(insn 156 155 0 (parallel [
            (set (reg:HI 110 [ D.1640 ])
                (plus:HI (reg:HI 109 [ D.1640 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:69 -1
     (nil))

;; idt.size = _52;

(insn 157 156 0 (set (mem/j/c:HI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 idt.size+0 S2 A16])
        (reg:HI 110 [ D.1640 ])) interrupts.cpp:69 -1
     (nil))

;; _54 = (unsigned int) &interruptDescriptorTable;

(insn 158 157 0 (set (reg:SI 111 [ D.1643 ])
        (symbol_ref:SI ("_ZN16InterruptManager24interruptDescriptorTableE") [flags 0x2]  <var_decl 0x7f920469ae10 interruptDescriptorTable>)) interrupts.cpp:70 -1
     (nil))

;; idt.base = _54;

(insn 159 158 0 (set (mem/j/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 idt.base+0 S4 A16])
        (reg:SI 111 [ D.1643 ])) interrupts.cpp:70 -1
     (nil))

;; __asm__ __volatile__("lidt %0" :  : "m" idt);

(insn 160 159 0 (parallel [
            (asm_operands/v ("lidt %0") ("") 0 [
                    (mem/c:BLK (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -10 [0xfffffffffffffff6])) [0 idt+0 S6 A16])
                ]
                 [
                    (asm_input:BLK ("m") interrupts.cpp:71)
                ]
                 [] interrupts.cpp:71)
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) interrupts.cpp:71 -1
     (nil))

;; idt ={v} {CLOBBER};

(nil)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 112)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:40 -1
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg/f:SI 87 [ D.1639 ])
                (plus:SI (reg/f:SI 112)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1024 [0x400]))
        (nil)))
(insn 7 6 8 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 8 7 9 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 32 [0x20])) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 87 [ D.1639 ])) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlowC1Et") [flags 0x41]  <function_decl 0x7f920468dd80 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:40 -1
     (nil)
    (nil))
(insn 11 10 12 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 12 11 13 2 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:40 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg/f:SI 88 [ D.1639 ])
                (plus:SI (reg/f:SI 113)
                    (const_int 1032 [0x408])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1032 [0x408]))
        (nil)))
(insn 14 13 15 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 15 14 16 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 160 [0xa0])) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 16 15 17 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 88 [ D.1639 ])) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 17 16 18 2 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlowC1Et") [flags 0x41]  <function_decl 0x7f920468dd80 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:40 -1
     (nil)
    (nil))
(insn 18 17 19 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 19 18 20 2 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:40 -1
     (nil))
(insn 20 19 21 2 (parallel [
            (set (reg/f:SI 89 [ D.1639 ])
                (plus:SI (reg/f:SI 114)
                    (const_int 1040 [0x410])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1040 [0x410]))
        (nil)))
(insn 21 20 22 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 22 21 23 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 33 [0x21])) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 23 22 24 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 89 [ D.1639 ])) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 24 23 25 2 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlowC1Et") [flags 0x41]  <function_decl 0x7f920468dd80 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:40 -1
     (nil)
    (nil))
(insn 25 24 26 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 26 25 27 2 (set (reg/f:SI 115)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:40 -1
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg/f:SI 90 [ D.1639 ])
                (plus:SI (reg/f:SI 115)
                    (const_int 1048 [0x418])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1048 [0x418]))
        (nil)))
(insn 28 27 29 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 29 28 30 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 161 [0xa1])) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 30 29 31 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 90 [ D.1639 ])) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 31 30 32 2 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlowC1Et") [flags 0x41]  <function_decl 0x7f920468dd80 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:40 -1
     (nil)
    (nil))
(insn 32 31 33 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:40 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 33 32 34 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:43 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 34 33 35 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 gdt+0 S4 A32])) interrupts.cpp:43 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 35 34 36 2 (set (reg:HI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZN21GlobalDescriptorTable20GetCodeSegmentOffsetEv") [flags 0x41]  <function_decl 0x7f92046825e8 GetCodeSegmentOffset>) [0 GetCodeSegmentOffset S1 A8])
            (const_int 16 [0x10]))) interrupts.cpp:43 -1
     (nil)
    (nil))
(insn 36 35 37 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:43 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 37 36 38 2 (set (reg:HI 91 [ D.1640 ])
        (reg:HI 0 ax)) interrupts.cpp:43 -1
     (nil))
(insn 38 37 39 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -3 [0xfffffffffffffffd])) [0 CodeSegment+0 S1 A8])
        (subreg:QI (reg:HI 91 [ D.1640 ]) 0)) interrupts.cpp:43 -1
     (nil))
(insn 39 38 40 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 IDT_INTERRUPT_GATE+0 S1 A8])
        (const_int 14 [0xe])) interrupts.cpp:44 -1
     (nil))
(insn 40 39 61 2 (set (mem/c:HI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 i+0 S2 A16])
        (const_int 0 [0])) interrupts.cpp:45 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              5 (DFS_BACK)
(code_label 61 40 41 4 10 "" [1 uses])
(note 41 61 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 4 (set (reg:CC 17 flags)
        (compare:CC (mem/c:HI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 i+0 S2 A16])
            (const_int 255 [0xff]))) interrupts.cpp:45 -1
     (nil))
(jump_insn 43 42 44 4 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) interrupts.cpp:45 -1
     (nil)
 -> 64)
;;  succ:       6
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 44 43 45 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 5 (set (reg:SI 92 [ D.1641 ])
        (zero_extend:SI (mem/c:HI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -2 [0xfffffffffffffffe])) [0 i+0 S2 A16]))) interrupts.cpp:46 -1
     (nil))
(insn 46 45 47 5 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:46 -1
     (nil))
(insn 47 46 48 5 (set (mem/f/j:SI (plus:SI (mult:SI (reg:SI 92 [ D.1641 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 116)) [0 this_3(D)->handlers S4 A32])
        (const_int 0 [0])) interrupts.cpp:46 -1
     (nil))
(insn 48 47 49 5 (set (reg:SI 93 [ D.1641 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -3 [0xfffffffffffffffd])) [0 CodeSegment+0 S1 A8]))) interrupts.cpp:47 -1
     (nil))
(insn 49 48 50 5 (set (reg:HI 117)
        (mem/c:HI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -2 [0xfffffffffffffffe])) [0 i+0 S2 A16])) interrupts.cpp:47 -1
     (nil))
(insn 50 49 51 5 (set (reg:QI 94 [ D.1642 ])
        (subreg:QI (reg:HI 117) 0)) interrupts.cpp:47 -1
     (nil))
(insn 51 50 52 5 (set (reg:SI 95 [ D.1641 ])
        (zero_extend:SI (reg:QI 94 [ D.1642 ]))) interrupts.cpp:47 -1
     (nil))
(insn 52 51 53 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:47 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 53 52 54 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 14 [0xe])) interrupts.cpp:47 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 54 53 55 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) interrupts.cpp:47 -1
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 55 54 56 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (symbol_ref:SI ("_ZN16InterruptManager22IgnoreInterruptRequestEv") [flags 0x41]  <function_decl 0x7f92046a7510 IgnoreInterruptRequest>)) interrupts.cpp:47 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 56 55 57 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg:SI 93 [ D.1641 ])) interrupts.cpp:47 -1
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 57 56 58 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg:SI 95 [ D.1641 ])) interrupts.cpp:47 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 58 57 59 5 (call (mem:QI (symbol_ref:SI ("_ZN16InterruptManager32SetInterruptDescriptorTableEntryEhtPFvvEhh") [flags 0x3]  <function_decl 0x7f920469cd80 SetInterruptDescriptorTableEntry>) [0 SetInterruptDescriptorTableEntry S1 A8])
        (const_int 32 [0x20])) interrupts.cpp:47 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 59 58 60 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:47 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 60 59 62 5 (parallel [
            (set (mem/c:HI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                        (const_int -2 [0xfffffffffffffffe])) [0 i+0 S2 A16])
                (plus:HI (mem/c:HI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -2 [0xfffffffffffffffe])) [0 i+0 S2 A16])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:45 -1
     (nil))
(jump_insn 62 60 63 5 (set (pc)
        (label_ref 61)) interrupts.cpp:45 -1
     (nil)
 -> 61)
;;  succ:       4 (DFS_BACK)

(barrier 63 62 64)
;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 64 63 65 6 9 "" [1 uses])
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 6 (set (reg:SI 96 [ D.1641 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -3 [0xfffffffffffffffd])) [0 CodeSegment+0 S1 A8]))) interrupts.cpp:49 -1
     (nil))
(insn 67 66 68 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:49 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 68 67 69 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 14 [0xe])) interrupts.cpp:49 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 69 68 70 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) interrupts.cpp:49 -1
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 70 69 71 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (symbol_ref:SI ("_ZN16InterruptManager26handleInterruptRequest0x00Ev") [flags 0x41]  <function_decl 0x7f92046a7360 handleInterruptRequest0x00>)) interrupts.cpp:49 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 71 70 72 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg:SI 96 [ D.1641 ])) interrupts.cpp:49 -1
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 72 71 73 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 32 [0x20])) interrupts.cpp:49 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 73 72 74 6 (call (mem:QI (symbol_ref:SI ("_ZN16InterruptManager32SetInterruptDescriptorTableEntryEhtPFvvEhh") [flags 0x3]  <function_decl 0x7f920469cd80 SetInterruptDescriptorTableEntry>) [0 SetInterruptDescriptorTableEntry S1 A8])
        (const_int 32 [0x20])) interrupts.cpp:49 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 74 73 75 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:49 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 75 74 76 6 (set (reg:SI 97 [ D.1641 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -3 [0xfffffffffffffffd])) [0 CodeSegment+0 S1 A8]))) interrupts.cpp:50 -1
     (nil))
(insn 76 75 77 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:50 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 77 76 78 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 14 [0xe])) interrupts.cpp:50 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 78 77 79 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) interrupts.cpp:50 -1
     (expr_list:REG_ARGS_SIZE (const_int 20 [0x14])
        (nil)))
(insn 79 78 80 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (symbol_ref:SI ("_ZN16InterruptManager26handleInterruptRequest0x01Ev") [flags 0x41]  <function_decl 0x7f92046a7438 handleInterruptRequest0x01>)) interrupts.cpp:50 -1
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 80 79 81 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg:SI 97 [ D.1641 ])) interrupts.cpp:50 -1
     (expr_list:REG_ARGS_SIZE (const_int 28 [0x1c])
        (nil)))
(insn 81 80 82 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 33 [0x21])) interrupts.cpp:50 -1
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(call_insn 82 81 83 6 (call (mem:QI (symbol_ref:SI ("_ZN16InterruptManager32SetInterruptDescriptorTableEntryEhtPFvvEhh") [flags 0x3]  <function_decl 0x7f920469cd80 SetInterruptDescriptorTableEntry>) [0 SetInterruptDescriptorTableEntry S1 A8])
        (const_int 32 [0x20])) interrupts.cpp:50 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 83 82 84 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:50 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 84 83 85 6 (set (reg/f:SI 118)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:52 -1
     (nil))
(insn 85 84 86 6 (parallel [
            (set (reg/f:SI 98 [ D.1639 ])
                (plus:SI (reg/f:SI 118)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:52 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1024 [0x400]))
        (nil)))
(insn 86 85 87 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:52 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 87 86 88 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 17 [0x11])) interrupts.cpp:52 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 88 87 89 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 98 [ D.1639 ])) interrupts.cpp:52 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 89 88 90 6 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:52 -1
     (nil)
    (nil))
(insn 90 89 91 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:52 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 91 90 92 6 (set (reg/f:SI 119)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:53 -1
     (nil))
(insn 92 91 93 6 (parallel [
            (set (reg/f:SI 99 [ D.1639 ])
                (plus:SI (reg/f:SI 119)
                    (const_int 1032 [0x408])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:53 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1032 [0x408]))
        (nil)))
(insn 93 92 94 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:53 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 94 93 95 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 17 [0x11])) interrupts.cpp:53 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 95 94 96 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 99 [ D.1639 ])) interrupts.cpp:53 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 96 95 97 6 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:53 -1
     (nil)
    (nil))
(insn 97 96 98 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:53 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 98 97 99 6 (set (reg/f:SI 120)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:55 -1
     (nil))
(insn 99 98 100 6 (parallel [
            (set (reg/f:SI 100 [ D.1639 ])
                (plus:SI (reg/f:SI 120)
                    (const_int 1040 [0x410])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:55 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1040 [0x410]))
        (nil)))
(insn 100 99 101 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:55 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 101 100 102 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 32 [0x20])) interrupts.cpp:55 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 102 101 103 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 100 [ D.1639 ])) interrupts.cpp:55 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 103 102 104 6 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:55 -1
     (nil)
    (nil))
(insn 104 103 105 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:55 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 105 104 106 6 (set (reg/f:SI 121)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:56 -1
     (nil))
(insn 106 105 107 6 (parallel [
            (set (reg/f:SI 101 [ D.1639 ])
                (plus:SI (reg/f:SI 121)
                    (const_int 1048 [0x418])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:56 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1048 [0x418]))
        (nil)))
(insn 107 106 108 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:56 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 108 107 109 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 40 [0x28])) interrupts.cpp:56 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 109 108 110 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 101 [ D.1639 ])) interrupts.cpp:56 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 110 109 111 6 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:56 -1
     (nil)
    (nil))
(insn 111 110 112 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:56 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 112 111 113 6 (set (reg/f:SI 122)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:58 -1
     (nil))
(insn 113 112 114 6 (parallel [
            (set (reg/f:SI 102 [ D.1639 ])
                (plus:SI (reg/f:SI 122)
                    (const_int 1040 [0x410])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:58 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1040 [0x410]))
        (nil)))
(insn 114 113 115 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:58 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 115 114 116 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 4 [0x4])) interrupts.cpp:58 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 116 115 117 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 102 [ D.1639 ])) interrupts.cpp:58 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 117 116 118 6 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:58 -1
     (nil)
    (nil))
(insn 118 117 119 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:58 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 119 118 120 6 (set (reg/f:SI 123)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:59 -1
     (nil))
(insn 120 119 121 6 (parallel [
            (set (reg/f:SI 103 [ D.1639 ])
                (plus:SI (reg/f:SI 123)
                    (const_int 1048 [0x418])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:59 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1048 [0x418]))
        (nil)))
(insn 121 120 122 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:59 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 122 121 123 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 2 [0x2])) interrupts.cpp:59 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 123 122 124 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 103 [ D.1639 ])) interrupts.cpp:59 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 124 123 125 6 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:59 -1
     (nil)
    (nil))
(insn 125 124 126 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:59 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 126 125 127 6 (set (reg/f:SI 124)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:61 -1
     (nil))
(insn 127 126 128 6 (parallel [
            (set (reg/f:SI 104 [ D.1639 ])
                (plus:SI (reg/f:SI 124)
                    (const_int 1040 [0x410])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:61 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1040 [0x410]))
        (nil)))
(insn 128 127 129 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:61 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 129 128 130 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 1 [0x1])) interrupts.cpp:61 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 130 129 131 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 104 [ D.1639 ])) interrupts.cpp:61 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 131 130 132 6 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:61 -1
     (nil)
    (nil))
(insn 132 131 133 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:61 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 133 132 134 6 (set (reg/f:SI 125)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:62 -1
     (nil))
(insn 134 133 135 6 (parallel [
            (set (reg/f:SI 105 [ D.1639 ])
                (plus:SI (reg/f:SI 125)
                    (const_int 1048 [0x418])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:62 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1048 [0x418]))
        (nil)))
(insn 135 134 136 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:62 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 136 135 137 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 1 [0x1])) interrupts.cpp:62 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 137 136 138 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 105 [ D.1639 ])) interrupts.cpp:62 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 138 137 139 6 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:62 -1
     (nil)
    (nil))
(insn 139 138 140 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:62 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 140 139 141 6 (set (reg/f:SI 126)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:64 -1
     (nil))
(insn 141 140 142 6 (parallel [
            (set (reg/f:SI 106 [ D.1639 ])
                (plus:SI (reg/f:SI 126)
                    (const_int 1040 [0x410])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:64 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1040 [0x410]))
        (nil)))
(insn 142 141 143 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:64 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 143 142 144 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) interrupts.cpp:64 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 144 143 145 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 106 [ D.1639 ])) interrupts.cpp:64 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 145 144 146 6 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:64 -1
     (nil)
    (nil))
(insn 146 145 147 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:64 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 147 146 148 6 (set (reg/f:SI 127)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:65 -1
     (nil))
(insn 148 147 149 6 (parallel [
            (set (reg/f:SI 107 [ D.1639 ])
                (plus:SI (reg/f:SI 127)
                    (const_int 1048 [0x418])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:65 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1048 [0x418]))
        (nil)))
(insn 149 148 150 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:65 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 150 149 151 6 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) interrupts.cpp:65 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 151 150 152 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 107 [ D.1639 ])) interrupts.cpp:65 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 152 151 153 6 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:65 -1
     (nil)
    (nil))
(insn 153 152 154 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:65 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 154 153 155 6 (set (reg:HI 108 [ D.1640 ])
        (const_int 8 [0x8])) interrupts.cpp:69 -1
     (nil))
(insn 155 154 156 6 (parallel [
            (set (reg:HI 109 [ D.1640 ])
                (ashift:HI (reg:HI 108 [ D.1640 ])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:69 -1
     (nil))
(insn 156 155 157 6 (parallel [
            (set (reg:HI 110 [ D.1640 ])
                (plus:HI (reg:HI 109 [ D.1640 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:69 -1
     (nil))
(insn 157 156 158 6 (set (mem/j/c:HI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -10 [0xfffffffffffffff6])) [0 idt.size+0 S2 A16])
        (reg:HI 110 [ D.1640 ])) interrupts.cpp:69 -1
     (nil))
(insn 158 157 159 6 (set (reg:SI 111 [ D.1643 ])
        (symbol_ref:SI ("_ZN16InterruptManager24interruptDescriptorTableE") [flags 0x2]  <var_decl 0x7f920469ae10 interruptDescriptorTable>)) interrupts.cpp:70 -1
     (nil))
(insn 159 158 160 6 (set (mem/j/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 idt.base+0 S4 A16])
        (reg:SI 111 [ D.1643 ])) interrupts.cpp:70 -1
     (nil))
(insn 160 159 163 6 (parallel [
            (asm_operands/v ("lidt %0") ("") 0 [
                    (mem/c:BLK (plus:SI (reg/f:SI 82 virtual-stack-vars)
                            (const_int -10 [0xfffffffffffffff6])) [0 idt+0 S6 A16])
                ]
                 [
                    (asm_input:BLK ("m") interrupts.cpp:71)
                ]
                 [] interrupts.cpp:71)
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) interrupts.cpp:71 -1
     (nil))
(insn 163 160 0 6 (const_int 0 [0]) interrupts.cpp:72 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void InterruptManager::Activate() (_ZN16InterruptManager8ActivateEv, funcdef_no=18, decl_uid=1359, cgraph_uid=18, symbol_order=20)

void InterruptManager::Activate() (struct InterruptManager * const this)
{
  struct InterruptManager * ActiveInterruptManager.4;
  struct InterruptManager * ActiveInterruptManager.3;
  struct InterruptManager * ActiveInterruptManager.3_3;
  struct InterruptManager * ActiveInterruptManager.4_4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  ActiveInterruptManager.3_3 = ActiveInterruptManager;
  if (ActiveInterruptManager.3_3 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  ActiveInterruptManager.4_4 = ActiveInterruptManager;
  InterruptManager::Deactivate (ActiveInterruptManager.4_4);
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  ActiveInterruptManager = this_6(D);
  __asm__ __volatile__("sti");
  return;
;;    succ:       EXIT

}



Partition map 

Partition 3 (ActiveInterruptManager.3_3 - 3 )
Partition 4 (ActiveInterruptManager.4_4 - 4 )
Partition 6 (this_6(D) - 6 )


Partition map 

Partition 0 (this_6(D) - 6 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_6(D) - 6 )

After Coalescing:

Partition map 

Partition 0 (ActiveInterruptManager.3_3 - 3 )
Partition 1 (ActiveInterruptManager.4_4 - 4 )
Partition 2 (this_6(D) - 6 )

void InterruptManager::Activate() (struct InterruptManager * const this)
{
  struct InterruptManager * ActiveInterruptManager.4;
  struct InterruptManager * ActiveInterruptManager.3;
  struct InterruptManager * ActiveInterruptManager.3_3;
  struct InterruptManager * ActiveInterruptManager.4_4;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  ActiveInterruptManager.3_3 = ActiveInterruptManager;
  if (ActiveInterruptManager.3_3 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  ActiveInterruptManager.4_4 = ActiveInterruptManager;
  InterruptManager::Deactivate (ActiveInterruptManager.4_4);
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  ActiveInterruptManager = this_6(D);
  __asm__ __volatile__("sti");
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _3 = ActiveInterruptManager;

(insn 5 4 0 (set (reg/f:SI 87 [ D.1644 ])
        (mem/f/c:SI (symbol_ref:SI ("_ZN16InterruptManager22ActiveInterruptManagerE") [flags 0x2]  <var_decl 0x7f920469ab40 ActiveInterruptManager>) [0 ActiveInterruptManager+0 S4 A32])) interrupts.cpp:75 -1
     (nil))

;; if (_3 != 0B)

(insn 6 5 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ D.1644 ])
            (const_int 0 [0]))) interrupts.cpp:75 -1
     (nil))

(jump_insn 7 6 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) interrupts.cpp:75 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _4 = ActiveInterruptManager;

(insn 9 8 0 (set (reg/f:SI 88 [ D.1644 ])
        (mem/f/c:SI (symbol_ref:SI ("_ZN16InterruptManager22ActiveInterruptManagerE") [flags 0x2]  <var_decl 0x7f920469ab40 ActiveInterruptManager>) [0 ActiveInterruptManager+0 S4 A32])) interrupts.cpp:76 -1
     (nil))

;; InterruptManager::Deactivate (_4);

(insn 10 9 11 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:76 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 11 10 12 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 88 [ D.1644 ])) interrupts.cpp:76 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 12 11 13 (call (mem:QI (symbol_ref:SI ("_ZN16InterruptManager10DeactivateEv") [flags 0x3]  <function_decl 0x7f92046a7288 Deactivate>) [0 Deactivate S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:76 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 13 12 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:76 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; Generating RTL for gimple basic block 4

;; 

(code_label 14 13 15 12 "" [0 uses])

(note 15 14 0 NOTE_INSN_BASIC_BLOCK)

;; ActiveInterruptManager = this_6(D);

(insn 16 15 17 (set (reg/f:SI 89)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:77 -1
     (nil))

(insn 17 16 0 (set (mem/f/c:SI (symbol_ref:SI ("_ZN16InterruptManager22ActiveInterruptManagerE") [flags 0x2]  <var_decl 0x7f920469ab40 ActiveInterruptManager>) [0 ActiveInterruptManager+0 S4 A32])
        (reg/f:SI 89)) interrupts.cpp:77 -1
     (nil))

;; __asm__ __volatile__("sti");

(insn 18 17 0 (asm_input/v ("sti") interrupts.cpp:78) interrupts.cpp:78 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 87 [ D.1644 ])
        (mem/f/c:SI (symbol_ref:SI ("_ZN16InterruptManager22ActiveInterruptManagerE") [flags 0x2]  <var_decl 0x7f920469ab40 ActiveInterruptManager>) [0 ActiveInterruptManager+0 S4 A32])) interrupts.cpp:75 -1
     (nil))
(insn 6 5 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ D.1644 ])
            (const_int 0 [0]))) interrupts.cpp:75 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 14)
            (pc))) interrupts.cpp:75 -1
     (nil)
 -> 14)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 4 (set (reg/f:SI 88 [ D.1644 ])
        (mem/f/c:SI (symbol_ref:SI ("_ZN16InterruptManager22ActiveInterruptManagerE") [flags 0x2]  <var_decl 0x7f920469ab40 ActiveInterruptManager>) [0 ActiveInterruptManager+0 S4 A32])) interrupts.cpp:76 -1
     (nil))
(insn 10 9 11 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:76 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 11 10 12 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 88 [ D.1644 ])) interrupts.cpp:76 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 12 11 13 4 (call (mem:QI (symbol_ref:SI ("_ZN16InterruptManager10DeactivateEv") [flags 0x3]  <function_decl 0x7f92046a7288 Deactivate>) [0 Deactivate S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:76 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 13 12 14 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:76 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 14 13 15 5 12 "" [1 uses])
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg/f:SI 89)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:77 -1
     (nil))
(insn 17 16 18 5 (set (mem/f/c:SI (symbol_ref:SI ("_ZN16InterruptManager22ActiveInterruptManagerE") [flags 0x2]  <var_decl 0x7f920469ab40 ActiveInterruptManager>) [0 ActiveInterruptManager+0 S4 A32])
        (reg/f:SI 89)) interrupts.cpp:77 -1
     (nil))
(insn 18 17 21 5 (asm_input/v ("sti") interrupts.cpp:78) interrupts.cpp:78 -1
     (nil))
(insn 21 18 0 5 (const_int 0 [0]) interrupts.cpp:79 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function void InterruptManager::Deactivate() (_ZN16InterruptManager10DeactivateEv, funcdef_no=19, decl_uid=1361, cgraph_uid=19, symbol_order=21)

void InterruptManager::Deactivate() (struct InterruptManager * const this)
{
  struct InterruptManager * ActiveInterruptManager.5;
  struct InterruptManager * ActiveInterruptManager.5_3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  ActiveInterruptManager.5_3 = ActiveInterruptManager;
  if (ActiveInterruptManager.5_3 == this_4(D))
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  ActiveInterruptManager = 0B;
  __asm__ __volatile__("cli");
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  return;
;;    succ:       EXIT

}



Partition map 

Partition 3 (ActiveInterruptManager.5_3 - 3 )
Partition 4 (this_4(D) - 4 )


Partition map 

Partition 0 (this_4(D) - 4 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_4(D) - 4 )

After Coalescing:

Partition map 

Partition 0 (ActiveInterruptManager.5_3 - 3 )
Partition 1 (this_4(D) - 4 )

void InterruptManager::Deactivate() (struct InterruptManager * const this)
{
  struct InterruptManager * ActiveInterruptManager.5;
  struct InterruptManager * ActiveInterruptManager.5_3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  ActiveInterruptManager.5_3 = ActiveInterruptManager;
  if (ActiveInterruptManager.5_3 == this_4(D))
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  ActiveInterruptManager = 0B;
  __asm__ __volatile__("cli");
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _3 = ActiveInterruptManager;

(insn 5 4 0 (set (reg/f:SI 87 [ D.1645 ])
        (mem/f/c:SI (symbol_ref:SI ("_ZN16InterruptManager22ActiveInterruptManagerE") [flags 0x2]  <var_decl 0x7f920469ab40 ActiveInterruptManager>) [0 ActiveInterruptManager+0 S4 A32])) interrupts.cpp:83 -1
     (nil))

;; if (_3 == this_4(D))

(insn 6 5 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ D.1645 ])
            (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32]))) interrupts.cpp:83 -1
     (nil))

(jump_insn 7 6 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) interrupts.cpp:83 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; ActiveInterruptManager = 0B;

(insn 9 8 0 (set (mem/f/c:SI (symbol_ref:SI ("_ZN16InterruptManager22ActiveInterruptManagerE") [flags 0x2]  <var_decl 0x7f920469ab40 ActiveInterruptManager>) [0 ActiveInterruptManager+0 S4 A32])
        (const_int 0 [0])) interrupts.cpp:84 -1
     (nil))

;; __asm__ __volatile__("cli");

(insn 10 9 0 (asm_input/v ("cli") interrupts.cpp:85) interrupts.cpp:85 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 11 10 12 14 "" [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->5 redirected to 6
Merging block 5 into block 4...
Merged blocks 4 and 5.
Merged 4 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 87 [ D.1645 ])
        (mem/f/c:SI (symbol_ref:SI ("_ZN16InterruptManager22ActiveInterruptManagerE") [flags 0x2]  <var_decl 0x7f920469ab40 ActiveInterruptManager>) [0 ActiveInterruptManager+0 S4 A32])) interrupts.cpp:83 -1
     (nil))
(insn 6 5 7 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 87 [ D.1645 ])
            (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32]))) interrupts.cpp:83 -1
     (nil))
(jump_insn 7 6 8 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:SI 13)
            (pc))) interrupts.cpp:83 612 {*jcc_1}
     (nil)
 -> 13)
;;  succ:       4 (FALLTHRU)
;;              6

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 8 7 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 4 (set (mem/f/c:SI (symbol_ref:SI ("_ZN16InterruptManager22ActiveInterruptManagerE") [flags 0x2]  <var_decl 0x7f920469ab40 ActiveInterruptManager>) [0 ActiveInterruptManager+0 S4 A32])
        (const_int 0 [0])) interrupts.cpp:84 -1
     (nil))
(insn 10 9 13 4 (asm_input/v ("cli") interrupts.cpp:85) interrupts.cpp:85 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
;;              2
(code_label 13 10 14 6 13 "" [1 uses])
(note 14 13 0 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function static uint32_t InterruptManager::handleInterrupt(uint8_t, uint32_t) (_ZN16InterruptManager15handleInterruptEhj, funcdef_no=20, decl_uid=1352, cgraph_uid=20, symbol_order=22)

static uint32_t InterruptManager::handleInterrupt(uint8_t, uint32_t) (uint8_t interruptNumber, uint32_t esp)
{
  struct InterruptManager * ActiveInterruptManager.7;
  int D.1577;
  uint32_t D.1576;
  struct InterruptManager * ActiveInterruptManager.6;
  uint32_t _1;
  struct InterruptManager * ActiveInterruptManager.6_4;
  int _6;
  struct InterruptManager * ActiveInterruptManager.7_7;
  uint32_t _10;
  uint32_t _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  ActiveInterruptManager.6_4 = ActiveInterruptManager;
  if (ActiveInterruptManager.6_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _6 = (int) interruptNumber_5(D);
  ActiveInterruptManager.7_7 = ActiveInterruptManager;
  _10 = InterruptManager::doHandleInterrupt (ActiveInterruptManager.7_7, _6, esp_8(D));
  goto <bb 5> (<L2>);
;;    succ:       5

;;   basic block 4, loop depth 0
;;    pred:       2
  _11 = esp_8(D);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  # _1 = PHI <_10(3), _11(4)>
<L2>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 4 (ActiveInterruptManager.6_4 - 4 )
Partition 5 (interruptNumber_5(D) - 5 )
Partition 6 (_6 - 6 )
Partition 7 (ActiveInterruptManager.7_7 - 7 )
Partition 8 (esp_8(D) - 8 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )


Partition map 

Partition 0 (_1 - 1 )
Partition 1 (interruptNumber_5(D) - 5 )
Partition 2 (esp_8(D) - 8 )
Partition 3 (_10 - 10 )
Partition 4 (_11 - 11 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (interruptNumber_5(D) - 5 )
Partition 2 (esp_8(D) - 8 )
Partition 3 (_10 - 10 )
Partition 4 (_11 - 11 )

Coalesce list: (1)_1 & (11)_11 [map: 0, 4] : Success -> 0
Coalesce list: (1)_1 & (10)_10 [map: 0, 3] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 10 11 )
Partition 1 (ActiveInterruptManager.6_4 - 4 )
Partition 2 (interruptNumber_5(D) - 5 )
Partition 3 (_6 - 6 )
Partition 4 (ActiveInterruptManager.7_7 - 7 )
Partition 5 (esp_8(D) - 8 )

static uint32_t InterruptManager::handleInterrupt(uint8_t, uint32_t) (uint8_t interruptNumber, uint32_t esp)
{
  struct InterruptManager * ActiveInterruptManager.7;
  int D.1577;
  uint32_t D.1576;
  struct InterruptManager * ActiveInterruptManager.6;
  uint32_t _1;
  struct InterruptManager * ActiveInterruptManager.6_4;
  int _6;
  struct InterruptManager * ActiveInterruptManager.7_7;
  uint32_t _10;
  uint32_t _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  ActiveInterruptManager.6_4 = ActiveInterruptManager;
  if (ActiveInterruptManager.6_4 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _6 = (int) interruptNumber_5(D);
  ActiveInterruptManager.7_7 = ActiveInterruptManager;
  _10 = InterruptManager::doHandleInterrupt (ActiveInterruptManager.7_7, _6, esp_8(D));
  goto <bb 5> (<L2>);
;;    succ:       5

;;   basic block 4, loop depth 0
;;    pred:       2
  _11 = esp_8(D);
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  # _1 = PHI <_10(3), _11(4)>
<L2>:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _4 = ActiveInterruptManager;

(insn 7 6 0 (set (reg/f:SI 88 [ D.1647 ])
        (mem/f/c:SI (symbol_ref:SI ("_ZN16InterruptManager22ActiveInterruptManagerE") [flags 0x2]  <var_decl 0x7f920469ab40 ActiveInterruptManager>) [0 ActiveInterruptManager+0 S4 A32])) interrupts.cpp:90 -1
     (nil))

;; if (_4 != 0B)

(insn 8 7 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 88 [ D.1647 ])
            (const_int 0 [0]))) interrupts.cpp:90 -1
     (nil))

(jump_insn 9 8 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) interrupts.cpp:90 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _6 = (int) interruptNumber_5(D);

(insn 11 10 0 (set (reg:SI 89 [ D.1648 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:91 -1
     (nil))

;; _7 = ActiveInterruptManager;

(insn 12 11 0 (set (reg/f:SI 90 [ D.1647 ])
        (mem/f/c:SI (symbol_ref:SI ("_ZN16InterruptManager22ActiveInterruptManagerE") [flags 0x2]  <var_decl 0x7f920469ab40 ActiveInterruptManager>) [0 ActiveInterruptManager+0 S4 A32])) interrupts.cpp:91 -1
     (nil))

;; _10 = InterruptManager::doHandleInterrupt (_7, _6, esp_8(D));

(insn 13 12 14 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:91 -1
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))

(insn 14 13 15 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 esp+0 S4 A32])) interrupts.cpp:91 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 15 14 16 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg:SI 89 [ D.1648 ])) interrupts.cpp:91 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 16 15 17 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 90 [ D.1647 ])) interrupts.cpp:91 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 17 16 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZN16InterruptManager17doHandleInterruptEhj") [flags 0x3]  <function_decl 0x7f92046a75e8 doHandleInterrupt>) [0 doHandleInterrupt S1 A8])
            (const_int 16 [0x10]))) interrupts.cpp:91 -1
     (nil)
    (nil))

(insn 18 17 19 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:91 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

(insn 19 18 0 (set (reg:SI 87 [ D.1646 ])
        (reg:SI 0 ax)) interrupts.cpp:91 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 22 21 23 17 "" [0 uses])

(note 23 22 0 NOTE_INSN_BASIC_BLOCK)

;; _11 = esp_8(D);

(insn 24 23 0 (set (reg:SI 87 [ D.1646 ])
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 esp+0 S4 A32])) interrupts.cpp:93 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; <L2>:

(code_label 25 24 26 18 "" [0 uses])

(note 26 25 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 27 26 28 (set (reg:SI 91 [ <retval> ])
        (reg:SI 87 [ D.1646 ])) -1
     (nil))

(jump_insn 28 27 29 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 29 28 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 28.
Merging block 7 into block 6...
Merged blocks 6 and 7.
Merged 6 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg:SI 92)
        (mem/c:SI (reg/f:SI 81 virtual-incoming-args) [0 interruptNumber+0 S4 A32])) interrupts.cpp:89 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 interruptNumber+0 S1 A32])
        (subreg:QI (reg:SI 92) 0)) interrupts.cpp:89 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 88 [ D.1647 ])
        (mem/f/c:SI (symbol_ref:SI ("_ZN16InterruptManager22ActiveInterruptManagerE") [flags 0x2]  <var_decl 0x7f920469ab40 ActiveInterruptManager>) [0 ActiveInterruptManager+0 S4 A32])) interrupts.cpp:90 -1
     (nil))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 88 [ D.1647 ])
            (const_int 0 [0]))) interrupts.cpp:90 -1
     (nil))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 22)
            (pc))) interrupts.cpp:90 -1
     (nil)
 -> 22)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 10 9 11 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 11 10 12 4 (set (reg:SI 89 [ D.1648 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:91 -1
     (nil))
(insn 12 11 13 4 (set (reg/f:SI 90 [ D.1647 ])
        (mem/f/c:SI (symbol_ref:SI ("_ZN16InterruptManager22ActiveInterruptManagerE") [flags 0x2]  <var_decl 0x7f920469ab40 ActiveInterruptManager>) [0 ActiveInterruptManager+0 S4 A32])) interrupts.cpp:91 -1
     (nil))
(insn 13 12 14 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:91 -1
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 14 13 15 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 esp+0 S4 A32])) interrupts.cpp:91 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 15 14 16 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg:SI 89 [ D.1648 ])) interrupts.cpp:91 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 16 15 17 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 90 [ D.1647 ])) interrupts.cpp:91 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 17 16 18 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZN16InterruptManager17doHandleInterruptEhj") [flags 0x3]  <function_decl 0x7f92046a75e8 doHandleInterrupt>) [0 doHandleInterrupt S1 A8])
            (const_int 16 [0x10]))) interrupts.cpp:91 -1
     (nil)
    (nil))
(insn 18 17 19 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:91 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 19 18 20 4 (set (reg:SI 87 [ D.1646 ])
        (reg:SI 0 ax)) interrupts.cpp:91 -1
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (label_ref 25)) interrupts.cpp:91 -1
     (nil)
 -> 25)
;;  succ:       6

(barrier 21 20 22)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 22 21 23 5 17 "" [1 uses])
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg:SI 87 [ D.1646 ])
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 esp+0 S4 A32])) interrupts.cpp:93 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              5 (FALLTHRU)
(code_label 25 24 26 6 18 "" [1 uses])
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 31 6 (set (reg:SI 91 [ <retval> ])
        (reg:SI 87 [ D.1646 ])) -1
     (nil))
(insn 31 27 32 6 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) interrupts.cpp:94 -1
     (nil))
(insn 32 31 0 6 (use (reg/i:SI 0 ax)) interrupts.cpp:94 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function uint32_t InterruptManager::doHandleInterrupt(uint8_t, uint32_t) (_ZN16InterruptManager17doHandleInterruptEhj, funcdef_no=21, decl_uid=1368, cgraph_uid=21, symbol_order=23)

uint32_t InterruptManager::doHandleInterrupt(uint8_t, uint32_t) (struct InterruptManager * const this, uint8_t interruptNumber, uint32_t esp)
{
  char * hex;
  char * foo;
  uint32_t D.1616;
  struct Port8BitSlow * D.1613;
  struct Port8BitSlow * D.1610;
  char D.1604;
  char * D.1603;
  sizetype D.1602;
  sizetype D.1601;
  char * D.1600;
  char D.1599;
  char * D.1598;
  sizetype D.1597;
  unsigned char D.1596;
  char * D.1595;
  struct InterruptHandler * D.1591;
  int D.1590;
  int (*__vtbl_ptr_type) () D.1589;
  int (*__vtbl_ptr_type) () * D.1588;
  struct InterruptHandler * D.1587;
  int D.1586;
  struct InterruptHandler * D.1585;
  int D.1584;
  struct InterruptHandler * D.1581;
  int D.1580;
  int _5;
  struct InterruptHandler * _8;
  int _9;
  struct InterruptHandler * _10;
  int _11;
  struct InterruptHandler * _12;
  int (*__vtbl_ptr_type) () * _13;
  int (*__vtbl_ptr_type) () _14;
  int _15;
  struct InterruptHandler * _16;
  char * _22;
  unsigned char _23;
  sizetype _24;
  char * _25;
  char _26;
  char * _28;
  sizetype _29;
  sizetype _30;
  char * _31;
  char _32;
  struct Port8BitSlow * _35;
  struct Port8BitSlow * _37;
  uint32_t _39;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = (int) interruptNumber_4(D);
  _8 = this_7(D)->handlers[_5];
  if (_8 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _9 = (int) interruptNumber_4(D);
  _10 = this_7(D)->handlers[_9];
  _11 = (int) interruptNumber_4(D);
  _12 = this_7(D)->handlers[_11];
  _13 = _12->_vptr.InterruptHandler;
  _14 = *_13;
  _15 = (int) interruptNumber_4(D);
  _16 = this_7(D)->handlers[_15];
  esp_19 = OBJ_TYPE_REF(_14;(struct InterruptHandler)_10->0) (_16, esp_17(D));
  goto <bb 6>;
;;    succ:       6

;;   basic block 4, loop depth 0
;;    pred:       2
  if (interruptNumber_4(D) != 32)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  foo_20 = "Unhandled Interrupt 0x00";
  hex_21 = "0123456789ABCDEF";
  _22 = foo_20 + 22;
  _23 = interruptNumber_4(D) >> 4;
  _24 = (sizetype) _23;
  _25 = hex_21 + _24;
  _26 = *_25;
  *_22 = _26;
  _28 = foo_20 + 23;
  _29 = (sizetype) interruptNumber_4(D);
  _30 = _29 & 15;
  _31 = hex_21 + _30;
  _32 = *_31;
  *_28 = _32;
  printf (foo_20);
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       3
;;                4
;;                5
  # esp_1 = PHI <esp_19(3), esp_17(D)(4), esp_17(D)(5)>
  if (interruptNumber_4(D) > 31)
    goto <bb 7>;
  else
    goto <bb 10>;
;;    succ:       7
;;                10

;;   basic block 7, loop depth 0
;;    pred:       6
  if (interruptNumber_4(D) <= 47)
    goto <bb 8>;
  else
    goto <bb 10>;
;;    succ:       8
;;                10

;;   basic block 8, loop depth 0
;;    pred:       7
  _35 = &this_7(D)->picMasterCommandPort;
  Port8BitSlow::Write (_35, 32);
  if (interruptNumber_4(D) > 39)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  _37 = &this_7(D)->picSlaveCommandPort;
  Port8BitSlow::Write (_37, 32);
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       6
;;                7
;;                9
;;                8
  _39 = esp_1;
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       10
<L14>:
  return _39;
;;    succ:       EXIT

}



Partition map 

Partition 1 (esp_1 - 1 )
Partition 4 (interruptNumber_4(D) - 4 )
Partition 5 (_5 - 5 )
Partition 7 (this_7(D) - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (esp_17(D) - 17 )
Partition 19 (esp_19 - 19 )
Partition 20 (foo_20 - 20 )
Partition 21 (hex_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 35 (_35 - 35 )
Partition 37 (_37 - 37 )
Partition 39 (_39 - 39 )


Partition map 

Partition 0 (esp_1 - 1 )
Partition 1 (interruptNumber_4(D) - 4 )
Partition 2 (this_7(D) - 7 )
Partition 3 (esp_17(D) - 17 )
Partition 4 (esp_19 - 19 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483647) esp_1 <-> esp_19
(2147483647) esp_1 <-> esp_17(D)

Partition map 

Partition 0 (esp_1 - 1 )
Partition 1 (interruptNumber_4(D) - 4 )
Partition 2 (this_7(D) - 7 )
Partition 3 (esp_17(D) - 17 )
Partition 4 (esp_19 - 19 )

Coalesce list: (1)esp_1 & (19)esp_19 [map: 0, 4] : Success -> 0
Coalesce list: (1)esp_1 & (17)esp_17(D) [map: 0, 3] : Success -> 0
Coalesce list: (1)esp_1 & (19)esp_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (esp_1 - 1 17 19 )
Partition 1 (interruptNumber_4(D) - 4 )
Partition 2 (_5 - 5 )
Partition 3 (this_7(D) - 7 )
Partition 4 (_8 - 8 )
Partition 5 (_9 - 9 )
Partition 6 (_10 - 10 )
Partition 7 (_11 - 11 )
Partition 8 (_12 - 12 )
Partition 9 (_13 - 13 )
Partition 10 (_14 - 14 )
Partition 11 (_15 - 15 )
Partition 12 (_16 - 16 )
Partition 13 (foo_20 - 20 )
Partition 14 (hex_21 - 21 )
Partition 15 (_22 - 22 )
Partition 16 (_23 - 23 )
Partition 17 (_24 - 24 )
Partition 18 (_25 - 25 )
Partition 19 (_26 - 26 )
Partition 20 (_28 - 28 )
Partition 21 (_29 - 29 )
Partition 22 (_30 - 30 )
Partition 23 (_31 - 31 )
Partition 24 (_32 - 32 )
Partition 25 (_35 - 35 )
Partition 26 (_37 - 37 )
Partition 27 (_39 - 39 )

uint32_t InterruptManager::doHandleInterrupt(uint8_t, uint32_t) (struct InterruptManager * const this, uint8_t interruptNumber, uint32_t esp)
{
  char * hex;
  char * foo;
  uint32_t D.1616;
  struct Port8BitSlow * D.1613;
  struct Port8BitSlow * D.1610;
  char D.1604;
  char * D.1603;
  sizetype D.1602;
  sizetype D.1601;
  char * D.1600;
  char D.1599;
  char * D.1598;
  sizetype D.1597;
  unsigned char D.1596;
  char * D.1595;
  struct InterruptHandler * D.1591;
  int D.1590;
  int (*__vtbl_ptr_type) () D.1589;
  int (*__vtbl_ptr_type) () * D.1588;
  struct InterruptHandler * D.1587;
  int D.1586;
  struct InterruptHandler * D.1585;
  int D.1584;
  struct InterruptHandler * D.1581;
  int D.1580;
  int _5;
  struct InterruptHandler * _8;
  int _9;
  struct InterruptHandler * _10;
  int _11;
  struct InterruptHandler * _12;
  int (*__vtbl_ptr_type) () * _13;
  int (*__vtbl_ptr_type) () _14;
  int _15;
  struct InterruptHandler * _16;
  char * _22;
  unsigned char _23;
  sizetype _24;
  char * _25;
  char _26;
  char * _28;
  sizetype _29;
  sizetype _30;
  char * _31;
  char _32;
  struct Port8BitSlow * _35;
  struct Port8BitSlow * _37;
  uint32_t _39;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _5 = (int) interruptNumber_4(D);
  _8 = this_7(D)->handlers[_5];
  if (_8 != 0B)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _9 = (int) interruptNumber_4(D);
  _10 = this_7(D)->handlers[_9];
  _11 = (int) interruptNumber_4(D);
  _12 = this_7(D)->handlers[_11];
  _13 = _12->_vptr.InterruptHandler;
  _14 = *_13;
  _15 = (int) interruptNumber_4(D);
  _16 = this_7(D)->handlers[_15];
  esp_19 = OBJ_TYPE_REF(_14;(struct InterruptHandler)_10->0) (_16, esp_17(D));
  goto <bb 6>;
;;    succ:       6

;;   basic block 4, loop depth 0
;;    pred:       2
  if (interruptNumber_4(D) != 32)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  foo_20 = "Unhandled Interrupt 0x00";
  hex_21 = "0123456789ABCDEF";
  _22 = foo_20 + 22;
  _23 = interruptNumber_4(D) >> 4;
  _24 = (sizetype) _23;
  _25 = hex_21 + _24;
  _26 = *_25;
  *_22 = _26;
  _28 = foo_20 + 23;
  _29 = (sizetype) interruptNumber_4(D);
  _30 = _29 & 15;
  _31 = hex_21 + _30;
  _32 = *_31;
  *_28 = _32;
  printf (foo_20);
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       3
;;                4
;;                5
  # esp_1 = PHI <esp_19(3), esp_17(D)(4), esp_17(D)(5)>
  if (interruptNumber_4(D) > 31)
    goto <bb 7>;
  else
    goto <bb 10>;
;;    succ:       7
;;                10

;;   basic block 7, loop depth 0
;;    pred:       6
  if (interruptNumber_4(D) <= 47)
    goto <bb 8>;
  else
    goto <bb 10>;
;;    succ:       8
;;                10

;;   basic block 8, loop depth 0
;;    pred:       7
  _35 = &this_7(D)->picMasterCommandPort;
  Port8BitSlow::Write (_35, 32);
  if (interruptNumber_4(D) > 39)
    goto <bb 9>;
  else
    goto <bb 10>;
;;    succ:       9
;;                10

;;   basic block 9, loop depth 0
;;    pred:       8
  _37 = &this_7(D)->picSlaveCommandPort;
  Port8BitSlow::Write (_37, 32);
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       6
;;                7
;;                9
;;                8
  _39 = esp_1;
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       10
<L14>:
  return _39;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _5 = (int) interruptNumber_4(D);

(insn 7 6 0 (set (reg:SI 87 [ D.1649 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:98 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _8 = this_7(D)->handlers[_5];

(insn 8 7 9 (set (reg/f:SI 112)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:98 -1
     (nil))

(insn 9 8 0 (set (reg/f:SI 88 [ D.1650 ])
        (mem/f/j:SI (plus:SI (mult:SI (reg:SI 87 [ D.1649 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 112)) [0 this_7(D)->handlers S4 A32])) interrupts.cpp:98 -1
     (nil))

;; if (_8 != 0B)

(insn 10 9 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 88 [ D.1650 ])
            (const_int 0 [0]))) interrupts.cpp:98 -1
     (nil))

(jump_insn 11 10 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) interrupts.cpp:98 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _9 = (int) interruptNumber_4(D);

(insn 13 12 0 (set (reg:SI 89 [ D.1649 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:99 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _10 = this_7(D)->handlers[_9];

(insn 14 13 15 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:99 -1
     (nil))

(insn 15 14 0 (set (reg/f:SI 90 [ D.1650 ])
        (mem/f/j:SI (plus:SI (mult:SI (reg:SI 89 [ D.1649 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 113)) [0 this_7(D)->handlers S4 A32])) interrupts.cpp:99 -1
     (nil))

;; _11 = (int) interruptNumber_4(D);

(insn 16 15 0 (set (reg:SI 91 [ D.1649 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:99 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _12 = this_7(D)->handlers[_11];

(insn 17 16 18 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:99 -1
     (nil))

(insn 18 17 0 (set (reg/f:SI 92 [ D.1650 ])
        (mem/f/j:SI (plus:SI (mult:SI (reg:SI 91 [ D.1649 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 114)) [0 this_7(D)->handlers S4 A32])) interrupts.cpp:99 -1
     (nil))

;; _13 = _12->_vptr.InterruptHandler;

(insn 19 18 0 (set (reg/f:SI 93 [ D.1651 ])
        (mem/f/j:SI (reg/f:SI 92 [ D.1650 ]) [0 _12->_vptr.InterruptHandler+0 S4 A32])) interrupts.cpp:99 -1
     (nil))

;; _14 = *_13;

(insn 20 19 0 (set (reg/f:SI 94 [ D.1652 ])
        (mem/f:SI (reg/f:SI 93 [ D.1651 ]) [0 *_13+0 S4 A32])) interrupts.cpp:99 -1
     (nil))

;; _15 = (int) interruptNumber_4(D);

(insn 21 20 0 (set (reg:SI 95 [ D.1649 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:99 -1
     (nil))
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223
Applying pattern match.pd:49, generic-match.c:3223

;; _16 = this_7(D)->handlers[_15];

(insn 22 21 23 (set (reg/f:SI 115)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:99 -1
     (nil))

(insn 23 22 0 (set (reg/f:SI 96 [ D.1650 ])
        (mem/f/j:SI (plus:SI (mult:SI (reg:SI 95 [ D.1649 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 115)) [0 this_7(D)->handlers S4 A32])) interrupts.cpp:99 -1
     (nil))

;; esp_19 = OBJ_TYPE_REF(_14;_10->0) (_16, esp_17(D));

(insn 24 23 25 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:99 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 25 24 26 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 esp+0 S4 A32])) interrupts.cpp:99 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 26 25 27 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 96 [ D.1650 ])) interrupts.cpp:99 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 27 26 28 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:SI 94 [ D.1652 ]) [0 *OBJ_TYPE_REF(_14;(struct InterruptHandler)_10->0) S1 A8])
            (const_int 16 [0x10]))) interrupts.cpp:99 -1
     (nil)
    (nil))

(insn 28 27 29 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:99 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

(insn 29 28 30 (set (reg:SI 116)
        (reg:SI 0 ax)) interrupts.cpp:99 -1
     (nil))

(insn 30 29 0 (set (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 esp+0 S4 A32])
        (reg:SI 116)) interrupts.cpp:99 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 33 32 34 20 "" [0 uses])

(note 34 33 0 NOTE_INSN_BASIC_BLOCK)

;; if (interruptNumber_4(D) != 32)

(insn 35 34 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32])
            (const_int 32 [0x20]))) interrupts.cpp:101 -1
     (nil))

(jump_insn 36 35 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) interrupts.cpp:101 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; foo_20 = "Unhandled Interrupt 0x00";

(insn 38 37 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 foo+0 S4 A32])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f920471c2d0 *.LC0>)) interrupts.cpp:102 -1
     (nil))

;; hex_21 = "0123456789ABCDEF";

(insn 39 38 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hex+0 S4 A32])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7f920471c360 *.LC1>)) interrupts.cpp:103 -1
     (nil))

;; _22 = foo_20 + 22;

(insn 40 39 41 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 foo+0 S4 A32])) interrupts.cpp:104 -1
     (nil))

(insn 41 40 0 (parallel [
            (set (reg/f:SI 97 [ D.1653 ])
                (plus:SI (reg/f:SI 117)
                    (const_int 22 [0x16])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:104 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 foo+0 S4 A32])
            (const_int 22 [0x16]))
        (nil)))

;; _23 = interruptNumber_4(D) >> 4;

(insn 42 41 43 (set (reg:QI 118)
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32])) interrupts.cpp:104 -1
     (nil))

(insn 43 42 0 (parallel [
            (set (reg:QI 98 [ D.1654 ])
                (lshiftrt:QI (reg:QI 118)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:104 -1
     (expr_list:REG_EQUAL (lshiftrt:QI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32])
            (const_int 4 [0x4]))
        (nil)))

;; _24 = (sizetype) _23;

(insn 44 43 0 (set (reg:SI 99 [ D.1655 ])
        (zero_extend:SI (reg:QI 98 [ D.1654 ]))) interrupts.cpp:104 -1
     (nil))

;; _25 = hex_21 + _24;

(insn 45 44 46 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hex+0 S4 A32])) interrupts.cpp:104 -1
     (nil))

(insn 46 45 0 (parallel [
            (set (reg/f:SI 100 [ D.1653 ])
                (plus:SI (reg:SI 99 [ D.1655 ])
                    (reg/f:SI 119)))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:104 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 hex+0 S4 A32])
            (reg:SI 99 [ D.1655 ]))
        (nil)))

;; _26 = *_25;

(insn 47 46 0 (set (reg:QI 101 [ D.1656 ])
        (mem:QI (reg/f:SI 100 [ D.1653 ]) [0 *_25+0 S1 A8])) interrupts.cpp:104 -1
     (nil))

;; *_22 = _26;

(insn 48 47 0 (set (mem:QI (reg/f:SI 97 [ D.1653 ]) [0 *_22+0 S1 A8])
        (reg:QI 101 [ D.1656 ])) interrupts.cpp:104 -1
     (nil))

;; _28 = foo_20 + 23;

(insn 49 48 50 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 foo+0 S4 A32])) interrupts.cpp:105 -1
     (nil))

(insn 50 49 0 (parallel [
            (set (reg/f:SI 102 [ D.1653 ])
                (plus:SI (reg/f:SI 120)
                    (const_int 23 [0x17])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:105 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 foo+0 S4 A32])
            (const_int 23 [0x17]))
        (nil)))

;; _29 = (sizetype) interruptNumber_4(D);

(insn 51 50 0 (set (reg:SI 103 [ D.1655 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:105 -1
     (nil))

;; _30 = _29 & 15;

(insn 52 51 0 (parallel [
            (set (reg:SI 104 [ D.1655 ])
                (and:SI (reg:SI 103 [ D.1655 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:105 -1
     (nil))

;; _31 = hex_21 + _30;

(insn 53 52 54 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hex+0 S4 A32])) interrupts.cpp:105 -1
     (nil))

(insn 54 53 0 (parallel [
            (set (reg/f:SI 105 [ D.1653 ])
                (plus:SI (reg:SI 104 [ D.1655 ])
                    (reg/f:SI 121)))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:105 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 hex+0 S4 A32])
            (reg:SI 104 [ D.1655 ]))
        (nil)))

;; _32 = *_31;

(insn 55 54 0 (set (reg:QI 106 [ D.1656 ])
        (mem:QI (reg/f:SI 105 [ D.1653 ]) [0 *_31+0 S1 A8])) interrupts.cpp:105 -1
     (nil))

;; *_28 = _32;

(insn 56 55 0 (set (mem:QI (reg/f:SI 102 [ D.1653 ]) [0 *_28+0 S1 A8])
        (reg:QI 106 [ D.1656 ])) interrupts.cpp:105 -1
     (nil))

;; printf (foo_20);

(insn 57 56 58 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:106 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 58 57 59 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 foo+0 S4 A32])) interrupts.cpp:106 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 59 58 60 (call (mem:QI (symbol_ref:SI ("_Z6printfPc") [flags 0x41]  <function_decl 0x7f92046a7a20 printf>) [0 printf S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:106 -1
     (nil)
    (nil))

(insn 60 59 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:106 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; Generating RTL for gimple basic block 6

;; 

(code_label 61 60 62 21 "" [0 uses])

(note 62 61 0 NOTE_INSN_BASIC_BLOCK)

;; if (interruptNumber_4(D) > 31)

(insn 63 62 64 (set (reg:CC 17 flags)
        (compare:CC (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32])
            (const_int 31 [0x1f]))) interrupts.cpp:109 -1
     (nil))

(jump_insn 64 63 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) interrupts.cpp:109 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; if (interruptNumber_4(D) <= 47)

(insn 66 65 67 (set (reg:CC 17 flags)
        (compare:CC (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32])
            (const_int 47 [0x2f]))) interrupts.cpp:109 -1
     (nil))

(jump_insn 67 66 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) interrupts.cpp:109 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _35 = &this_7(D)->picMasterCommandPort;

(insn 69 68 70 (set (reg/f:SI 122)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:111 -1
     (nil))

(insn 70 69 0 (parallel [
            (set (reg/f:SI 107 [ D.1657 ])
                (plus:SI (reg/f:SI 122)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:111 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1024 [0x400]))
        (nil)))

;; Port8BitSlow::Write (_35, 32);

(insn 71 70 72 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:111 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 72 71 73 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 32 [0x20])) interrupts.cpp:111 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 73 72 74 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 107 [ D.1657 ])) interrupts.cpp:111 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 74 73 75 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:111 -1
     (nil)
    (nil))

(insn 75 74 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:111 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; if (interruptNumber_4(D) > 39)

(insn 76 75 77 (set (reg:CC 17 flags)
        (compare:CC (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32])
            (const_int 39 [0x27]))) interrupts.cpp:112 -1
     (nil))

(jump_insn 77 76 0 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) interrupts.cpp:112 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _37 = &this_7(D)->picSlaveCommandPort;

(insn 79 78 80 (set (reg/f:SI 123)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:114 -1
     (nil))

(insn 80 79 0 (parallel [
            (set (reg/f:SI 108 [ D.1657 ])
                (plus:SI (reg/f:SI 123)
                    (const_int 1032 [0x408])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:114 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1032 [0x408]))
        (nil)))

;; Port8BitSlow::Write (_37, 32);

(insn 81 80 82 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:114 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 82 81 83 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 32 [0x20])) interrupts.cpp:114 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 83 82 84 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 108 [ D.1657 ])) interrupts.cpp:114 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 84 83 85 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:114 -1
     (nil)
    (nil))

(insn 85 84 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:114 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; Generating RTL for gimple basic block 10

;; 

(code_label 86 85 87 22 "" [0 uses])

(note 87 86 0 NOTE_INSN_BASIC_BLOCK)

;; _39 = esp_1;

(insn 88 87 0 (set (reg:SI 109 [ D.1658 ])
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 esp+0 S4 A32])) interrupts.cpp:119 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; <L14>:

(code_label 89 88 90 23 "" [0 uses])

(note 90 89 0 NOTE_INSN_BASIC_BLOCK)

;; return _39;

(insn 91 90 92 (set (reg:SI 110 [ <retval> ])
        (reg:SI 109 [ D.1658 ])) interrupts.cpp:119 -1
     (nil))

(jump_insn 92 91 93 (set (pc)
        (label_ref 0)) interrupts.cpp:119 -1
     (nil))

(barrier 93 92 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Removing jump 92.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg:SI 111)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 interruptNumber+0 S4 A32])) interrupts.cpp:96 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32])
        (subreg:QI (reg:SI 111) 0)) interrupts.cpp:96 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SI 87 [ D.1649 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:98 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:SI 112)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:98 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:SI 88 [ D.1650 ])
        (mem/f/j:SI (plus:SI (mult:SI (reg:SI 87 [ D.1649 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 112)) [0 this_7(D)->handlers S4 A32])) interrupts.cpp:98 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:SI 88 [ D.1650 ])
            (const_int 0 [0]))) interrupts.cpp:98 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 33)
            (pc))) interrupts.cpp:98 -1
     (nil)
 -> 33)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:SI 89 [ D.1649 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:99 -1
     (nil))
(insn 14 13 15 4 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:99 -1
     (nil))
(insn 15 14 16 4 (set (reg/f:SI 90 [ D.1650 ])
        (mem/f/j:SI (plus:SI (mult:SI (reg:SI 89 [ D.1649 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 113)) [0 this_7(D)->handlers S4 A32])) interrupts.cpp:99 -1
     (nil))
(insn 16 15 17 4 (set (reg:SI 91 [ D.1649 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:99 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:SI 114)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:99 -1
     (nil))
(insn 18 17 19 4 (set (reg/f:SI 92 [ D.1650 ])
        (mem/f/j:SI (plus:SI (mult:SI (reg:SI 91 [ D.1649 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 114)) [0 this_7(D)->handlers S4 A32])) interrupts.cpp:99 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:SI 93 [ D.1651 ])
        (mem/f/j:SI (reg/f:SI 92 [ D.1650 ]) [0 _12->_vptr.InterruptHandler+0 S4 A32])) interrupts.cpp:99 -1
     (nil))
(insn 20 19 21 4 (set (reg/f:SI 94 [ D.1652 ])
        (mem/f:SI (reg/f:SI 93 [ D.1651 ]) [0 *_13+0 S4 A32])) interrupts.cpp:99 -1
     (nil))
(insn 21 20 22 4 (set (reg:SI 95 [ D.1649 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:99 -1
     (nil))
(insn 22 21 23 4 (set (reg/f:SI 115)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:99 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:SI 96 [ D.1650 ])
        (mem/f/j:SI (plus:SI (mult:SI (reg:SI 95 [ D.1649 ])
                    (const_int 4 [0x4]))
                (reg/f:SI 115)) [0 this_7(D)->handlers S4 A32])) interrupts.cpp:99 -1
     (nil))
(insn 24 23 25 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:99 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 25 24 26 4 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 esp+0 S4 A32])) interrupts.cpp:99 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 26 25 27 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 96 [ D.1650 ])) interrupts.cpp:99 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 27 26 28 4 (set (reg:SI 0 ax)
        (call (mem:QI (reg/f:SI 94 [ D.1652 ]) [0 *OBJ_TYPE_REF(_14;(struct InterruptHandler)_10->0) S1 A8])
            (const_int 16 [0x10]))) interrupts.cpp:99 -1
     (nil)
    (nil))
(insn 28 27 29 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:99 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 29 28 30 4 (set (reg:SI 116)
        (reg:SI 0 ax)) interrupts.cpp:99 -1
     (nil))
(insn 30 29 31 4 (set (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 esp+0 S4 A32])
        (reg:SI 116)) interrupts.cpp:99 -1
     (nil))
(jump_insn 31 30 32 4 (set (pc)
        (label_ref 61)) -1
     (nil)
 -> 61)
;;  succ:       7

(barrier 32 31 33)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 33 32 34 5 20 "" [1 uses])
(note 34 33 35 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32])
            (const_int 32 [0x20]))) interrupts.cpp:101 -1
     (nil))
(jump_insn 36 35 37 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) interrupts.cpp:101 -1
     (nil)
 -> 61)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 37 36 38 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 foo+0 S4 A32])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7f920471c2d0 *.LC0>)) interrupts.cpp:102 -1
     (nil))
(insn 39 38 40 6 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hex+0 S4 A32])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7f920471c360 *.LC1>)) interrupts.cpp:103 -1
     (nil))
(insn 40 39 41 6 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 foo+0 S4 A32])) interrupts.cpp:104 -1
     (nil))
(insn 41 40 42 6 (parallel [
            (set (reg/f:SI 97 [ D.1653 ])
                (plus:SI (reg/f:SI 117)
                    (const_int 22 [0x16])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:104 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 foo+0 S4 A32])
            (const_int 22 [0x16]))
        (nil)))
(insn 42 41 43 6 (set (reg:QI 118)
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32])) interrupts.cpp:104 -1
     (nil))
(insn 43 42 44 6 (parallel [
            (set (reg:QI 98 [ D.1654 ])
                (lshiftrt:QI (reg:QI 118)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:104 -1
     (expr_list:REG_EQUAL (lshiftrt:QI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 44 43 45 6 (set (reg:SI 99 [ D.1655 ])
        (zero_extend:SI (reg:QI 98 [ D.1654 ]))) interrupts.cpp:104 -1
     (nil))
(insn 45 44 46 6 (set (reg/f:SI 119)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hex+0 S4 A32])) interrupts.cpp:104 -1
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg/f:SI 100 [ D.1653 ])
                (plus:SI (reg:SI 99 [ D.1655 ])
                    (reg/f:SI 119)))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:104 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 hex+0 S4 A32])
            (reg:SI 99 [ D.1655 ]))
        (nil)))
(insn 47 46 48 6 (set (reg:QI 101 [ D.1656 ])
        (mem:QI (reg/f:SI 100 [ D.1653 ]) [0 *_25+0 S1 A8])) interrupts.cpp:104 -1
     (nil))
(insn 48 47 49 6 (set (mem:QI (reg/f:SI 97 [ D.1653 ]) [0 *_22+0 S1 A8])
        (reg:QI 101 [ D.1656 ])) interrupts.cpp:104 -1
     (nil))
(insn 49 48 50 6 (set (reg/f:SI 120)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 foo+0 S4 A32])) interrupts.cpp:105 -1
     (nil))
(insn 50 49 51 6 (parallel [
            (set (reg/f:SI 102 [ D.1653 ])
                (plus:SI (reg/f:SI 120)
                    (const_int 23 [0x17])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:105 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 foo+0 S4 A32])
            (const_int 23 [0x17]))
        (nil)))
(insn 51 50 52 6 (set (reg:SI 103 [ D.1655 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32]))) interrupts.cpp:105 -1
     (nil))
(insn 52 51 53 6 (parallel [
            (set (reg:SI 104 [ D.1655 ])
                (and:SI (reg:SI 103 [ D.1655 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:105 -1
     (nil))
(insn 53 52 54 6 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 hex+0 S4 A32])) interrupts.cpp:105 -1
     (nil))
(insn 54 53 55 6 (parallel [
            (set (reg/f:SI 105 [ D.1653 ])
                (plus:SI (reg:SI 104 [ D.1655 ])
                    (reg/f:SI 121)))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:105 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 hex+0 S4 A32])
            (reg:SI 104 [ D.1655 ]))
        (nil)))
(insn 55 54 56 6 (set (reg:QI 106 [ D.1656 ])
        (mem:QI (reg/f:SI 105 [ D.1653 ]) [0 *_31+0 S1 A8])) interrupts.cpp:105 -1
     (nil))
(insn 56 55 57 6 (set (mem:QI (reg/f:SI 102 [ D.1653 ]) [0 *_28+0 S1 A8])
        (reg:QI 106 [ D.1656 ])) interrupts.cpp:105 -1
     (nil))
(insn 57 56 58 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:106 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 58 57 59 6 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 foo+0 S4 A32])) interrupts.cpp:106 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 59 58 60 6 (call (mem:QI (symbol_ref:SI ("_Z6printfPc") [flags 0x41]  <function_decl 0x7f92046a7a20 printf>) [0 printf S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:106 -1
     (nil)
    (nil))
(insn 60 59 61 6 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:106 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              5
;;              6 (FALLTHRU)
(code_label 61 60 62 7 21 "" [2 uses])
(note 62 61 63 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 7 (set (reg:CC 17 flags)
        (compare:CC (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32])
            (const_int 31 [0x1f]))) interrupts.cpp:109 -1
     (nil))
(jump_insn 64 63 65 7 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) interrupts.cpp:109 -1
     (nil)
 -> 86)
;;  succ:       8 (FALLTHRU)
;;              11

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 65 64 66 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 8 (set (reg:CC 17 flags)
        (compare:CC (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32])
            (const_int 47 [0x2f]))) interrupts.cpp:109 -1
     (nil))
(jump_insn 67 66 68 8 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) interrupts.cpp:109 -1
     (nil)
 -> 86)
;;  succ:       9 (FALLTHRU)
;;              11

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 68 67 69 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 9 (set (reg/f:SI 122)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:111 -1
     (nil))
(insn 70 69 71 9 (parallel [
            (set (reg/f:SI 107 [ D.1657 ])
                (plus:SI (reg/f:SI 122)
                    (const_int 1024 [0x400])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:111 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1024 [0x400]))
        (nil)))
(insn 71 70 72 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:111 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 72 71 73 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 32 [0x20])) interrupts.cpp:111 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 73 72 74 9 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 107 [ D.1657 ])) interrupts.cpp:111 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 74 73 75 9 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:111 -1
     (nil)
    (nil))
(insn 75 74 76 9 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:111 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 76 75 77 9 (set (reg:CC 17 flags)
        (compare:CC (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [0 interruptNumber+0 S1 A32])
            (const_int 39 [0x27]))) interrupts.cpp:112 -1
     (nil))
(jump_insn 77 76 78 9 (set (pc)
        (if_then_else (leu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) interrupts.cpp:112 -1
     (nil)
 -> 86)
;;  succ:       10 (FALLTHRU)
;;              11

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 78 77 79 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 10 (set (reg/f:SI 123)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) interrupts.cpp:114 -1
     (nil))
(insn 80 79 81 10 (parallel [
            (set (reg/f:SI 108 [ D.1657 ])
                (plus:SI (reg/f:SI 123)
                    (const_int 1032 [0x408])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:114 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 1032 [0x408]))
        (nil)))
(insn 81 80 82 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:114 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 82 81 83 10 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 32 [0x20])) interrupts.cpp:114 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 83 82 84 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 108 [ D.1657 ])) interrupts.cpp:114 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 84 83 85 10 (call (mem:QI (symbol_ref:SI ("_ZN12Port8BitSlow5WriteEh") [flags 0x41]  <function_decl 0x7f920468dbd0 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) interrupts.cpp:114 -1
     (nil)
    (nil))
(insn 85 84 86 10 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) interrupts.cpp:114 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
;;  succ:       11 (FALLTHRU)

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
;;              8
;;              10 (FALLTHRU)
;;              9
(code_label 86 85 87 11 22 "" [3 uses])
(note 87 86 88 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 91 11 (set (reg:SI 109 [ D.1658 ])
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 esp+0 S4 A32])) interrupts.cpp:119 -1
     (nil))
(insn 91 88 95 11 (set (reg:SI 110 [ <retval> ])
        (reg:SI 109 [ D.1658 ])) interrupts.cpp:119 -1
     (nil))
(insn 95 91 96 11 (set (reg/i:SI 0 ax)
        (reg:SI 110 [ <retval> ])) interrupts.cpp:120 -1
     (nil))
(insn 96 95 0 11 (use (reg/i:SI 0 ax)) interrupts.cpp:120 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

