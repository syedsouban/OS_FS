
;; Function GlobalDescriptorTable::GlobalDescriptorTable() (_ZN21GlobalDescriptorTableC2Ev, funcdef_no=1, decl_uid=1113, cgraph_uid=1, symbol_order=1)

GlobalDescriptorTable::GlobalDescriptorTable() (struct GlobalDescriptorTable * const this)
{
  uint32_t i[2];
  uint8_t * D.1199;
  unsigned int this.0;
  unsigned int D.1197;
  struct SegmentDescriptor * D.1196;
  struct SegmentDescriptor * D.1195;
  struct SegmentDescriptor * D.1194;
  struct SegmentDescriptor * D.1193;
  struct SegmentDescriptor * _2;
  struct SegmentDescriptor * _5;
  struct SegmentDescriptor * _7;
  struct SegmentDescriptor * _9;
  unsigned int _11;
  unsigned int this.0_13;
  uint8_t * _15;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = &this_1(D)->nullSegmentSelector;
  GlobalDescriptorTable::SegmentDescriptor::SegmentDescriptor (_2, 0, 0, 0);
  _5 = &this_1(D)->unusedSegmentSelector;
  GlobalDescriptorTable::SegmentDescriptor::SegmentDescriptor (_5, 0, 0, 0);
  _7 = &this_1(D)->codeSegmentSelector;
  GlobalDescriptorTable::SegmentDescriptor::SegmentDescriptor (_7, 0, 67108864, 154);
  _9 = &this_1(D)->dataSegmentSelector;
  GlobalDescriptorTable::SegmentDescriptor::SegmentDescriptor (_9, 0, 67108864, 146);
  _11 = 2097152;
  i[0] = _11;
  this.0_13 = (unsigned int) this_1(D);
  i[1] = this.0_13;
  _15 = &i + 2;
  __asm__ __volatile__("lgdt (%0)" :  : "p" _15);
  i ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (this_1(D) - 1 )
Partition 2 (_2 - 2 )
Partition 5 (_5 - 5 )
Partition 7 (_7 - 7 )
Partition 9 (_9 - 9 )
Partition 11 (_11 - 11 )
Partition 13 (this.0_13 - 13 )
Partition 15 (_15 - 15 )


Partition map 

Partition 0 (this_1(D) - 1 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_1(D) - 1 )

After Coalescing:

Partition map 

Partition 0 (this_1(D) - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_5 - 5 )
Partition 3 (_7 - 7 )
Partition 4 (_9 - 9 )
Partition 5 (_11 - 11 )
Partition 6 (this.0_13 - 13 )
Partition 7 (_15 - 15 )

GlobalDescriptorTable::GlobalDescriptorTable() (struct GlobalDescriptorTable * const this)
{
  uint32_t i[2];
  uint8_t * D.1199;
  unsigned int this.0;
  unsigned int D.1197;
  struct SegmentDescriptor * D.1196;
  struct SegmentDescriptor * D.1195;
  struct SegmentDescriptor * D.1194;
  struct SegmentDescriptor * D.1193;
  struct SegmentDescriptor * _2;
  struct SegmentDescriptor * _5;
  struct SegmentDescriptor * _7;
  struct SegmentDescriptor * _9;
  unsigned int _11;
  unsigned int this.0_13;
  uint8_t * _15;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = &this_1(D)->nullSegmentSelector;
  GlobalDescriptorTable::SegmentDescriptor::SegmentDescriptor (_2, 0, 0, 0);
  _5 = &this_1(D)->unusedSegmentSelector;
  GlobalDescriptorTable::SegmentDescriptor::SegmentDescriptor (_5, 0, 0, 0);
  _7 = &this_1(D)->codeSegmentSelector;
  GlobalDescriptorTable::SegmentDescriptor::SegmentDescriptor (_7, 0, 67108864, 154);
  _9 = &this_1(D)->dataSegmentSelector;
  GlobalDescriptorTable::SegmentDescriptor::SegmentDescriptor (_9, 0, 67108864, 146);
  _11 = 2097152;
  i[0] = _11;
  this.0_13 = (unsigned int) this_1(D);
  i[1] = this.0_13;
  _15 = &i + 2;
  __asm__ __volatile__("lgdt (%0)" :  : "p" _15);
  i ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _2 = &this_1(D)->nullSegmentSelector;

(insn 5 4 0 (set (reg/f:SI 87 [ D.1281 ])
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) gdt.cpp:13 -1
     (nil))

;; GlobalDescriptorTable::SegmentDescriptor::SegmentDescriptor (_2, 0, 0, 0);

(insn 6 5 7 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))

(insn 7 6 8 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 8 7 9 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 9 8 10 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 87 [ D.1281 ])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 10 9 11 (call (mem:QI (symbol_ref:SI ("_ZN21GlobalDescriptorTable17SegmentDescriptorC1Ejjh") [flags 0x3]  <function_decl 0x7f182a6e11b0 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) gdt.cpp:13 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 11 10 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _5 = &this_1(D)->unusedSegmentSelector;

(insn 12 11 13 (set (reg/f:SI 94)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) gdt.cpp:13 -1
     (nil))

(insn 13 12 0 (parallel [
            (set (reg/f:SI 88 [ D.1281 ])
                (plus:SI (reg/f:SI 94)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:13 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))

;; GlobalDescriptorTable::SegmentDescriptor::SegmentDescriptor (_5, 0, 0, 0);

(insn 14 13 15 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))

(insn 15 14 16 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 16 15 17 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 17 16 18 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 88 [ D.1281 ])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 18 17 19 (call (mem:QI (symbol_ref:SI ("_ZN21GlobalDescriptorTable17SegmentDescriptorC1Ejjh") [flags 0x3]  <function_decl 0x7f182a6e11b0 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) gdt.cpp:13 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 19 18 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _7 = &this_1(D)->codeSegmentSelector;

(insn 20 19 21 (set (reg/f:SI 95)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) gdt.cpp:13 -1
     (nil))

(insn 21 20 0 (parallel [
            (set (reg/f:SI 89 [ D.1281 ])
                (plus:SI (reg/f:SI 95)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:13 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

;; GlobalDescriptorTable::SegmentDescriptor::SegmentDescriptor (_7, 0, 67108864, 154);

(insn 22 21 23 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 154 [0x9a])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))

(insn 23 22 24 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 67108864 [0x4000000])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 24 23 25 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 25 24 26 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 89 [ D.1281 ])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 26 25 27 (call (mem:QI (symbol_ref:SI ("_ZN21GlobalDescriptorTable17SegmentDescriptorC1Ejjh") [flags 0x3]  <function_decl 0x7f182a6e11b0 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) gdt.cpp:13 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 27 26 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _9 = &this_1(D)->dataSegmentSelector;

(insn 28 27 29 (set (reg/f:SI 96)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) gdt.cpp:13 -1
     (nil))

(insn 29 28 0 (parallel [
            (set (reg/f:SI 90 [ D.1281 ])
                (plus:SI (reg/f:SI 96)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:13 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 24 [0x18]))
        (nil)))

;; GlobalDescriptorTable::SegmentDescriptor::SegmentDescriptor (_9, 0, 67108864, 146);

(insn 30 29 31 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 146 [0x92])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))

(insn 31 30 32 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 67108864 [0x4000000])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))

(insn 32 31 33 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))

(insn 33 32 34 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 90 [ D.1281 ])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))

(call_insn 34 33 35 (call (mem:QI (symbol_ref:SI ("_ZN21GlobalDescriptorTable17SegmentDescriptorC1Ejjh") [flags 0x3]  <function_decl 0x7f182a6e11b0 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) gdt.cpp:13 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 35 34 0 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))

;; _11 = 2097152;

(insn 36 35 0 (set (reg:SI 91 [ D.1282 ])
        (const_int 2097152 [0x200000])) gdt.cpp:16 -1
     (nil))

;; i[0] = _11;

(insn 37 36 0 (set (mem/j/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (reg:SI 91 [ D.1282 ])) gdt.cpp:16 -1
     (nil))

;; _13 = (unsigned int) this_1(D);

(insn 38 37 0 (set (reg:SI 92 [ D.1282 ])
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) gdt.cpp:17 -1
     (nil))

;; i[1] = _13;

(insn 39 38 0 (set (mem/j/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+4 S4 A32])
        (reg:SI 92 [ D.1282 ])) gdt.cpp:17 -1
     (nil))

;; _15 = &i + 2;

(insn 40 39 41 (parallel [
            (set (reg/f:SI 93 [ D.1283 ])
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:18 -1
     (nil))

(insn 41 40 0 (parallel [
            (set (reg/f:SI 93 [ D.1283 ])
                (plus:SI (reg/f:SI 93 [ D.1283 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:18 -1
     (nil))

;; __asm__ __volatile__("lgdt (%0)" :  : "p" _15);

(insn 42 41 0 (parallel [
            (asm_operands/v ("lgdt (%0)") ("") 0 [
                    (reg/f:SI 93 [ D.1283 ])
                ]
                 [
                    (asm_input:SI ("p") gdt.cpp:18)
                ]
                 [] gdt.cpp:18)
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) gdt.cpp:18 -1
     (nil))

;; i ={v} {CLOBBER};

(nil)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 87 [ D.1281 ])
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) gdt.cpp:13 -1
     (nil))
(insn 6 5 7 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 7 6 8 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 8 7 9 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 87 [ D.1281 ])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("_ZN21GlobalDescriptorTable17SegmentDescriptorC1Ejjh") [flags 0x3]  <function_decl 0x7f182a6e11b0 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) gdt.cpp:13 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 11 10 12 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 12 11 13 2 (set (reg/f:SI 94)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) gdt.cpp:13 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg/f:SI 88 [ D.1281 ])
                (plus:SI (reg/f:SI 94)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:13 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 14 13 15 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 15 14 16 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 16 15 17 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 17 16 18 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 88 [ D.1281 ])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref:SI ("_ZN21GlobalDescriptorTable17SegmentDescriptorC1Ejjh") [flags 0x3]  <function_decl 0x7f182a6e11b0 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) gdt.cpp:13 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 19 18 20 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 20 19 21 2 (set (reg/f:SI 95)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) gdt.cpp:13 -1
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg/f:SI 89 [ D.1281 ])
                (plus:SI (reg/f:SI 95)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:13 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))
(insn 22 21 23 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 154 [0x9a])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 23 22 24 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 67108864 [0x4000000])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 24 23 25 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 25 24 26 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 89 [ D.1281 ])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 26 25 27 2 (call (mem:QI (symbol_ref:SI ("_ZN21GlobalDescriptorTable17SegmentDescriptorC1Ejjh") [flags 0x3]  <function_decl 0x7f182a6e11b0 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) gdt.cpp:13 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 27 26 28 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 28 27 29 2 (set (reg/f:SI 96)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) gdt.cpp:13 -1
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg/f:SI 90 [ D.1281 ])
                (plus:SI (reg/f:SI 96)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:13 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])
            (const_int 24 [0x18]))
        (nil)))
(insn 30 29 31 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 146 [0x92])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
        (nil)))
(insn 31 30 32 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 67108864 [0x4000000])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 32 31 33 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 0 [0])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 33 32 34 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 90 [ D.1281 ])) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 34 33 35 2 (call (mem:QI (symbol_ref:SI ("_ZN21GlobalDescriptorTable17SegmentDescriptorC1Ejjh") [flags 0x3]  <function_decl 0x7f182a6e11b0 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) gdt.cpp:13 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 35 34 36 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:13 -1
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 36 35 37 2 (set (reg:SI 91 [ D.1282 ])
        (const_int 2097152 [0x200000])) gdt.cpp:16 -1
     (nil))
(insn 37 36 38 2 (set (mem/j/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 i+0 S4 A32])
        (reg:SI 91 [ D.1282 ])) gdt.cpp:16 -1
     (nil))
(insn 38 37 39 2 (set (reg:SI 92 [ D.1282 ])
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) gdt.cpp:17 -1
     (nil))
(insn 39 38 40 2 (set (mem/j/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 i+4 S4 A32])
        (reg:SI 92 [ D.1282 ])) gdt.cpp:17 -1
     (nil))
(insn 40 39 41 2 (parallel [
            (set (reg/f:SI 93 [ D.1283 ])
                (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:18 -1
     (nil))
(insn 41 40 42 2 (parallel [
            (set (reg/f:SI 93 [ D.1283 ])
                (plus:SI (reg/f:SI 93 [ D.1283 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:18 -1
     (nil))
(insn 42 41 45 2 (parallel [
            (asm_operands/v ("lgdt (%0)") ("") 0 [
                    (reg/f:SI 93 [ D.1283 ])
                ]
                 [
                    (asm_input:SI ("p") gdt.cpp:18)
                ]
                 [] gdt.cpp:18)
            (clobber (reg:QI 18 fpsr))
            (clobber (reg:QI 17 flags))
        ]) gdt.cpp:18 -1
     (nil))
(insn 45 42 0 2 (const_int 0 [0]) gdt.cpp:19 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function GlobalDescriptorTable::~GlobalDescriptorTable() (_ZN21GlobalDescriptorTableD2Ev, funcdef_no=4, decl_uid=1118, cgraph_uid=4, symbol_order=4)

GlobalDescriptorTable::~GlobalDescriptorTable() (struct GlobalDescriptorTable * const this)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



Partition map 

Partition 2 (this_2(D) - 2 )


Partition map 

Partition 0 (this_2(D) - 2 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (this_2(D) - 2 )

After Coalescing:

Partition map 

Partition 0 (this_2(D) - 2 )

GlobalDescriptorTable::~GlobalDescriptorTable() (struct GlobalDescriptorTable * const this)
{
;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  MEM[(struct  &)this_2(D)] ={v} {CLOBBER};
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; MEM[(struct  &)this_2(D)] ={v} {CLOBBER};

(nil)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 2 0 2 (const_int 0 [0]) gdt.cpp:24 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function uint16_t GlobalDescriptorTable::GetDataSegmentOffset() (_ZN21GlobalDescriptorTable20GetDataSegmentOffsetEv, funcdef_no=6, decl_uid=1107, cgraph_uid=6, symbol_order=6)

uint16_t GlobalDescriptorTable::GetDataSegmentOffset() (struct GlobalDescriptorTable * const this)
{
  uint16_t D.1200;
  uint16_t _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 24;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )

uint16_t GlobalDescriptorTable::GetDataSegmentOffset() (struct GlobalDescriptorTable * const this)
{
  uint16_t D.1200;
  uint16_t _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 24;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = 24;

(insn 5 4 0 (set (reg:HI 87 [ D.1284 ])
        (const_int 24 [0x18])) gdt.cpp:30 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 6 5 7 4 "" [0 uses])

(note 7 6 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 8 7 9 (set (reg:HI 88 [ <retval> ])
        (reg:HI 87 [ D.1284 ])) gdt.cpp:30 -1
     (nil))

(jump_insn 9 8 10 (set (pc)
        (label_ref 0)) gdt.cpp:30 -1
     (nil))

(barrier 10 9 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 9.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg:HI 87 [ D.1284 ])
        (const_int 24 [0x18])) gdt.cpp:30 -1
     (nil))
(insn 8 5 12 2 (set (reg:HI 88 [ <retval> ])
        (reg:HI 87 [ D.1284 ])) gdt.cpp:30 -1
     (nil))
(insn 12 8 13 2 (set (reg/i:HI 0 ax)
        (reg:HI 88 [ <retval> ])) gdt.cpp:31 -1
     (nil))
(insn 13 12 0 2 (use (reg/i:HI 0 ax)) gdt.cpp:31 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function uint16_t GlobalDescriptorTable::GetCodeSegmentOffset() (_ZN21GlobalDescriptorTable20GetCodeSegmentOffsetEv, funcdef_no=7, decl_uid=1109, cgraph_uid=7, symbol_order=7)

uint16_t GlobalDescriptorTable::GetCodeSegmentOffset() (struct GlobalDescriptorTable * const this)
{
  uint16_t D.1202;
  uint16_t _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 16;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )

uint16_t GlobalDescriptorTable::GetCodeSegmentOffset() (struct GlobalDescriptorTable * const this)
{
  uint16_t D.1202;
  uint16_t _1;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = 16;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = 16;

(insn 5 4 0 (set (reg:HI 87 [ D.1285 ])
        (const_int 16 [0x10])) gdt.cpp:35 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 6 5 7 6 "" [0 uses])

(note 7 6 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 8 7 9 (set (reg:HI 88 [ <retval> ])
        (reg:HI 87 [ D.1285 ])) gdt.cpp:35 -1
     (nil))

(jump_insn 9 8 10 (set (pc)
        (label_ref 0)) gdt.cpp:35 -1
     (nil))

(barrier 10 9 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 9.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 8 2 (set (reg:HI 87 [ D.1285 ])
        (const_int 16 [0x10])) gdt.cpp:35 -1
     (nil))
(insn 8 5 12 2 (set (reg:HI 88 [ <retval> ])
        (reg:HI 87 [ D.1285 ])) gdt.cpp:35 -1
     (nil))
(insn 12 8 13 2 (set (reg/i:HI 0 ax)
        (reg:HI 88 [ <retval> ])) gdt.cpp:36 -1
     (nil))
(insn 13 12 0 2 (use (reg/i:HI 0 ax)) gdt.cpp:36 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function GlobalDescriptorTable::SegmentDescriptor::SegmentDescriptor(uint32_t, uint32_t, uint8_t) (_ZN21GlobalDescriptorTable17SegmentDescriptorC2Ejjh, funcdef_no=9, decl_uid=1087, cgraph_uid=9, symbol_order=9)

GlobalDescriptorTable::SegmentDescriptor::SegmentDescriptor(uint32_t, uint32_t, uint8_t) (struct SegmentDescriptor * const this, uint32_t base, uint32_t limit, uint8_t access_byte)
{
  uint8_t * target;
  uint8_t * D.1237;
  unsigned char D.1236;
  bool D.1235;
  unsigned int D.1234;
  uint8_t * D.1233;
  unsigned char D.1232;
  unsigned int D.1231;
  uint8_t * D.1230;
  unsigned char D.1229;
  unsigned int D.1228;
  uint8_t * D.1227;
  unsigned char D.1226;
  uint8_t * D.1225;
  unsigned char D.1224;
  unsigned char D.1223;
  unsigned char D.1222;
  unsigned int D.1221;
  unsigned char D.1220;
  uint8_t * D.1219;
  uint8_t * D.1218;
  unsigned char D.1217;
  unsigned int D.1216;
  uint8_t * D.1215;
  unsigned char D.1214;
  uint8_t * D.1213;
  unsigned int D.1211;
  unsigned int D.1208;
  uint8_t * D.1206;
  uint8_t * _7;
  unsigned int _10;
  unsigned int _11;
  uint8_t * _14;
  unsigned char _16;
  uint8_t * _18;
  unsigned int _19;
  unsigned char _20;
  uint8_t * _22;
  uint8_t * _23;
  unsigned char _24;
  unsigned int _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  uint8_t * _30;
  unsigned char _32;
  uint8_t * _34;
  unsigned int _35;
  unsigned char _36;
  uint8_t * _38;
  unsigned int _39;
  unsigned char _40;
  uint8_t * _42;
  unsigned int _43;
  bool _44;
  unsigned char _45;
  uint8_t * _47;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  target_5 = this_4(D);
  if (limit_6(D) <= 65536)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _7 = target_5 + 6;
  *_7 = 64;
  goto <bb 8>;
;;    succ:       8

;;   basic block 4, loop depth 0
;;    pred:       2
  _10 = limit_6(D) & 4095;
  if (_10 != 4095)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _11 = limit_6(D) >> 12;
  limit_12 = _11 + 4294967295;
  goto <bb 7>;
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       4
  limit_13 = limit_6(D) >> 12;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # limit_1 = PHI <limit_12(5), limit_13(6)>
  _14 = target_5 + 6;
  *_14 = 192;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       3
;;                7
  # limit_2 = PHI <limit_6(D)(3), limit_1(7)>
  _16 = (unsigned char) limit_2;
  *target_5 = _16;
  _18 = target_5 + 1;
  _19 = limit_2 >> 8;
  _20 = (unsigned char) _19;
  *_18 = _20;
  _22 = target_5 + 6;
  _23 = target_5 + 6;
  _24 = *_23;
  _25 = limit_2 >> 16;
  _26 = (unsigned char) _25;
  _27 = _26 & 15;
  _28 = _24 | _27;
  *_22 = _28;
  _30 = target_5 + 2;
  _32 = (unsigned char) base_31(D);
  *_30 = _32;
  _34 = target_5 + 3;
  _35 = base_31(D) >> 8;
  _36 = (unsigned char) _35;
  *_34 = _36;
  _38 = target_5 + 4;
  _39 = base_31(D) >> 16;
  _40 = (unsigned char) _39;
  *_38 = _40;
  _42 = target_5 + 7;
  _43 = base_31(D) >> 24;
  _44 = _43 != 0;
  _45 = (unsigned char) _44;
  *_42 = _45;
  _47 = target_5 + 5;
  *_47 = access_byte_48(D);
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (limit_1 - 1 )
Partition 2 (limit_2 - 2 )
Partition 4 (this_4(D) - 4 )
Partition 5 (target_5 - 5 )
Partition 6 (limit_6(D) - 6 )
Partition 7 (_7 - 7 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (limit_12 - 12 )
Partition 13 (limit_13 - 13 )
Partition 14 (_14 - 14 )
Partition 16 (_16 - 16 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 30 (_30 - 30 )
Partition 31 (base_31(D) - 31 )
Partition 32 (_32 - 32 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 47 (_47 - 47 )
Partition 48 (access_byte_48(D) - 48 )


Partition map 

Partition 0 (limit_1 - 1 )
Partition 1 (limit_2 - 2 )
Partition 2 (this_4(D) - 4 )
Partition 3 (limit_6(D) - 6 )
Partition 4 (limit_12 - 12 )
Partition 5 (limit_13 - 13 )
Partition 6 (base_31(D) - 31 )
Partition 7 (access_byte_48(D) - 48 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483647) limit_1 <-> limit_2
(2147483647) limit_1 <-> limit_6(D)
(2147483647) limit_1 <-> limit_12
(2147483647) limit_1 <-> limit_13
(1) limit_2 <-> limit_6(D)

Partition map 

Partition 0 (limit_1 - 1 )
Partition 1 (limit_2 - 2 )
Partition 2 (this_4(D) - 4 )
Partition 3 (limit_6(D) - 6 )
Partition 4 (limit_12 - 12 )
Partition 5 (limit_13 - 13 )
Partition 6 (base_31(D) - 31 )
Partition 7 (access_byte_48(D) - 48 )

Coalesce list: (1)limit_1 & (2)limit_2 [map: 0, 1] : Success -> 0
Coalesce list: (1)limit_1 & (6)limit_6(D) [map: 0, 3] : Success -> 0
Coalesce list: (1)limit_1 & (12)limit_12 [map: 0, 4] : Success -> 0
Coalesce list: (1)limit_1 & (13)limit_13 [map: 0, 5] : Success -> 0
Coalesce list: (2)limit_1 & (6)limit_1: Already Coalesced.
Coalesce list: (2)limit_1 & (1)limit_1: Already Coalesced.
Coalesce list: (1)limit_1 & (13)limit_1: Already Coalesced.
Coalesce list: (1)limit_1 & (12)limit_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (limit_1 - 1 2 6 12 13 )
Partition 1 (this_4(D) - 4 )
Partition 2 (target_5 - 5 )
Partition 3 (_7 - 7 )
Partition 4 (_10 - 10 )
Partition 5 (_11 - 11 )
Partition 6 (_14 - 14 )
Partition 7 (_16 - 16 )
Partition 8 (_18 - 18 )
Partition 9 (_19 - 19 )
Partition 10 (_20 - 20 )
Partition 11 (_22 - 22 )
Partition 12 (_23 - 23 )
Partition 13 (_24 - 24 )
Partition 14 (_25 - 25 )
Partition 15 (_26 - 26 )
Partition 16 (_27 - 27 )
Partition 17 (_28 - 28 )
Partition 18 (_30 - 30 )
Partition 19 (base_31(D) - 31 )
Partition 20 (_32 - 32 )
Partition 21 (_34 - 34 )
Partition 22 (_35 - 35 )
Partition 23 (_36 - 36 )
Partition 24 (_38 - 38 )
Partition 25 (_39 - 39 )
Partition 26 (_40 - 40 )
Partition 27 (_42 - 42 )
Partition 28 (_43 - 43 )
Partition 29 (_44 - 44 )
Partition 30 (_45 - 45 )
Partition 31 (_47 - 47 )
Partition 32 (access_byte_48(D) - 48 )

GlobalDescriptorTable::SegmentDescriptor::SegmentDescriptor(uint32_t, uint32_t, uint8_t) (struct SegmentDescriptor * const this, uint32_t base, uint32_t limit, uint8_t access_byte)
{
  uint8_t * target;
  uint8_t * D.1237;
  unsigned char D.1236;
  bool D.1235;
  unsigned int D.1234;
  uint8_t * D.1233;
  unsigned char D.1232;
  unsigned int D.1231;
  uint8_t * D.1230;
  unsigned char D.1229;
  unsigned int D.1228;
  uint8_t * D.1227;
  unsigned char D.1226;
  uint8_t * D.1225;
  unsigned char D.1224;
  unsigned char D.1223;
  unsigned char D.1222;
  unsigned int D.1221;
  unsigned char D.1220;
  uint8_t * D.1219;
  uint8_t * D.1218;
  unsigned char D.1217;
  unsigned int D.1216;
  uint8_t * D.1215;
  unsigned char D.1214;
  uint8_t * D.1213;
  unsigned int D.1211;
  unsigned int D.1208;
  uint8_t * D.1206;
  uint8_t * _7;
  unsigned int _10;
  unsigned int _11;
  uint8_t * _14;
  unsigned char _16;
  uint8_t * _18;
  unsigned int _19;
  unsigned char _20;
  uint8_t * _22;
  uint8_t * _23;
  unsigned char _24;
  unsigned int _25;
  unsigned char _26;
  unsigned char _27;
  unsigned char _28;
  uint8_t * _30;
  unsigned char _32;
  uint8_t * _34;
  unsigned int _35;
  unsigned char _36;
  uint8_t * _38;
  unsigned int _39;
  unsigned char _40;
  uint8_t * _42;
  unsigned int _43;
  bool _44;
  unsigned char _45;
  uint8_t * _47;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  target_5 = this_4(D);
  if (limit_6(D) <= 65536)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _7 = target_5 + 6;
  *_7 = 64;
  goto <bb 8>;
;;    succ:       8

;;   basic block 4, loop depth 0
;;    pred:       2
  _10 = limit_6(D) & 4095;
  if (_10 != 4095)
    goto <bb 5>;
  else
    goto <bb 6>;
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _11 = limit_6(D) >> 12;
  limit_12 = _11 + 4294967295;
  goto <bb 7>;
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       4
  limit_13 = limit_6(D) >> 12;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # limit_1 = PHI <limit_12(5), limit_13(6)>
  _14 = target_5 + 6;
  *_14 = 192;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       3
;;                7
  # limit_2 = PHI <limit_6(D)(3), limit_1(7)>
  _16 = (unsigned char) limit_2;
  *target_5 = _16;
  _18 = target_5 + 1;
  _19 = limit_2 >> 8;
  _20 = (unsigned char) _19;
  *_18 = _20;
  _22 = target_5 + 6;
  _23 = target_5 + 6;
  _24 = *_23;
  _25 = limit_2 >> 16;
  _26 = (unsigned char) _25;
  _27 = _26 & 15;
  _28 = _24 | _27;
  *_22 = _28;
  _30 = target_5 + 2;
  _32 = (unsigned char) base_31(D);
  *_30 = _32;
  _34 = target_5 + 3;
  _35 = base_31(D) >> 8;
  _36 = (unsigned char) _35;
  *_34 = _36;
  _38 = target_5 + 4;
  _39 = base_31(D) >> 16;
  _40 = (unsigned char) _39;
  *_38 = _40;
  _42 = target_5 + 7;
  _43 = base_31(D) >> 24;
  _44 = _43 != 0;
  _45 = (unsigned char) _44;
  *_42 = _45;
  _47 = target_5 + 5;
  *_47 = access_byte_48(D);
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; target_5 = this_4(D);

(insn 7 6 8 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) gdt.cpp:40 -1
     (nil))

(insn 8 7 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
        (reg/f:SI 116)) gdt.cpp:40 -1
     (nil))

;; if (limit_6(D) <= 65536)

(insn 9 8 10 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 limit+0 S4 A32])
            (const_int 65536 [0x10000]))) gdt.cpp:41 -1
     (nil))

(jump_insn 10 9 0 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) gdt.cpp:41 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _7 = target_5 + 6;

(insn 12 11 13 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:43 -1
     (nil))

(insn 13 12 0 (parallel [
            (set (reg/f:SI 87 [ D.1286 ])
                (plus:SI (reg/f:SI 117)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:43 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 6 [0x6]))
        (nil)))

;; *_7 = 64;

(insn 14 13 0 (set (mem:QI (reg/f:SI 87 [ D.1286 ]) [0 *_7+0 S1 A8])
        (const_int 64 [0x40])) gdt.cpp:43 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 17 16 18 8 "" [0 uses])

(note 18 17 0 NOTE_INSN_BASIC_BLOCK)

;; _10 = limit_6(D) & 4095;

(insn 19 18 20 (set (reg:SI 118)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 limit+0 S4 A32])) gdt.cpp:47 -1
     (nil))

(insn 20 19 0 (parallel [
            (set (reg:SI 88 [ D.1287 ])
                (and:SI (reg:SI 118)
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:47 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 limit+0 S4 A32])
            (const_int 4095 [0xfff]))
        (nil)))

;; if (_10 != 4095)

(insn 21 20 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.1287 ])
            (const_int 4095 [0xfff]))) gdt.cpp:47 -1
     (nil))

(jump_insn 22 21 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) gdt.cpp:47 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _11 = limit_6(D) >> 12;

(insn 24 23 25 (set (reg:SI 119)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 limit+0 S4 A32])) gdt.cpp:48 -1
     (nil))

(insn 25 24 0 (parallel [
            (set (reg:SI 89 [ D.1287 ])
                (lshiftrt:SI (reg:SI 119)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:48 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 limit+0 S4 A32])
            (const_int 12 [0xc]))
        (nil)))

;; limit_12 = _11 + 4294967295;

(insn 26 25 27 (parallel [
            (set (reg:SI 120)
                (plus:SI (reg:SI 89 [ D.1287 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:48 -1
     (nil))

(insn 27 26 0 (set (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 limit+0 S4 A32])
        (reg:SI 120)) gdt.cpp:48 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 30 29 31 10 "" [0 uses])

(note 31 30 0 NOTE_INSN_BASIC_BLOCK)

;; limit_13 = limit_6(D) >> 12;

(insn 32 31 0 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                        (const_int 8 [0x8])) [0 limit+0 S4 A32])
                (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                            (const_int 8 [0x8])) [0 limit+0 S4 A32])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:50 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 33 32 34 11 "" [0 uses])

(note 34 33 0 NOTE_INSN_BASIC_BLOCK)

;; _14 = target_5 + 6;

(insn 35 34 36 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:51 -1
     (nil))

(insn 36 35 0 (parallel [
            (set (reg/f:SI 90 [ D.1286 ])
                (plus:SI (reg/f:SI 121)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:51 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 6 [0x6]))
        (nil)))

;; *_14 = 192;

(insn 37 36 0 (set (mem:QI (reg/f:SI 90 [ D.1286 ]) [0 *_14+0 S1 A8])
        (const_int -64 [0xffffffffffffffc0])) gdt.cpp:51 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 38 37 39 9 "" [0 uses])

(note 39 38 0 NOTE_INSN_BASIC_BLOCK)

;; _16 = (unsigned char) limit_2;

(insn 40 39 41 (set (reg:SI 122)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 limit+0 S4 A32])) gdt.cpp:53 -1
     (nil))

(insn 41 40 0 (set (reg:QI 91 [ D.1288 ])
        (subreg:QI (reg:SI 122) 0)) gdt.cpp:53 -1
     (nil))

;; *target_5 = _16;

(insn 42 41 43 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:53 -1
     (nil))

(insn 43 42 0 (set (mem:QI (reg/f:SI 123) [0 *target_5+0 S1 A8])
        (reg:QI 91 [ D.1288 ])) gdt.cpp:53 -1
     (nil))

;; _18 = target_5 + 1;

(insn 44 43 45 (set (reg/f:SI 124)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:54 -1
     (nil))

(insn 45 44 0 (parallel [
            (set (reg/f:SI 92 [ D.1286 ])
                (plus:SI (reg/f:SI 124)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:54 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _19 = limit_2 >> 8;

(insn 46 45 47 (set (reg:SI 125)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 limit+0 S4 A32])) gdt.cpp:54 -1
     (nil))

(insn 47 46 0 (parallel [
            (set (reg:SI 93 [ D.1287 ])
                (lshiftrt:SI (reg:SI 125)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:54 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 limit+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))

;; _20 = (unsigned char) _19;

(insn 48 47 0 (set (reg:QI 94 [ D.1288 ])
        (subreg:QI (reg:SI 93 [ D.1287 ]) 0)) gdt.cpp:54 -1
     (nil))

;; *_18 = _20;

(insn 49 48 0 (set (mem:QI (reg/f:SI 92 [ D.1286 ]) [0 *_18+0 S1 A8])
        (reg:QI 94 [ D.1288 ])) gdt.cpp:54 -1
     (nil))

;; _22 = target_5 + 6;

(insn 50 49 51 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:55 -1
     (nil))

(insn 51 50 0 (parallel [
            (set (reg/f:SI 95 [ D.1286 ])
                (plus:SI (reg/f:SI 126)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:55 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 6 [0x6]))
        (nil)))

;; _23 = target_5 + 6;

(insn 52 51 53 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:55 -1
     (nil))

(insn 53 52 0 (parallel [
            (set (reg/f:SI 96 [ D.1286 ])
                (plus:SI (reg/f:SI 127)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:55 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 6 [0x6]))
        (nil)))

;; _24 = *_23;

(insn 54 53 0 (set (reg:QI 97 [ D.1288 ])
        (mem:QI (reg/f:SI 96 [ D.1286 ]) [0 *_23+0 S1 A8])) gdt.cpp:55 -1
     (nil))

;; _25 = limit_2 >> 16;

(insn 55 54 56 (set (reg:SI 128)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 limit+0 S4 A32])) gdt.cpp:55 -1
     (nil))

(insn 56 55 0 (parallel [
            (set (reg:SI 98 [ D.1287 ])
                (lshiftrt:SI (reg:SI 128)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:55 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 limit+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

;; _26 = (unsigned char) _25;

(insn 57 56 0 (set (reg:QI 99 [ D.1288 ])
        (subreg:QI (reg:SI 98 [ D.1287 ]) 0)) gdt.cpp:55 -1
     (nil))

;; _27 = _26 & 15;

(insn 58 57 0 (parallel [
            (set (reg:QI 100 [ D.1288 ])
                (and:QI (reg:QI 99 [ D.1288 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:55 -1
     (nil))

;; _28 = _24 | _27;

(insn 59 58 0 (parallel [
            (set (reg:QI 101 [ D.1288 ])
                (ior:QI (reg:QI 97 [ D.1288 ])
                    (reg:QI 100 [ D.1288 ])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:55 -1
     (nil))

;; *_22 = _28;

(insn 60 59 0 (set (mem:QI (reg/f:SI 95 [ D.1286 ]) [0 *_22+0 S1 A8])
        (reg:QI 101 [ D.1288 ])) gdt.cpp:55 -1
     (nil))

;; _30 = target_5 + 2;

(insn 61 60 62 (set (reg/f:SI 129)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:57 -1
     (nil))

(insn 62 61 0 (parallel [
            (set (reg/f:SI 102 [ D.1286 ])
                (plus:SI (reg/f:SI 129)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:57 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))

;; _32 = (unsigned char) base_31(D);

(insn 63 62 64 (set (reg:SI 130)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 base+0 S4 A32])) gdt.cpp:57 -1
     (nil))

(insn 64 63 0 (set (reg:QI 103 [ D.1288 ])
        (subreg:QI (reg:SI 130) 0)) gdt.cpp:57 -1
     (nil))

;; *_30 = _32;

(insn 65 64 0 (set (mem:QI (reg/f:SI 102 [ D.1286 ]) [0 *_30+0 S1 A8])
        (reg:QI 103 [ D.1288 ])) gdt.cpp:57 -1
     (nil))

;; _34 = target_5 + 3;

(insn 66 65 67 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:58 -1
     (nil))

(insn 67 66 0 (parallel [
            (set (reg/f:SI 104 [ D.1286 ])
                (plus:SI (reg/f:SI 131)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:58 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 3 [0x3]))
        (nil)))

;; _35 = base_31(D) >> 8;

(insn 68 67 69 (set (reg:SI 132)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 base+0 S4 A32])) gdt.cpp:58 -1
     (nil))

(insn 69 68 0 (parallel [
            (set (reg:SI 105 [ D.1287 ])
                (lshiftrt:SI (reg:SI 132)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:58 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 base+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))

;; _36 = (unsigned char) _35;

(insn 70 69 0 (set (reg:QI 106 [ D.1288 ])
        (subreg:QI (reg:SI 105 [ D.1287 ]) 0)) gdt.cpp:58 -1
     (nil))

;; *_34 = _36;

(insn 71 70 0 (set (mem:QI (reg/f:SI 104 [ D.1286 ]) [0 *_34+0 S1 A8])
        (reg:QI 106 [ D.1288 ])) gdt.cpp:58 -1
     (nil))

;; _38 = target_5 + 4;

(insn 72 71 73 (set (reg/f:SI 133)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:59 -1
     (nil))

(insn 73 72 0 (parallel [
            (set (reg/f:SI 107 [ D.1286 ])
                (plus:SI (reg/f:SI 133)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:59 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))

;; _39 = base_31(D) >> 16;

(insn 74 73 75 (set (reg:SI 134)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 base+0 S4 A32])) gdt.cpp:59 -1
     (nil))

(insn 75 74 0 (parallel [
            (set (reg:SI 108 [ D.1287 ])
                (lshiftrt:SI (reg:SI 134)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:59 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 base+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))

;; _40 = (unsigned char) _39;

(insn 76 75 0 (set (reg:QI 109 [ D.1288 ])
        (subreg:QI (reg:SI 108 [ D.1287 ]) 0)) gdt.cpp:59 -1
     (nil))

;; *_38 = _40;

(insn 77 76 0 (set (mem:QI (reg/f:SI 107 [ D.1286 ]) [0 *_38+0 S1 A8])
        (reg:QI 109 [ D.1288 ])) gdt.cpp:59 -1
     (nil))

;; _42 = target_5 + 7;

(insn 78 77 79 (set (reg/f:SI 135)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:60 -1
     (nil))

(insn 79 78 0 (parallel [
            (set (reg/f:SI 110 [ D.1286 ])
                (plus:SI (reg/f:SI 135)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:60 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 7 [0x7]))
        (nil)))

;; _43 = base_31(D) >> 24;

(insn 80 79 81 (set (reg:SI 136)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 base+0 S4 A32])) gdt.cpp:60 -1
     (nil))

(insn 81 80 0 (parallel [
            (set (reg:SI 111 [ D.1287 ])
                (lshiftrt:SI (reg:SI 136)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:60 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 base+0 S4 A32])
            (const_int 24 [0x18]))
        (nil)))

;; _44 = _43 != 0;

(insn 82 81 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.1287 ])
            (const_int 0 [0]))) gdt.cpp:60 -1
     (nil))

(insn 83 82 0 (set (reg:QI 112 [ D.1289 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) gdt.cpp:60 -1
     (nil))

;; _45 = (unsigned char) _44;

(insn 84 83 0 (set (reg:QI 113 [ D.1288 ])
        (reg:QI 112 [ D.1289 ])) gdt.cpp:60 -1
     (nil))

;; *_42 = _45;

(insn 85 84 0 (set (mem:QI (reg/f:SI 110 [ D.1286 ]) [0 *_42+0 S1 A8])
        (reg:QI 113 [ D.1288 ])) gdt.cpp:60 -1
     (nil))

;; _47 = target_5 + 5;

(insn 86 85 87 (set (reg/f:SI 137)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:62 -1
     (nil))

(insn 87 86 0 (parallel [
            (set (reg/f:SI 114 [ D.1286 ])
                (plus:SI (reg/f:SI 137)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:62 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 5 [0x5]))
        (nil)))

;; *_47 = access_byte_48(D);

(insn 88 87 89 (set (reg:QI 138)
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 access_byte+0 S1 A32])) gdt.cpp:62 -1
     (nil))

(insn 89 88 0 (set (mem:QI (reg/f:SI 114 [ D.1286 ]) [0 *_47+0 S1 A8])
        (reg:QI 138)) gdt.cpp:62 -1
     (nil))


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (reg:SI 115)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 12 [0xc])) [0 access_byte+0 S4 A32])) gdt.cpp:38 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 access_byte+0 S1 A32])
        (subreg:QI (reg:SI 115) 0)) gdt.cpp:38 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) gdt.cpp:40 -1
     (nil))
(insn 8 7 9 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
        (reg/f:SI 116)) gdt.cpp:40 -1
     (nil))
(insn 9 8 10 2 (set (reg:CC 17 flags)
        (compare:CC (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 limit+0 S4 A32])
            (const_int 65536 [0x10000]))) gdt.cpp:41 -1
     (nil))
(jump_insn 10 9 11 2 (set (pc)
        (if_then_else (gtu (reg:CC 17 flags)
                (const_int 0 [0]))
            (label_ref 17)
            (pc))) gdt.cpp:41 -1
     (nil)
 -> 17)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 11 10 12 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 4 (set (reg/f:SI 117)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:43 -1
     (nil))
(insn 13 12 14 4 (parallel [
            (set (reg/f:SI 87 [ D.1286 ])
                (plus:SI (reg/f:SI 117)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:43 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 6 [0x6]))
        (nil)))
(insn 14 13 15 4 (set (mem:QI (reg/f:SI 87 [ D.1286 ]) [0 *_7+0 S1 A8])
        (const_int 64 [0x40])) gdt.cpp:43 -1
     (nil))
(jump_insn 15 14 16 4 (set (pc)
        (label_ref 38)) -1
     (nil)
 -> 38)
;;  succ:       9

(barrier 16 15 17)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 17 16 18 5 8 "" [1 uses])
(note 18 17 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:SI 118)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 limit+0 S4 A32])) gdt.cpp:47 -1
     (nil))
(insn 20 19 21 5 (parallel [
            (set (reg:SI 88 [ D.1287 ])
                (and:SI (reg:SI 118)
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:47 -1
     (expr_list:REG_EQUAL (and:SI (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 limit+0 S4 A32])
            (const_int 4095 [0xfff]))
        (nil)))
(insn 21 20 22 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ D.1287 ])
            (const_int 4095 [0xfff]))) gdt.cpp:47 -1
     (nil))
(jump_insn 22 21 23 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) gdt.cpp:47 -1
     (nil)
 -> 30)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 23 22 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 6 (set (reg:SI 119)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 limit+0 S4 A32])) gdt.cpp:48 -1
     (nil))
(insn 25 24 26 6 (parallel [
            (set (reg:SI 89 [ D.1287 ])
                (lshiftrt:SI (reg:SI 119)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:48 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 limit+0 S4 A32])
            (const_int 12 [0xc]))
        (nil)))
(insn 26 25 27 6 (parallel [
            (set (reg:SI 120)
                (plus:SI (reg:SI 89 [ D.1287 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:48 -1
     (nil))
(insn 27 26 28 6 (set (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 limit+0 S4 A32])
        (reg:SI 120)) gdt.cpp:48 -1
     (nil))
(jump_insn 28 27 29 6 (set (pc)
        (label_ref 33)) -1
     (nil)
 -> 33)
;;  succ:       8

(barrier 29 28 30)
;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 30 29 31 7 10 "" [1 uses])
(note 31 30 32 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 7 (parallel [
            (set (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                        (const_int 8 [0x8])) [0 limit+0 S4 A32])
                (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                            (const_int 8 [0x8])) [0 limit+0 S4 A32])
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:50 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU)
(code_label 33 32 34 8 11 "" [1 uses])
(note 34 33 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 8 (set (reg/f:SI 121)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:51 -1
     (nil))
(insn 36 35 37 8 (parallel [
            (set (reg/f:SI 90 [ D.1286 ])
                (plus:SI (reg/f:SI 121)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:51 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 6 [0x6]))
        (nil)))
(insn 37 36 38 8 (set (mem:QI (reg/f:SI 90 [ D.1286 ]) [0 *_14+0 S1 A8])
        (const_int -64 [0xffffffffffffffc0])) gdt.cpp:51 -1
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              8 (FALLTHRU)
(code_label 38 37 39 9 9 "" [1 uses])
(note 39 38 40 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 9 (set (reg:SI 122)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 limit+0 S4 A32])) gdt.cpp:53 -1
     (nil))
(insn 41 40 42 9 (set (reg:QI 91 [ D.1288 ])
        (subreg:QI (reg:SI 122) 0)) gdt.cpp:53 -1
     (nil))
(insn 42 41 43 9 (set (reg/f:SI 123)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:53 -1
     (nil))
(insn 43 42 44 9 (set (mem:QI (reg/f:SI 123) [0 *target_5+0 S1 A8])
        (reg:QI 91 [ D.1288 ])) gdt.cpp:53 -1
     (nil))
(insn 44 43 45 9 (set (reg/f:SI 124)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:54 -1
     (nil))
(insn 45 44 46 9 (parallel [
            (set (reg/f:SI 92 [ D.1286 ])
                (plus:SI (reg/f:SI 124)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:54 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 46 45 47 9 (set (reg:SI 125)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 limit+0 S4 A32])) gdt.cpp:54 -1
     (nil))
(insn 47 46 48 9 (parallel [
            (set (reg:SI 93 [ D.1287 ])
                (lshiftrt:SI (reg:SI 125)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:54 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 limit+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 48 47 49 9 (set (reg:QI 94 [ D.1288 ])
        (subreg:QI (reg:SI 93 [ D.1287 ]) 0)) gdt.cpp:54 -1
     (nil))
(insn 49 48 50 9 (set (mem:QI (reg/f:SI 92 [ D.1286 ]) [0 *_18+0 S1 A8])
        (reg:QI 94 [ D.1288 ])) gdt.cpp:54 -1
     (nil))
(insn 50 49 51 9 (set (reg/f:SI 126)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:55 -1
     (nil))
(insn 51 50 52 9 (parallel [
            (set (reg/f:SI 95 [ D.1286 ])
                (plus:SI (reg/f:SI 126)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:55 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 6 [0x6]))
        (nil)))
(insn 52 51 53 9 (set (reg/f:SI 127)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:55 -1
     (nil))
(insn 53 52 54 9 (parallel [
            (set (reg/f:SI 96 [ D.1286 ])
                (plus:SI (reg/f:SI 127)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:55 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 6 [0x6]))
        (nil)))
(insn 54 53 55 9 (set (reg:QI 97 [ D.1288 ])
        (mem:QI (reg/f:SI 96 [ D.1286 ]) [0 *_23+0 S1 A8])) gdt.cpp:55 -1
     (nil))
(insn 55 54 56 9 (set (reg:SI 128)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 8 [0x8])) [0 limit+0 S4 A32])) gdt.cpp:55 -1
     (nil))
(insn 56 55 57 9 (parallel [
            (set (reg:SI 98 [ D.1287 ])
                (lshiftrt:SI (reg:SI 128)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:55 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 8 [0x8])) [0 limit+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))
(insn 57 56 58 9 (set (reg:QI 99 [ D.1288 ])
        (subreg:QI (reg:SI 98 [ D.1287 ]) 0)) gdt.cpp:55 -1
     (nil))
(insn 58 57 59 9 (parallel [
            (set (reg:QI 100 [ D.1288 ])
                (and:QI (reg:QI 99 [ D.1288 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:55 -1
     (nil))
(insn 59 58 60 9 (parallel [
            (set (reg:QI 101 [ D.1288 ])
                (ior:QI (reg:QI 97 [ D.1288 ])
                    (reg:QI 100 [ D.1288 ])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:55 -1
     (nil))
(insn 60 59 61 9 (set (mem:QI (reg/f:SI 95 [ D.1286 ]) [0 *_22+0 S1 A8])
        (reg:QI 101 [ D.1288 ])) gdt.cpp:55 -1
     (nil))
(insn 61 60 62 9 (set (reg/f:SI 129)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:57 -1
     (nil))
(insn 62 61 63 9 (parallel [
            (set (reg/f:SI 102 [ D.1286 ])
                (plus:SI (reg/f:SI 129)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:57 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 63 62 64 9 (set (reg:SI 130)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 base+0 S4 A32])) gdt.cpp:57 -1
     (nil))
(insn 64 63 65 9 (set (reg:QI 103 [ D.1288 ])
        (subreg:QI (reg:SI 130) 0)) gdt.cpp:57 -1
     (nil))
(insn 65 64 66 9 (set (mem:QI (reg/f:SI 102 [ D.1286 ]) [0 *_30+0 S1 A8])
        (reg:QI 103 [ D.1288 ])) gdt.cpp:57 -1
     (nil))
(insn 66 65 67 9 (set (reg/f:SI 131)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:58 -1
     (nil))
(insn 67 66 68 9 (parallel [
            (set (reg/f:SI 104 [ D.1286 ])
                (plus:SI (reg/f:SI 131)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:58 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 3 [0x3]))
        (nil)))
(insn 68 67 69 9 (set (reg:SI 132)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 base+0 S4 A32])) gdt.cpp:58 -1
     (nil))
(insn 69 68 70 9 (parallel [
            (set (reg:SI 105 [ D.1287 ])
                (lshiftrt:SI (reg:SI 132)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:58 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 base+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 70 69 71 9 (set (reg:QI 106 [ D.1288 ])
        (subreg:QI (reg:SI 105 [ D.1287 ]) 0)) gdt.cpp:58 -1
     (nil))
(insn 71 70 72 9 (set (mem:QI (reg/f:SI 104 [ D.1286 ]) [0 *_34+0 S1 A8])
        (reg:QI 106 [ D.1288 ])) gdt.cpp:58 -1
     (nil))
(insn 72 71 73 9 (set (reg/f:SI 133)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:59 -1
     (nil))
(insn 73 72 74 9 (parallel [
            (set (reg/f:SI 107 [ D.1286 ])
                (plus:SI (reg/f:SI 133)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:59 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 74 73 75 9 (set (reg:SI 134)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 base+0 S4 A32])) gdt.cpp:59 -1
     (nil))
(insn 75 74 76 9 (parallel [
            (set (reg:SI 108 [ D.1287 ])
                (lshiftrt:SI (reg:SI 134)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:59 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 base+0 S4 A32])
            (const_int 16 [0x10]))
        (nil)))
(insn 76 75 77 9 (set (reg:QI 109 [ D.1288 ])
        (subreg:QI (reg:SI 108 [ D.1287 ]) 0)) gdt.cpp:59 -1
     (nil))
(insn 77 76 78 9 (set (mem:QI (reg/f:SI 107 [ D.1286 ]) [0 *_38+0 S1 A8])
        (reg:QI 109 [ D.1288 ])) gdt.cpp:59 -1
     (nil))
(insn 78 77 79 9 (set (reg/f:SI 135)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:60 -1
     (nil))
(insn 79 78 80 9 (parallel [
            (set (reg/f:SI 110 [ D.1286 ])
                (plus:SI (reg/f:SI 135)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:60 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 7 [0x7]))
        (nil)))
(insn 80 79 81 9 (set (reg:SI 136)
        (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                (const_int 4 [0x4])) [0 base+0 S4 A32])) gdt.cpp:60 -1
     (nil))
(insn 81 80 82 9 (parallel [
            (set (reg:SI 111 [ D.1287 ])
                (lshiftrt:SI (reg:SI 136)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:60 -1
     (expr_list:REG_EQUAL (lshiftrt:SI (mem/c:SI (plus:SI (reg/f:SI 81 virtual-incoming-args)
                    (const_int 4 [0x4])) [0 base+0 S4 A32])
            (const_int 24 [0x18]))
        (nil)))
(insn 82 81 83 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 111 [ D.1287 ])
            (const_int 0 [0]))) gdt.cpp:60 -1
     (nil))
(insn 83 82 84 9 (set (reg:QI 112 [ D.1289 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) gdt.cpp:60 -1
     (nil))
(insn 84 83 85 9 (set (reg:QI 113 [ D.1288 ])
        (reg:QI 112 [ D.1289 ])) gdt.cpp:60 -1
     (nil))
(insn 85 84 86 9 (set (mem:QI (reg/f:SI 110 [ D.1286 ]) [0 *_42+0 S1 A8])
        (reg:QI 113 [ D.1288 ])) gdt.cpp:60 -1
     (nil))
(insn 86 85 87 9 (set (reg/f:SI 137)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:62 -1
     (nil))
(insn 87 86 88 9 (parallel [
            (set (reg/f:SI 114 [ D.1286 ])
                (plus:SI (reg/f:SI 137)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:62 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 5 [0x5]))
        (nil)))
(insn 88 87 89 9 (set (reg:QI 138)
        (mem/c:QI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [0 access_byte+0 S1 A32])) gdt.cpp:62 -1
     (nil))
(insn 89 88 92 9 (set (mem:QI (reg/f:SI 114 [ D.1286 ]) [0 *_47+0 S1 A8])
        (reg:QI 138)) gdt.cpp:62 -1
     (nil))
(insn 92 89 0 9 (const_int 0 [0]) gdt.cpp:63 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function uint32_t GlobalDescriptorTable::SegmentDescriptor::GetBase() (_ZN21GlobalDescriptorTable17SegmentDescriptor7GetBaseEv, funcdef_no=11, decl_uid=1078, cgraph_uid=11, symbol_order=11)

uint32_t GlobalDescriptorTable::SegmentDescriptor::GetBase() (struct SegmentDescriptor * const this)
{
  uint32_t base;
  uint8_t * target;
  uint32_t D.1252;
  unsigned int D.1251;
  unsigned char D.1250;
  uint8_t * D.1249;
  unsigned int D.1248;
  unsigned int D.1247;
  unsigned char D.1246;
  uint8_t * D.1245;
  unsigned int D.1244;
  unsigned int D.1243;
  unsigned char D.1242;
  uint8_t * D.1241;
  unsigned int D.1240;
  unsigned char D.1239;
  uint8_t * D.1238;
  uint8_t * _3;
  unsigned char _5;
  unsigned int _7;
  uint8_t * _8;
  unsigned char _9;
  unsigned int _10;
  unsigned int _12;
  uint8_t * _13;
  unsigned char _14;
  unsigned int _15;
  unsigned int _17;
  uint8_t * _18;
  unsigned char _19;
  unsigned int _20;
  uint32_t _22;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  target_2 = this_1(D);
  _3 = target_2 + 7;
  _5 = *_3;
  base_6 = (uint32_t) _5;
  _7 = base_6 << 8;
  _8 = target_2 + 4;
  _9 = *_8;
  _10 = (unsigned int) _9;
  base_11 = _7 + _10;
  _12 = base_11 << 8;
  _13 = target_2 + 3;
  _14 = *_13;
  _15 = (unsigned int) _14;
  base_16 = _12 + _15;
  _17 = base_16 << 8;
  _18 = target_2 + 2;
  _19 = *_18;
  _20 = (unsigned int) _19;
  base_21 = _17 + _20;
  _22 = base_21;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _22;
;;    succ:       EXIT

}



Partition map 

Partition 1 (this_1(D) - 1 )
Partition 2 (target_2 - 2 )
Partition 3 (_3 - 3 )
Partition 5 (_5 - 5 )
Partition 6 (base_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (base_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (base_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (base_21 - 21 )
Partition 22 (_22 - 22 )


Partition map 

Partition 0 (this_1(D) - 1 )
Partition 1 (base_6 - 6 )
Partition 2 (base_11 - 11 )
Partition 3 (base_16 - 16 )
Partition 4 (base_21 - 21 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) base_6 <-> base_11
(2147483646) base_6 <-> base_16
(2147483646) base_6 <-> base_21

Partition map 

Partition 0 (this_1(D) - 1 )
Partition 1 (base_6 - 6 )
Partition 2 (base_11 - 11 )
Partition 3 (base_16 - 16 )
Partition 4 (base_21 - 21 )

Coalesce list: (6)base_6 & (11)base_11 [map: 1, 2] : Success -> 1
Coalesce list: (6)base_6 & (16)base_16 [map: 1, 3] : Success -> 1
Coalesce list: (6)base_6 & (21)base_21 [map: 1, 4] : Success -> 1
After Coalescing:

Partition map 

Partition 0 (this_1(D) - 1 )
Partition 1 (target_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_5 - 5 )
Partition 4 (base_6 - 6 11 16 21 )
Partition 5 (_7 - 7 )
Partition 6 (_8 - 8 )
Partition 7 (_9 - 9 )
Partition 8 (_10 - 10 )
Partition 9 (_12 - 12 )
Partition 10 (_13 - 13 )
Partition 11 (_14 - 14 )
Partition 12 (_15 - 15 )
Partition 13 (_17 - 17 )
Partition 14 (_18 - 18 )
Partition 15 (_19 - 19 )
Partition 16 (_20 - 20 )
Partition 17 (_22 - 22 )

uint32_t GlobalDescriptorTable::SegmentDescriptor::GetBase() (struct SegmentDescriptor * const this)
{
  uint32_t base;
  uint8_t * target;
  uint32_t D.1252;
  unsigned int D.1251;
  unsigned char D.1250;
  uint8_t * D.1249;
  unsigned int D.1248;
  unsigned int D.1247;
  unsigned char D.1246;
  uint8_t * D.1245;
  unsigned int D.1244;
  unsigned int D.1243;
  unsigned char D.1242;
  uint8_t * D.1241;
  unsigned int D.1240;
  unsigned char D.1239;
  uint8_t * D.1238;
  uint8_t * _3;
  unsigned char _5;
  unsigned int _7;
  uint8_t * _8;
  unsigned char _9;
  unsigned int _10;
  unsigned int _12;
  uint8_t * _13;
  unsigned char _14;
  unsigned int _15;
  unsigned int _17;
  uint8_t * _18;
  unsigned char _19;
  unsigned int _20;
  uint32_t _22;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  target_2 = this_1(D);
  _3 = target_2 + 7;
  _5 = *_3;
  base_6 = (uint32_t) _5;
  _7 = base_6 << 8;
  _8 = target_2 + 4;
  _9 = *_8;
  _10 = (unsigned int) _9;
  base_11 = _7 + _10;
  _12 = base_11 << 8;
  _13 = target_2 + 3;
  _14 = *_13;
  _15 = (unsigned int) _14;
  base_16 = _12 + _15;
  _17 = base_16 << 8;
  _18 = target_2 + 2;
  _19 = *_18;
  _20 = (unsigned int) _19;
  base_21 = _17 + _20;
  _22 = base_21;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _22;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; target_2 = this_1(D);

(insn 5 4 6 (set (reg/f:SI 103)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) gdt.cpp:67 -1
     (nil))

(insn 6 5 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
        (reg/f:SI 103)) gdt.cpp:67 -1
     (nil))

;; _3 = target_2 + 7;

(insn 7 6 8 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:69 -1
     (nil))

(insn 8 7 0 (parallel [
            (set (reg/f:SI 87 [ D.1290 ])
                (plus:SI (reg/f:SI 104)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:69 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 7 [0x7]))
        (nil)))

;; _5 = *_3;

(insn 9 8 0 (set (reg:QI 88 [ D.1291 ])
        (mem:QI (reg/f:SI 87 [ D.1290 ]) [0 *_3+0 S1 A8])) gdt.cpp:69 -1
     (nil))

;; base_6 = (uint32_t) _5;

(insn 10 9 11 (set (reg:SI 105)
        (zero_extend:SI (reg:QI 88 [ D.1291 ]))) gdt.cpp:69 -1
     (nil))

(insn 11 10 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])
        (reg:SI 105)) gdt.cpp:69 -1
     (nil))

;; _7 = base_6 << 8;

(insn 12 11 13 (set (reg:SI 106)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])) gdt.cpp:70 -1
     (nil))

(insn 13 12 0 (parallel [
            (set (reg:SI 89 [ D.1292 ])
                (ashift:SI (reg:SI 106)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:70 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))

;; _8 = target_2 + 4;

(insn 14 13 15 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:70 -1
     (nil))

(insn 15 14 0 (parallel [
            (set (reg/f:SI 90 [ D.1290 ])
                (plus:SI (reg/f:SI 107)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:70 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))

;; _9 = *_8;

(insn 16 15 0 (set (reg:QI 91 [ D.1291 ])
        (mem:QI (reg/f:SI 90 [ D.1290 ]) [0 *_8+0 S1 A8])) gdt.cpp:70 -1
     (nil))

;; _10 = (unsigned int) _9;

(insn 17 16 0 (set (reg:SI 92 [ D.1292 ])
        (zero_extend:SI (reg:QI 91 [ D.1291 ]))) gdt.cpp:70 -1
     (nil))

;; base_11 = _7 + _10;

(insn 18 17 19 (parallel [
            (set (reg:SI 108)
                (plus:SI (reg:SI 89 [ D.1292 ])
                    (reg:SI 92 [ D.1292 ])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:70 -1
     (nil))

(insn 19 18 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])
        (reg:SI 108)) gdt.cpp:70 -1
     (nil))

;; _12 = base_11 << 8;

(insn 20 19 21 (set (reg:SI 109)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])) gdt.cpp:71 -1
     (nil))

(insn 21 20 0 (parallel [
            (set (reg:SI 93 [ D.1292 ])
                (ashift:SI (reg:SI 109)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:71 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))

;; _13 = target_2 + 3;

(insn 22 21 23 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:71 -1
     (nil))

(insn 23 22 0 (parallel [
            (set (reg/f:SI 94 [ D.1290 ])
                (plus:SI (reg/f:SI 110)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:71 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 3 [0x3]))
        (nil)))

;; _14 = *_13;

(insn 24 23 0 (set (reg:QI 95 [ D.1291 ])
        (mem:QI (reg/f:SI 94 [ D.1290 ]) [0 *_13+0 S1 A8])) gdt.cpp:71 -1
     (nil))

;; _15 = (unsigned int) _14;

(insn 25 24 0 (set (reg:SI 96 [ D.1292 ])
        (zero_extend:SI (reg:QI 95 [ D.1291 ]))) gdt.cpp:71 -1
     (nil))

;; base_16 = _12 + _15;

(insn 26 25 27 (parallel [
            (set (reg:SI 111)
                (plus:SI (reg:SI 93 [ D.1292 ])
                    (reg:SI 96 [ D.1292 ])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:71 -1
     (nil))

(insn 27 26 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])
        (reg:SI 111)) gdt.cpp:71 -1
     (nil))

;; _17 = base_16 << 8;

(insn 28 27 29 (set (reg:SI 112)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])) gdt.cpp:72 -1
     (nil))

(insn 29 28 0 (parallel [
            (set (reg:SI 97 [ D.1292 ])
                (ashift:SI (reg:SI 112)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:72 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))

;; _18 = target_2 + 2;

(insn 30 29 31 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:72 -1
     (nil))

(insn 31 30 0 (parallel [
            (set (reg/f:SI 98 [ D.1290 ])
                (plus:SI (reg/f:SI 113)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:72 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))

;; _19 = *_18;

(insn 32 31 0 (set (reg:QI 99 [ D.1291 ])
        (mem:QI (reg/f:SI 98 [ D.1290 ]) [0 *_18+0 S1 A8])) gdt.cpp:72 -1
     (nil))

;; _20 = (unsigned int) _19;

(insn 33 32 0 (set (reg:SI 100 [ D.1292 ])
        (zero_extend:SI (reg:QI 99 [ D.1291 ]))) gdt.cpp:72 -1
     (nil))

;; base_21 = _17 + _20;

(insn 34 33 35 (parallel [
            (set (reg:SI 114)
                (plus:SI (reg:SI 97 [ D.1292 ])
                    (reg:SI 100 [ D.1292 ])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:72 -1
     (nil))

(insn 35 34 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])
        (reg:SI 114)) gdt.cpp:72 -1
     (nil))

;; _22 = base_21;

(insn 36 35 0 (set (reg:SI 101 [ D.1293 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])) gdt.cpp:73 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 37 36 38 13 "" [0 uses])

(note 38 37 0 NOTE_INSN_BASIC_BLOCK)

;; return _22;

(insn 39 38 40 (set (reg:SI 102 [ <retval> ])
        (reg:SI 101 [ D.1293 ])) gdt.cpp:73 -1
     (nil))

(jump_insn 40 39 41 (set (pc)
        (label_ref 0)) gdt.cpp:73 -1
     (nil))

(barrier 41 40 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 40.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 103)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) gdt.cpp:67 -1
     (nil))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
        (reg/f:SI 103)) gdt.cpp:67 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:69 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 87 [ D.1290 ])
                (plus:SI (reg/f:SI 104)
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:69 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 7 [0x7]))
        (nil)))
(insn 9 8 10 2 (set (reg:QI 88 [ D.1291 ])
        (mem:QI (reg/f:SI 87 [ D.1290 ]) [0 *_3+0 S1 A8])) gdt.cpp:69 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 105)
        (zero_extend:SI (reg:QI 88 [ D.1291 ]))) gdt.cpp:69 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])
        (reg:SI 105)) gdt.cpp:69 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 106)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])) gdt.cpp:70 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:SI 89 [ D.1292 ])
                (ashift:SI (reg:SI 106)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:70 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 14 13 15 2 (set (reg/f:SI 107)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:70 -1
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg/f:SI 90 [ D.1290 ])
                (plus:SI (reg/f:SI 107)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:70 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 4 [0x4]))
        (nil)))
(insn 16 15 17 2 (set (reg:QI 91 [ D.1291 ])
        (mem:QI (reg/f:SI 90 [ D.1290 ]) [0 *_8+0 S1 A8])) gdt.cpp:70 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 92 [ D.1292 ])
        (zero_extend:SI (reg:QI 91 [ D.1291 ]))) gdt.cpp:70 -1
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:SI 108)
                (plus:SI (reg:SI 89 [ D.1292 ])
                    (reg:SI 92 [ D.1292 ])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:70 -1
     (nil))
(insn 19 18 20 2 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])
        (reg:SI 108)) gdt.cpp:70 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 109)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])) gdt.cpp:71 -1
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg:SI 93 [ D.1292 ])
                (ashift:SI (reg:SI 109)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:71 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 22 21 23 2 (set (reg/f:SI 110)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:71 -1
     (nil))
(insn 23 22 24 2 (parallel [
            (set (reg/f:SI 94 [ D.1290 ])
                (plus:SI (reg/f:SI 110)
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:71 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 3 [0x3]))
        (nil)))
(insn 24 23 25 2 (set (reg:QI 95 [ D.1291 ])
        (mem:QI (reg/f:SI 94 [ D.1290 ]) [0 *_13+0 S1 A8])) gdt.cpp:71 -1
     (nil))
(insn 25 24 26 2 (set (reg:SI 96 [ D.1292 ])
        (zero_extend:SI (reg:QI 95 [ D.1291 ]))) gdt.cpp:71 -1
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg:SI 111)
                (plus:SI (reg:SI 93 [ D.1292 ])
                    (reg:SI 96 [ D.1292 ])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:71 -1
     (nil))
(insn 27 26 28 2 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])
        (reg:SI 111)) gdt.cpp:71 -1
     (nil))
(insn 28 27 29 2 (set (reg:SI 112)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])) gdt.cpp:72 -1
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg:SI 97 [ D.1292 ])
                (ashift:SI (reg:SI 112)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:72 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 30 29 31 2 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])) gdt.cpp:72 -1
     (nil))
(insn 31 30 32 2 (parallel [
            (set (reg/f:SI 98 [ D.1290 ])
                (plus:SI (reg/f:SI 113)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:72 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 target+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 32 31 33 2 (set (reg:QI 99 [ D.1291 ])
        (mem:QI (reg/f:SI 98 [ D.1290 ]) [0 *_18+0 S1 A8])) gdt.cpp:72 -1
     (nil))
(insn 33 32 34 2 (set (reg:SI 100 [ D.1292 ])
        (zero_extend:SI (reg:QI 99 [ D.1291 ]))) gdt.cpp:72 -1
     (nil))
(insn 34 33 35 2 (parallel [
            (set (reg:SI 114)
                (plus:SI (reg:SI 97 [ D.1292 ])
                    (reg:SI 100 [ D.1292 ])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:72 -1
     (nil))
(insn 35 34 36 2 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])
        (reg:SI 114)) gdt.cpp:72 -1
     (nil))
(insn 36 35 39 2 (set (reg:SI 101 [ D.1293 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 base+0 S4 A32])) gdt.cpp:73 -1
     (nil))
(insn 39 36 43 2 (set (reg:SI 102 [ <retval> ])
        (reg:SI 101 [ D.1293 ])) gdt.cpp:73 -1
     (nil))
(insn 43 39 44 2 (set (reg/i:SI 0 ax)
        (reg:SI 102 [ <retval> ])) gdt.cpp:74 -1
     (nil))
(insn 44 43 0 2 (use (reg/i:SI 0 ax)) gdt.cpp:74 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function uint32_t GlobalDescriptorTable::SegmentDescriptor::GetLimit() (_ZN21GlobalDescriptorTable17SegmentDescriptor8GetLimitEv, funcdef_no=12, decl_uid=1080, cgraph_uid=12, symbol_order=12)

uint32_t GlobalDescriptorTable::SegmentDescriptor::GetLimit() (struct SegmentDescriptor * const this)
{
  uint32_t limit;
  uint8_t * target;
  uint32_t D.1272;
  unsigned int D.1270;
  int D.1267;
  int D.1266;
  unsigned char D.1265;
  uint8_t * D.1264;
  unsigned int D.1263;
  unsigned char D.1262;
  unsigned int D.1261;
  unsigned int D.1260;
  unsigned char D.1259;
  uint8_t * D.1258;
  unsigned int D.1257;
  unsigned int D.1256;
  unsigned char D.1255;
  uint8_t * D.1254;
  uint8_t * _4;
  unsigned char _6;
  unsigned int _7;
  unsigned int _9;
  uint8_t * _10;
  unsigned char _11;
  unsigned int _12;
  unsigned int _14;
  unsigned char _15;
  unsigned int _16;
  uint8_t * _18;
  unsigned char _19;
  int _20;
  int _21;
  unsigned int _22;
  uint32_t _24;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  target_3 = this_2(D);
  _4 = target_3 + 6;
  _6 = *_4;
  _7 = (unsigned int) _6;
  limit_8 = _7 & 15;
  _9 = limit_8 << 8;
  _10 = target_3 + 1;
  _11 = *_10;
  _12 = (unsigned int) _11;
  limit_13 = _9 + _12;
  _14 = limit_13 << 8;
  _15 = *target_3;
  _16 = (unsigned int) _15;
  limit_17 = _14 + _16;
  _18 = target_3 + 6;
  _19 = *_18;
  _20 = (int) _19;
  _21 = _20 & 192;
  if (_21 == 192)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _22 = limit_17 << 12;
  limit_23 = _22 | 4095;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # limit_1 = PHI <limit_17(2), limit_23(3)>
  _24 = limit_1;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L3>:
  return _24;
;;    succ:       EXIT

}



Partition map 

Partition 1 (limit_1 - 1 )
Partition 2 (this_2(D) - 2 )
Partition 3 (target_3 - 3 )
Partition 4 (_4 - 4 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (limit_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (limit_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (limit_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (limit_23 - 23 )
Partition 24 (_24 - 24 )


Partition map 

Partition 0 (limit_1 - 1 )
Partition 1 (this_2(D) - 2 )
Partition 2 (limit_8 - 8 )
Partition 3 (limit_13 - 13 )
Partition 4 (limit_17 - 17 )
Partition 5 (limit_23 - 23 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646) limit_1 <-> limit_8
(2147483646) limit_1 <-> limit_13
(2147483646) limit_1 <-> limit_17
(2147483646) limit_1 <-> limit_23

Partition map 

Partition 0 (limit_1 - 1 )
Partition 1 (this_2(D) - 2 )
Partition 2 (limit_8 - 8 )
Partition 3 (limit_13 - 13 )
Partition 4 (limit_17 - 17 )
Partition 5 (limit_23 - 23 )

Coalesce list: (1)limit_1 & (8)limit_8 [map: 0, 2] : Success -> 0
Coalesce list: (1)limit_1 & (13)limit_13 [map: 0, 3] : Success -> 0
Coalesce list: (1)limit_1 & (17)limit_17 [map: 0, 4] : Success -> 0
Coalesce list: (1)limit_1 & (23)limit_23 [map: 0, 5] : Success -> 0
Coalesce list: (1)limit_1 & (23)limit_1: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (limit_1 - 1 8 13 17 23 )
Partition 1 (this_2(D) - 2 )
Partition 2 (target_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_6 - 6 )
Partition 5 (_7 - 7 )
Partition 6 (_9 - 9 )
Partition 7 (_10 - 10 )
Partition 8 (_11 - 11 )
Partition 9 (_12 - 12 )
Partition 10 (_14 - 14 )
Partition 11 (_15 - 15 )
Partition 12 (_16 - 16 )
Partition 13 (_18 - 18 )
Partition 14 (_19 - 19 )
Partition 15 (_20 - 20 )
Partition 16 (_21 - 21 )
Partition 17 (_22 - 22 )
Partition 18 (_24 - 24 )

uint32_t GlobalDescriptorTable::SegmentDescriptor::GetLimit() (struct SegmentDescriptor * const this)
{
  uint32_t limit;
  uint8_t * target;
  uint32_t D.1272;
  unsigned int D.1270;
  int D.1267;
  int D.1266;
  unsigned char D.1265;
  uint8_t * D.1264;
  unsigned int D.1263;
  unsigned char D.1262;
  unsigned int D.1261;
  unsigned int D.1260;
  unsigned char D.1259;
  uint8_t * D.1258;
  unsigned int D.1257;
  unsigned int D.1256;
  unsigned char D.1255;
  uint8_t * D.1254;
  uint8_t * _4;
  unsigned char _6;
  unsigned int _7;
  unsigned int _9;
  uint8_t * _10;
  unsigned char _11;
  unsigned int _12;
  unsigned int _14;
  unsigned char _15;
  unsigned int _16;
  uint8_t * _18;
  unsigned char _19;
  int _20;
  int _21;
  unsigned int _22;
  uint32_t _24;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  target_3 = this_2(D);
  _4 = target_3 + 6;
  _6 = *_4;
  _7 = (unsigned int) _6;
  limit_8 = _7 & 15;
  _9 = limit_8 << 8;
  _10 = target_3 + 1;
  _11 = *_10;
  _12 = (unsigned int) _11;
  limit_13 = _9 + _12;
  _14 = limit_13 << 8;
  _15 = *target_3;
  _16 = (unsigned int) _15;
  limit_17 = _14 + _16;
  _18 = target_3 + 6;
  _19 = *_18;
  _20 = (int) _19;
  _21 = _20 & 192;
  if (_21 == 192)
    goto <bb 3>;
  else
    goto <bb 4>;
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _22 = limit_17 << 12;
  limit_23 = _22 | 4095;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # limit_1 = PHI <limit_17(2), limit_23(3)>
  _24 = limit_1;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L3>:
  return _24;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; target_3 = this_2(D);

(insn 5 4 6 (set (reg/f:SI 104)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) gdt.cpp:78 -1
     (nil))

(insn 6 5 0 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 target+0 S4 A32])
        (reg/f:SI 104)) gdt.cpp:78 -1
     (nil))

;; _4 = target_3 + 6;

(insn 7 6 8 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 target+0 S4 A32])) gdt.cpp:79 -1
     (nil))

(insn 8 7 0 (parallel [
            (set (reg/f:SI 87 [ D.1294 ])
                (plus:SI (reg/f:SI 105)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:79 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 target+0 S4 A32])
            (const_int 6 [0x6]))
        (nil)))

;; _6 = *_4;

(insn 9 8 0 (set (reg:QI 88 [ D.1295 ])
        (mem:QI (reg/f:SI 87 [ D.1294 ]) [0 *_4+0 S1 A8])) gdt.cpp:79 -1
     (nil))

;; _7 = (unsigned int) _6;

(insn 10 9 0 (set (reg:SI 89 [ D.1296 ])
        (zero_extend:SI (reg:QI 88 [ D.1295 ]))) gdt.cpp:79 -1
     (nil))

;; limit_8 = _7 & 15;

(insn 11 10 12 (parallel [
            (set (reg:SI 106)
                (and:SI (reg:SI 89 [ D.1296 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:79 -1
     (nil))

(insn 12 11 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])
        (reg:SI 106)) gdt.cpp:79 -1
     (nil))

;; _9 = limit_8 << 8;

(insn 13 12 14 (set (reg:SI 107)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])) gdt.cpp:80 -1
     (nil))

(insn 14 13 0 (parallel [
            (set (reg:SI 90 [ D.1296 ])
                (ashift:SI (reg:SI 107)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:80 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))

;; _10 = target_3 + 1;

(insn 15 14 16 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 target+0 S4 A32])) gdt.cpp:80 -1
     (nil))

(insn 16 15 0 (parallel [
            (set (reg/f:SI 91 [ D.1294 ])
                (plus:SI (reg/f:SI 108)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:80 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 target+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _11 = *_10;

(insn 17 16 0 (set (reg:QI 92 [ D.1295 ])
        (mem:QI (reg/f:SI 91 [ D.1294 ]) [0 *_10+0 S1 A8])) gdt.cpp:80 -1
     (nil))

;; _12 = (unsigned int) _11;

(insn 18 17 0 (set (reg:SI 93 [ D.1296 ])
        (zero_extend:SI (reg:QI 92 [ D.1295 ]))) gdt.cpp:80 -1
     (nil))

;; limit_13 = _9 + _12;

(insn 19 18 20 (parallel [
            (set (reg:SI 109)
                (plus:SI (reg:SI 90 [ D.1296 ])
                    (reg:SI 93 [ D.1296 ])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:80 -1
     (nil))

(insn 20 19 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])
        (reg:SI 109)) gdt.cpp:80 -1
     (nil))

;; _14 = limit_13 << 8;

(insn 21 20 22 (set (reg:SI 110)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])) gdt.cpp:81 -1
     (nil))

(insn 22 21 0 (parallel [
            (set (reg:SI 94 [ D.1296 ])
                (ashift:SI (reg:SI 110)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:81 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))

;; _15 = *target_3;

(insn 23 22 24 (set (reg/f:SI 111)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 target+0 S4 A32])) gdt.cpp:81 -1
     (nil))

(insn 24 23 0 (set (reg:QI 95 [ D.1295 ])
        (mem:QI (reg/f:SI 111) [0 *target_3+0 S1 A8])) gdt.cpp:81 -1
     (nil))

;; _16 = (unsigned int) _15;

(insn 25 24 0 (set (reg:SI 96 [ D.1296 ])
        (zero_extend:SI (reg:QI 95 [ D.1295 ]))) gdt.cpp:81 -1
     (nil))

;; limit_17 = _14 + _16;

(insn 26 25 27 (parallel [
            (set (reg:SI 112)
                (plus:SI (reg:SI 94 [ D.1296 ])
                    (reg:SI 96 [ D.1296 ])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:81 -1
     (nil))

(insn 27 26 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])
        (reg:SI 112)) gdt.cpp:81 -1
     (nil))

;; _18 = target_3 + 6;

(insn 28 27 29 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 target+0 S4 A32])) gdt.cpp:82 -1
     (nil))

(insn 29 28 0 (parallel [
            (set (reg/f:SI 97 [ D.1294 ])
                (plus:SI (reg/f:SI 113)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:82 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 target+0 S4 A32])
            (const_int 6 [0x6]))
        (nil)))

;; _19 = *_18;

(insn 30 29 0 (set (reg:QI 98 [ D.1295 ])
        (mem:QI (reg/f:SI 97 [ D.1294 ]) [0 *_18+0 S1 A8])) gdt.cpp:82 -1
     (nil))

;; _20 = (int) _19;

(insn 31 30 0 (set (reg:SI 99 [ D.1297 ])
        (zero_extend:SI (reg:QI 98 [ D.1295 ]))) gdt.cpp:82 -1
     (nil))

;; _21 = _20 & 192;

(insn 32 31 0 (parallel [
            (set (reg:SI 100 [ D.1297 ])
                (and:SI (reg:SI 99 [ D.1297 ])
                    (const_int 192 [0xc0])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:82 -1
     (nil))

;; if (_21 == 192)

(insn 33 32 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.1297 ])
            (const_int 192 [0xc0]))) gdt.cpp:82 -1
     (nil))

(jump_insn 34 33 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) gdt.cpp:82 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _22 = limit_17 << 12;

(insn 36 35 37 (set (reg:SI 114)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])) gdt.cpp:83 -1
     (nil))

(insn 37 36 0 (parallel [
            (set (reg:SI 101 [ D.1296 ])
                (ashift:SI (reg:SI 114)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:83 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])
            (const_int 12 [0xc]))
        (nil)))

;; limit_23 = _22 | 4095;

(insn 38 37 39 (parallel [
            (set (reg:SI 115)
                (ior:SI (reg:SI 101 [ D.1296 ])
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:83 -1
     (nil))

(insn 39 38 0 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])
        (reg:SI 115)) gdt.cpp:83 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 40 39 41 15 "" [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; _24 = limit_1;

(insn 42 41 0 (set (reg:SI 102 [ D.1298 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])) gdt.cpp:84 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; <L3>:

(code_label 43 42 44 16 "" [0 uses])

(note 44 43 0 NOTE_INSN_BASIC_BLOCK)

;; return _24;

(insn 45 44 46 (set (reg:SI 103 [ <retval> ])
        (reg:SI 102 [ D.1298 ])) gdt.cpp:84 -1
     (nil))

(jump_insn 46 45 47 (set (pc)
        (label_ref 0)) gdt.cpp:84 -1
     (nil))

(barrier 47 46 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 46.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 104)
        (mem/f/c:SI (reg/f:SI 81 virtual-incoming-args) [0 this+0 S4 A32])) gdt.cpp:78 -1
     (nil))
(insn 6 5 7 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 target+0 S4 A32])
        (reg/f:SI 104)) gdt.cpp:78 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 target+0 S4 A32])) gdt.cpp:79 -1
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg/f:SI 87 [ D.1294 ])
                (plus:SI (reg/f:SI 105)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:79 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 target+0 S4 A32])
            (const_int 6 [0x6]))
        (nil)))
(insn 9 8 10 2 (set (reg:QI 88 [ D.1295 ])
        (mem:QI (reg/f:SI 87 [ D.1294 ]) [0 *_4+0 S1 A8])) gdt.cpp:79 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 89 [ D.1296 ])
        (zero_extend:SI (reg:QI 88 [ D.1295 ]))) gdt.cpp:79 -1
     (nil))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 106)
                (and:SI (reg:SI 89 [ D.1296 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:79 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])
        (reg:SI 106)) gdt.cpp:79 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 107)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])) gdt.cpp:80 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg:SI 90 [ D.1296 ])
                (ashift:SI (reg:SI 107)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:80 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 15 14 16 2 (set (reg/f:SI 108)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 target+0 S4 A32])) gdt.cpp:80 -1
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg/f:SI 91 [ D.1294 ])
                (plus:SI (reg/f:SI 108)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:80 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 target+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 17 16 18 2 (set (reg:QI 92 [ D.1295 ])
        (mem:QI (reg/f:SI 91 [ D.1294 ]) [0 *_10+0 S1 A8])) gdt.cpp:80 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 93 [ D.1296 ])
        (zero_extend:SI (reg:QI 92 [ D.1295 ]))) gdt.cpp:80 -1
     (nil))
(insn 19 18 20 2 (parallel [
            (set (reg:SI 109)
                (plus:SI (reg:SI 90 [ D.1296 ])
                    (reg:SI 93 [ D.1296 ])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:80 -1
     (nil))
(insn 20 19 21 2 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])
        (reg:SI 109)) gdt.cpp:80 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 110)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])) gdt.cpp:81 -1
     (nil))
(insn 22 21 23 2 (parallel [
            (set (reg:SI 94 [ D.1296 ])
                (ashift:SI (reg:SI 110)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:81 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])
            (const_int 8 [0x8]))
        (nil)))
(insn 23 22 24 2 (set (reg/f:SI 111)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 target+0 S4 A32])) gdt.cpp:81 -1
     (nil))
(insn 24 23 25 2 (set (reg:QI 95 [ D.1295 ])
        (mem:QI (reg/f:SI 111) [0 *target_3+0 S1 A8])) gdt.cpp:81 -1
     (nil))
(insn 25 24 26 2 (set (reg:SI 96 [ D.1296 ])
        (zero_extend:SI (reg:QI 95 [ D.1295 ]))) gdt.cpp:81 -1
     (nil))
(insn 26 25 27 2 (parallel [
            (set (reg:SI 112)
                (plus:SI (reg:SI 94 [ D.1296 ])
                    (reg:SI 96 [ D.1296 ])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:81 -1
     (nil))
(insn 27 26 28 2 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])
        (reg:SI 112)) gdt.cpp:81 -1
     (nil))
(insn 28 27 29 2 (set (reg/f:SI 113)
        (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 target+0 S4 A32])) gdt.cpp:82 -1
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg/f:SI 97 [ D.1294 ])
                (plus:SI (reg/f:SI 113)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:82 -1
     (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [0 target+0 S4 A32])
            (const_int 6 [0x6]))
        (nil)))
(insn 30 29 31 2 (set (reg:QI 98 [ D.1295 ])
        (mem:QI (reg/f:SI 97 [ D.1294 ]) [0 *_18+0 S1 A8])) gdt.cpp:82 -1
     (nil))
(insn 31 30 32 2 (set (reg:SI 99 [ D.1297 ])
        (zero_extend:SI (reg:QI 98 [ D.1295 ]))) gdt.cpp:82 -1
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg:SI 100 [ D.1297 ])
                (and:SI (reg:SI 99 [ D.1297 ])
                    (const_int 192 [0xc0])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:82 -1
     (nil))
(insn 33 32 34 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ D.1297 ])
            (const_int 192 [0xc0]))) gdt.cpp:82 -1
     (nil))
(jump_insn 34 33 35 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) gdt.cpp:82 -1
     (nil)
 -> 40)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 35 34 36 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 4 (set (reg:SI 114)
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])) gdt.cpp:83 -1
     (nil))
(insn 37 36 38 4 (parallel [
            (set (reg:SI 101 [ D.1296 ])
                (ashift:SI (reg:SI 114)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:83 -1
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])
            (const_int 12 [0xc]))
        (nil)))
(insn 38 37 39 4 (parallel [
            (set (reg:SI 115)
                (ior:SI (reg:SI 101 [ D.1296 ])
                    (const_int 4095 [0xfff])))
            (clobber (reg:CC 17 flags))
        ]) gdt.cpp:83 -1
     (nil))
(insn 39 38 40 4 (set (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])
        (reg:SI 115)) gdt.cpp:83 -1
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 40 39 41 5 15 "" [1 uses])
(note 41 40 42 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 45 5 (set (reg:SI 102 [ D.1298 ])
        (mem/c:SI (plus:SI (reg/f:SI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 limit+0 S4 A32])) gdt.cpp:84 -1
     (nil))
(insn 45 42 49 5 (set (reg:SI 103 [ <retval> ])
        (reg:SI 102 [ D.1298 ])) gdt.cpp:84 -1
     (nil))
(insn 49 45 50 5 (set (reg/i:SI 0 ax)
        (reg:SI 103 [ <retval> ])) gdt.cpp:85 -1
     (nil))
(insn 50 49 0 5 (use (reg/i:SI 0 ax)) gdt.cpp:85 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

