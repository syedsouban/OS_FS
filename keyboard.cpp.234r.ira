
;; Function KeyboardDriver::KeyboardDriver(InterruptManager*) (_ZN14KeyboardDriverC2EP16InterruptManager, funcdef_no=8, decl_uid=1403, cgraph_uid=8, symbol_order=8)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 6 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 10.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 34.
verify found no changes in insn with uid = 48.
verify found no changes in insn with uid = 60.
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 73.
verify found no changes in insn with uid = 84.
verify found no changes in insn with uid = 92.
verify found no changes in insn with uid = 99.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a7 (r114,l0) best Q_REGS, allocno Q_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a18 (r95,l0) best Q_REGS, allocno Q_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a21 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a1(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a2(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a3(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a4(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a5(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a6(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a7(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:7
  a8(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a9(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:2
  a10(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a11(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a12(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a13(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a14(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a15(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a16(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a17(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a18(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:7
  a19(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a20(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a21(r92,l0) costs: AREG:2 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:4
  a22(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a23(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a24(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a25(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a26(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a27(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a28(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a29(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5
  a30(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8

   Insn 103(l0): point = 0
   Insn 100(l0): point = 2
   Insn 99(l0): point = 4
   Insn 98(l0): point = 6
   Insn 97(l0): point = 8
   Insn 96(l0): point = 10
   Insn 95(l0): point = 12
   Insn 94(l0): point = 14
   Insn 93(l0): point = 16
   Insn 92(l0): point = 18
   Insn 91(l0): point = 20
   Insn 90(l0): point = 22
   Insn 89(l0): point = 24
   Insn 88(l0): point = 26
   Insn 87(l0): point = 28
   Insn 86(l0): point = 30
   Insn 85(l0): point = 32
   Insn 84(l0): point = 34
   Insn 83(l0): point = 36
   Insn 82(l0): point = 38
   Insn 81(l0): point = 40
   Insn 80(l0): point = 42
   Insn 79(l0): point = 44
   Insn 78(l0): point = 46
   Insn 77(l0): point = 48
   Insn 76(l0): point = 50
   Insn 75(l0): point = 52
   Insn 74(l0): point = 54
   Insn 73(l0): point = 56
   Insn 72(l0): point = 58
   Insn 71(l0): point = 60
   Insn 70(l0): point = 62
   Insn 69(l0): point = 64
   Insn 68(l0): point = 66
   Insn 67(l0): point = 68
   Insn 66(l0): point = 70
   Insn 65(l0): point = 72
   Insn 64(l0): point = 74
   Insn 63(l0): point = 76
   Insn 62(l0): point = 78
   Insn 61(l0): point = 80
   Insn 60(l0): point = 82
   Insn 59(l0): point = 84
   Insn 58(l0): point = 86
   Insn 57(l0): point = 88
   Insn 56(l0): point = 90
   Insn 55(l0): point = 92
   Insn 42(l0): point = 95
   Insn 41(l0): point = 97
   Insn 40(l0): point = 99
   Insn 39(l0): point = 101
   Insn 38(l0): point = 103
   Insn 37(l0): point = 105
   Insn 36(l0): point = 107
   Insn 35(l0): point = 109
   Insn 34(l0): point = 111
   Insn 33(l0): point = 113
   Insn 32(l0): point = 115
   Insn 31(l0): point = 117
   Insn 30(l0): point = 119
   Insn 104(l0): point = 122
   Insn 49(l0): point = 124
   Insn 48(l0): point = 126
   Insn 47(l0): point = 128
   Insn 46(l0): point = 130
   Insn 45(l0): point = 132
   Insn 44(l0): point = 134
   Insn 28(l0): point = 137
   Insn 27(l0): point = 139
   Insn 26(l0): point = 141
   Insn 25(l0): point = 143
   Insn 24(l0): point = 145
   Insn 23(l0): point = 147
   Insn 22(l0): point = 149
   Insn 21(l0): point = 151
   Insn 20(l0): point = 153
   Insn 19(l0): point = 155
   Insn 18(l0): point = 157
   Insn 17(l0): point = 159
   Insn 16(l0): point = 161
   Insn 15(l0): point = 163
   Insn 14(l0): point = 165
   Insn 13(l0): point = 167
   Insn 12(l0): point = 169
   Insn 11(l0): point = 171
   Insn 10(l0): point = 173
   Insn 9(l0): point = 175
   Insn 8(l0): point = 177
   Insn 7(l0): point = 179
   Insn 6(l0): point = 181
   Insn 5(l0): point = 183
 a0(r105): [7..12]
 a1(r117): [13..14]
 a2(r104): [21..26]
 a3(r103): [23..30]
 a4(r116): [27..28]
 a5(r102): [37..42]
 a6(r115): [43..44]
 a7(r114): [47..48]
 a8(r101): [49..50]
 a9(r100): [51..52]
 a10(r99): [59..62]
 a11(r113): [63..64]
 a12(r98): [71..76]
 a13(r112): [77..78]
 a14(r97): [85..90]
 a15(r111): [91..92]
 a16(r96): [129..132]
 a17(r110): [133..134]
 a18(r95): [98..99]
 a19(r94): [102..103]
 a20(r93): [104..105]
 a21(r92): [106..107]
 a22(r91): [114..117]
 a23(r109): [118..119]
 a24(r90): [142..147]
 a25(r108): [148..149]
 a26(r89): [156..161]
 a27(r107): [162..163]
 a28(r106): [166..167]
 a29(r88): [166..169]
 a30(r87): [176..183]
Compressing live ranges: from 186 to 58 - 31%
Ranges after the compression:
 a0(r105): [0..1]
 a1(r117): [2..3]
 a2(r104): [4..5]
 a3(r103): [4..7]
 a4(r116): [6..7]
 a5(r102): [8..9]
 a6(r115): [10..11]
 a7(r114): [12..13]
 a8(r101): [14..15]
 a9(r100): [16..17]
 a10(r99): [18..19]
 a11(r113): [20..21]
 a12(r98): [22..23]
 a13(r112): [24..25]
 a14(r97): [26..27]
 a15(r111): [28..29]
 a16(r96): [42..43]
 a17(r110): [44..45]
 a18(r95): [30..31]
 a19(r94): [32..33]
 a20(r93): [34..35]
 a21(r92): [36..37]
 a22(r91): [38..39]
 a23(r109): [40..41]
 a24(r90): [46..47]
 a25(r108): [48..49]
 a26(r89): [50..51]
 a27(r107): [52..53]
 a28(r106): [54..55]
 a29(r88): [54..55]
 a30(r87): [56..57]
  pref0:a21(r92)<-hr0@1
  regions=1, blocks=6, points=58
    allocnos=31 (big 0), copies=0, conflicts=0, ranges=31
Disposition:
   30:r87  l0     0   29:r88  l0     1   26:r89  l0     0   24:r90  l0     0
   22:r91  l0     0   21:r92  l0     0   20:r93  l0     0   19:r94  l0     0
   18:r95  l0     0   16:r96  l0     0   14:r97  l0     0   12:r98  l0     0
   10:r99  l0     0    9:r100 l0     0    8:r101 l0     0    5:r102 l0     0
    3:r103 l0     0    2:r104 l0     1    0:r105 l0     0   28:r106 l0     0
   27:r107 l0     0   25:r108 l0     0   23:r109 l0     0   17:r110 l0     0
   15:r111 l0     0   13:r112 l0     0   11:r113 l0     0    7:r114 l0     0
    6:r115 l0     0    4:r116 l0     1    1:r117 l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


KeyboardDriver::KeyboardDriver(InterruptManager*)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={12d,2u} r1={12d} r2={12d} r6={1d,5u} r7={43d,80u} r8={11d} r9={11d} r10={11d} r11={11d} r12={11d} r13={11d} r14={11d} r15={11d} r16={1d,17u,10e} r17={48d,2u} r18={11d} r19={11d} r20={1d,7u} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={11d} r30={11d} r31={11d} r32={11d} r33={11d} r34={11d} r35={11d} r36={11d} r37={11d} r38={11d} r39={11d} r40={11d} r41={11d} r42={11d} r43={11d} r44={11d} r45={11d} r46={11d} r47={11d} r48={11d} r49={11d} r50={11d} r51={11d} r52={11d} r53={11d} r54={11d} r55={11d} r56={11d} r57={11d} r58={11d} r59={11d} r60={11d} r61={11d} r62={11d} r63={11d} r64={11d} r65={11d} r66={11d} r67={11d} r68={11d} r69={11d} r70={11d} r71={11d} r72={11d} r73={11d} r74={11d} r75={11d} r76={11d} r77={11d} r78={11d} r79={11d} r80={11d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} 
;;    total ref usage 1085{931d,144u,10e} in 91{80 regular + 11 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 106 107 108
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 87 [ D.1528 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])) keyboard.cpp:6 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -4 [0xfffffffffffffffc])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:6 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 4 [0x4])
            (nil))))
(insn 7 6 8 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 manager+0 S4 A32])) keyboard.cpp:6 66 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 8 7 9 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 33 [0x21])) keyboard.cpp:6 66 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 9 8 10 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 87 [ D.1528 ])) keyboard.cpp:6 66 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 87 [ D.1528 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 10 9 11 2 (call (mem:QI (symbol_ref:SI ("_ZN16InterruptHandlerC2EhP16InterruptManager") [flags 0x41]  <function_decl 0x7efe750acaf8 __base_ctor >) [0 __base_ctor  S1 A8])
        (const_int 16 [0x10])) keyboard.cpp:6 659 {*call}
     (nil)
    (nil))
(insn 11 10 12 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:6 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 12 11 13 2 (set (reg/f:SI 88 [ D.1529 ])
        (const:SI (plus:SI (symbol_ref/i:SI ("_ZTV14KeyboardDriver") [flags 0x2]  <var_decl 0x7efe750bf090 _ZTV14KeyboardDriver>)
                (const_int 8 [0x8])))) keyboard.cpp:6 90 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg/f:SI 106)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])) keyboard.cpp:6 90 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/f/j:SI (reg/f:SI 106) [0 this_2(D)->D.1412._vptr.InterruptHandler+0 S4 A32])
        (reg/f:SI 88 [ D.1529 ])) keyboard.cpp:6 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (expr_list:REG_DEAD (reg/f:SI 88 [ D.1529 ])
            (nil))))
(insn 15 14 16 2 (set (reg/f:SI 107)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])) keyboard.cpp:6 90 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg/f:SI 89 [ D.1530 ])
                (plus:SI (reg/f:SI 107)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:6 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 107)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 17 16 18 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:6 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 18 17 19 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 96 [0x60])) keyboard.cpp:6 66 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 19 18 20 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 89 [ D.1530 ])) keyboard.cpp:6 66 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 89 [ D.1530 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 20 19 21 2 (call (mem:QI (symbol_ref:SI ("_ZN8Port8BitC1Et") [flags 0x41]  <function_decl 0x7efe7509d510 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) keyboard.cpp:6 659 {*call}
     (nil)
    (nil))
(insn 21 20 22 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:6 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 22 21 23 2 (set (reg/f:SI 108)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])) keyboard.cpp:6 90 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (parallel [
            (set (reg/f:SI 90 [ D.1530 ])
                (plus:SI (reg/f:SI 108)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:6 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 108)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])
                    (const_int 20 [0x14]))
                (nil)))))
(insn 24 23 25 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:6 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 25 24 26 2 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 100 [0x64])) keyboard.cpp:6 66 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 26 25 27 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 90 [ D.1530 ])) keyboard.cpp:6 66 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 90 [ D.1530 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 27 26 28 2 (call (mem:QI (symbol_ref:SI ("_ZN8Port8BitC1Et") [flags 0x41]  <function_decl 0x7efe7509d510 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 16 [0x10])) keyboard.cpp:6 659 {*call}
     (nil)
    (nil))
(insn 28 27 50 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:6 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              4 [100.0%] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 92 93 94 95 109
(code_label 50 28 29 3 3 "" [1 uses])
(note 29 50 30 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 3 (set (reg/f:SI 109)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])) keyboard.cpp:7 90 {*movsi_internal}
     (nil))
(insn 31 30 32 3 (parallel [
            (set (reg/f:SI 91 [ D.1530 ])
                (plus:SI (reg/f:SI 109)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:7 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 109)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])
                    (const_int 20 [0x14]))
                (nil)))))
(insn 32 31 33 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:7 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 33 32 34 3 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 91 [ D.1530 ])) keyboard.cpp:7 66 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 91 [ D.1530 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 34 33 35 3 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZN8Port8Bit4ReadEv") [flags 0x41]  <function_decl 0x7efe7509d1b0 Read>) [0 Read S1 A8])
            (const_int 16 [0x10]))) keyboard.cpp:7 668 {*call_value}
     (nil)
    (nil))
(insn 35 34 36 3 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:7 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 36 35 37 3 (set (reg:QI 92 [ D.1531 ])
        (reg:QI 0 ax)) keyboard.cpp:7 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 37 36 38 3 (set (reg:SI 93 [ D.1532 ])
        (zero_extend:SI (reg:QI 92 [ D.1531 ]))) keyboard.cpp:7 138 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 92 [ D.1531 ])
        (nil)))
(insn 38 37 39 3 (parallel [
            (set (reg:SI 94 [ D.1532 ])
                (and:SI (reg:SI 93 [ D.1532 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:7 381 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 93 [ D.1532 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 39 38 40 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 94 [ D.1532 ])
            (const_int 0 [0]))) keyboard.cpp:7 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 94 [ D.1532 ])
        (nil)))
(insn 40 39 41 3 (set (reg:QI 95 [ D.1533 ])
        (ne:QI (reg:CCZ 17 flags)
            (const_int 0 [0]))) keyboard.cpp:7 607 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil)))
(insn 41 40 42 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 95 [ D.1533 ])
            (const_int 0 [0]))) keyboard.cpp:7 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 95 [ D.1533 ])
        (nil)))
(jump_insn 42 41 43 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) keyboard.cpp:7 612 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 53)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 110
(note 43 42 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 4 (set (reg/f:SI 110)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])) keyboard.cpp:8 90 {*movsi_internal}
     (nil))
(insn 45 44 46 4 (parallel [
            (set (reg/f:SI 96 [ D.1530 ])
                (plus:SI (reg/f:SI 110)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:8 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 110)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 46 45 47 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:8 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 47 46 48 4 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 96 [ D.1530 ])) keyboard.cpp:8 66 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 96 [ D.1530 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 48 47 49 4 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZN8Port8Bit4ReadEv") [flags 0x41]  <function_decl 0x7efe7509d1b0 Read>) [0 Read S1 A8])
            (const_int 16 [0x10]))) keyboard.cpp:8 668 {*call_value}
     (expr_list:REG_UNUSED (reg:QI 0 ax)
        (nil))
    (nil))
(insn 49 48 104 4 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:8 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(jump_insn 104 49 105 4 (set (pc)
        (label_ref 50)) keyboard.cpp:7 654 {jump}
     (nil)
 -> 50)
;;  succ:       3 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 105 104 53)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97 98 99 100 101 102 103 104 105 111 112 113 114 115 116 117
(code_label 53 105 54 5 2 "" [1 uses])
(note 54 53 55 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 5 (set (reg/f:SI 111)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])) keyboard.cpp:9 90 {*movsi_internal}
     (nil))
(insn 56 55 57 5 (parallel [
            (set (reg/f:SI 97 [ D.1530 ])
                (plus:SI (reg/f:SI 111)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:9 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 111)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])
                    (const_int 20 [0x14]))
                (nil)))))
(insn 57 56 58 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:9 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 58 57 59 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 174 [0xae])) keyboard.cpp:9 66 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 59 58 60 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 97 [ D.1530 ])) keyboard.cpp:9 66 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 97 [ D.1530 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 60 59 61 5 (call (mem:QI (symbol_ref:SI ("_ZN8Port8Bit5WriteEh") [flags 0x41]  <function_decl 0x7efe7509d288 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) keyboard.cpp:9 659 {*call}
     (nil)
    (nil))
(insn 61 60 62 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:9 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 62 61 63 5 (set (reg/f:SI 112)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])) keyboard.cpp:10 90 {*movsi_internal}
     (nil))
(insn 63 62 64 5 (parallel [
            (set (reg/f:SI 98 [ D.1530 ])
                (plus:SI (reg/f:SI 112)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:10 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 112)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])
                    (const_int 20 [0x14]))
                (nil)))))
(insn 64 63 65 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:10 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 65 64 66 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 32 [0x20])) keyboard.cpp:10 66 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 66 65 67 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 98 [ D.1530 ])) keyboard.cpp:10 66 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 98 [ D.1530 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 67 66 68 5 (call (mem:QI (symbol_ref:SI ("_ZN8Port8Bit5WriteEh") [flags 0x41]  <function_decl 0x7efe7509d288 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) keyboard.cpp:10 659 {*call}
     (nil)
    (nil))
(insn 68 67 69 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:10 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 69 68 70 5 (set (reg/f:SI 113)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])) keyboard.cpp:11 90 {*movsi_internal}
     (nil))
(insn 70 69 71 5 (parallel [
            (set (reg/f:SI 99 [ D.1530 ])
                (plus:SI (reg/f:SI 113)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:11 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 113)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 71 70 72 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:11 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 72 71 73 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 99 [ D.1530 ])) keyboard.cpp:11 66 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 99 [ D.1530 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 73 72 74 5 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZN8Port8Bit4ReadEv") [flags 0x41]  <function_decl 0x7efe7509d1b0 Read>) [0 Read S1 A8])
            (const_int 16 [0x10]))) keyboard.cpp:11 668 {*call_value}
     (nil)
    (nil))
(insn 74 73 75 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:11 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 75 74 76 5 (set (reg:QI 100 [ D.1531 ])
        (reg:QI 0 ax)) keyboard.cpp:11 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 76 75 77 5 (parallel [
            (set (reg:QI 101 [ D.1531 ])
                (ior:QI (reg:QI 100 [ D.1531 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:11 405 {*iorqi_1}
     (expr_list:REG_DEAD (reg:QI 100 [ D.1531 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 77 76 78 5 (parallel [
            (set (reg:QI 114)
                (and:QI (reg:QI 101 [ D.1531 ])
                    (const_int -17 [0xffffffffffffffef])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:11 384 {*andqi_1}
     (expr_list:REG_DEAD (reg:QI 101 [ D.1531 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 78 77 79 5 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 status+0 S1 A8])
        (reg:QI 114)) keyboard.cpp:11 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 114)
        (nil)))
(insn 79 78 80 5 (set (reg/f:SI 115)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])) keyboard.cpp:12 90 {*movsi_internal}
     (nil))
(insn 80 79 81 5 (parallel [
            (set (reg/f:SI 102 [ D.1530 ])
                (plus:SI (reg/f:SI 115)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:12 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 115)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])
                    (const_int 20 [0x14]))
                (nil)))))
(insn 81 80 82 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:12 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 82 81 83 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 96 [0x60])) keyboard.cpp:12 66 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 83 82 84 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 102 [ D.1530 ])) keyboard.cpp:12 66 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 102 [ D.1530 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 84 83 85 5 (call (mem:QI (symbol_ref:SI ("_ZN8Port8Bit5WriteEh") [flags 0x41]  <function_decl 0x7efe7509d288 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) keyboard.cpp:12 659 {*call}
     (nil)
    (nil))
(insn 85 84 86 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:12 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 86 85 87 5 (set (reg:SI 103 [ D.1532 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -1 [0xffffffffffffffff])) [0 status+0 S1 A8]))) keyboard.cpp:13 138 {*zero_extendqisi2}
     (nil))
(insn 87 86 88 5 (set (reg/f:SI 116)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])) keyboard.cpp:13 90 {*movsi_internal}
     (nil))
(insn 88 87 89 5 (parallel [
            (set (reg/f:SI 104 [ D.1530 ])
                (plus:SI (reg/f:SI 116)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:13 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 116)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 89 88 90 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:13 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 90 89 91 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg:SI 103 [ D.1532 ])) keyboard.cpp:13 66 {*pushsi2}
     (expr_list:REG_DEAD (reg:SI 103 [ D.1532 ])
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 91 90 92 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 104 [ D.1530 ])) keyboard.cpp:13 66 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 104 [ D.1530 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 92 91 93 5 (call (mem:QI (symbol_ref:SI ("_ZN8Port8Bit5WriteEh") [flags 0x41]  <function_decl 0x7efe7509d288 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) keyboard.cpp:13 659 {*call}
     (nil)
    (nil))
(insn 93 92 94 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:13 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 94 93 95 5 (set (reg/f:SI 117)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])) keyboard.cpp:14 90 {*movsi_internal}
     (nil))
(insn 95 94 96 5 (parallel [
            (set (reg/f:SI 105 [ D.1530 ])
                (plus:SI (reg/f:SI 117)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:14 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 117)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 96 95 97 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:14 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
            (nil))))
(insn 97 96 98 5 (set (mem:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (const_int 244 [0xf4])) keyboard.cpp:14 66 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
        (nil)))
(insn 98 97 99 5 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 105 [ D.1530 ])) keyboard.cpp:14 66 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 105 [ D.1530 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 99 98 100 5 (call (mem:QI (symbol_ref:SI ("_ZN8Port8Bit5WriteEh") [flags 0x41]  <function_decl 0x7efe7509d288 Write>) [0 Write S1 A8])
        (const_int 16 [0x10])) keyboard.cpp:14 659 {*call}
     (nil)
    (nil))
(insn 100 99 103 5 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:14 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 103 100 0 5 (const_int 0 [0]) keyboard.cpp:15 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function KeyboardDriver::~KeyboardDriver() (_ZN14KeyboardDriverD2Ev, funcdef_no=11, decl_uid=1409, cgraph_uid=11, symbol_order=11)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 23.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a2(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a4(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a5(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:8
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:5

   Insn 27(l0): point = 0
   Insn 24(l0): point = 2
   Insn 23(l0): point = 4
   Insn 22(l0): point = 6
   Insn 21(l0): point = 8
   Insn 20(l0): point = 10
   Insn 19(l0): point = 12
   Insn 18(l0): point = 14
   Insn 17(l0): point = 16
   Insn 16(l0): point = 18
   Insn 15(l0): point = 20
   Insn 14(l0): point = 22
   Insn 13(l0): point = 24
   Insn 12(l0): point = 26
   Insn 11(l0): point = 28
   Insn 10(l0): point = 30
   Insn 9(l0): point = 32
   Insn 8(l0): point = 34
   Insn 7(l0): point = 36
   Insn 6(l0): point = 38
   Insn 5(l0): point = 40
 a0(r90): [7..10]
 a1(r89): [17..20]
 a2(r93): [21..22]
 a3(r88): [29..32]
 a4(r92): [33..34]
 a5(r91): [37..38]
 a6(r87): [37..40]
Compressing live ranges: from 43 to 12 - 27%
Ranges after the compression:
 a0(r90): [0..1]
 a1(r89): [2..3]
 a2(r93): [4..5]
 a3(r88): [6..7]
 a4(r92): [8..9]
 a5(r91): [10..11]
 a6(r87): [10..11]
  regions=1, blocks=3, points=12
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    6:r87  l0     1    3:r88  l0     0    1:r89  l0     0    0:r90  l0     0
    5:r91  l0     0    4:r92  l0     0    2:r93  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


KeyboardDriver::~KeyboardDriver()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d} r1={4d} r2={4d} r6={1d,2u} r7={10d,20u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,5u,2e} r17={11d} r18={3d} r19={3d} r20={1d,2u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={3d} r38={3d} r39={3d} r40={3d} r41={3d} r42={3d} r43={3d} r44={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} 
;;    total ref usage 291{253d,36u,2e} in 21{18 regular + 3 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 87 [ D.1534 ])
        (const:SI (plus:SI (symbol_ref/i:SI ("_ZTV14KeyboardDriver") [flags 0x2]  <var_decl 0x7efe750bf090 _ZTV14KeyboardDriver>)
                (const_int 8 [0x8])))) keyboard.cpp:16 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg/f:SI 91)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])) keyboard.cpp:16 90 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/j:SI (reg/f:SI 91) [0 this_3(D)->D.1412._vptr.InterruptHandler+0 S4 A32])
        (reg/f:SI 87 [ D.1534 ])) keyboard.cpp:16 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91)
        (expr_list:REG_DEAD (reg/f:SI 87 [ D.1534 ])
            (nil))))
(insn 8 7 9 2 (set (reg/f:SI 92)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])) keyboard.cpp:16 90 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg/f:SI 88 [ D.1535 ])
                (plus:SI (reg/f:SI 92)
                    (const_int 20 [0x14])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:16 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 92)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])
                    (const_int 20 [0x14]))
                (nil)))))
(insn 10 9 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:16 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 11 10 12 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 88 [ D.1535 ])) keyboard.cpp:16 66 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 88 [ D.1535 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 12 11 13 2 (call (mem:QI (symbol_ref:SI ("_ZN8Port8BitD1Ev") [flags 0x41]  <function_decl 0x7efe7509d6c0 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 16 [0x10])) keyboard.cpp:16 659 {*call}
     (nil)
    (nil))
(insn 13 12 14 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:16 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 14 13 15 2 (set (reg/f:SI 93)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])) keyboard.cpp:16 90 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (parallel [
            (set (reg/f:SI 89 [ D.1535 ])
                (plus:SI (reg/f:SI 93)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:16 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 93)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 16 15 17 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:16 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 17 16 18 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 89 [ D.1535 ])) keyboard.cpp:16 66 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 89 [ D.1535 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 18 17 19 2 (call (mem:QI (symbol_ref:SI ("_ZN8Port8BitD1Ev") [flags 0x41]  <function_decl 0x7efe7509d6c0 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 16 [0x10])) keyboard.cpp:16 659 {*call}
     (nil)
    (nil))
(insn 19 18 20 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:16 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 20 19 21 2 (set (reg/f:SI 90 [ D.1536 ])
        (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])) keyboard.cpp:16 90 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:16 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 22 21 23 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 90 [ D.1536 ])) keyboard.cpp:16 66 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 90 [ D.1536 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 23 22 24 2 (call (mem:QI (symbol_ref:SI ("_ZN16InterruptHandlerD2Ev") [flags 0x41]  <function_decl 0x7efe750acca8 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 16 [0x10])) keyboard.cpp:16 659 {*call}
     (nil)
    (nil))
(insn 24 23 27 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:16 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 27 24 0 2 (const_int 0 [0]) keyboard.cpp:18 684 {nop}
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual uint32_t KeyboardDriver::HandleInterrupt(uint32_t) (_ZN14KeyboardDriver15HandleInterruptEj, funcdef_no=13, decl_uid=1398, cgraph_uid=13, symbol_order=13)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 34.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a15 (r103,l0) best Q_REGS, allocno Q_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r101,l0) best AREG, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r99,l0) best AREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a3 (r97,l0) best Q_REGS, allocno Q_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a10 (r92,l0) best Q_REGS, allocno Q_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred Q_REGS, alternative GENERAL_REGS, allocno Q_REGS
    a14 (r89,l0) best Q_REGS, allocno Q_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:4
  a1(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a2(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a3(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:8
  a4(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a5(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a6(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:6
  a7(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a8(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a9(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a10(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:8
  a11(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a12(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a13(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a14(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:6
  a15(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:4 DIREG:4 AD_REGS:0 Q_REGS:0 NON_Q_REGS:4 GENERAL_REGS:4 MEM:7
  a16(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a17(r101,l0) costs: AREG:2 DREG:0 CREG:0 BREG:0 SIREG:2 DIREG:2 AD_REGS:0 Q_REGS:0 NON_Q_REGS:2 GENERAL_REGS:2 MEM:5
  a18(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7
  a19(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 GENERAL_REGS:0 MEM:7

   Insn 44(l0): point = 0
   Insn 43(l0): point = 2
   Insn 39(l0): point = 4
   Insn 36(l0): point = 6
   Insn 35(l0): point = 8
   Insn 34(l0): point = 10
   Insn 33(l0): point = 12
   Insn 32(l0): point = 14
   Insn 31(l0): point = 16
   Insn 30(l0): point = 18
   Insn 29(l0): point = 20
   Insn 28(l0): point = 22
   Insn 27(l0): point = 24
   Insn 26(l0): point = 26
   Insn 25(l0): point = 28
   Insn 24(l0): point = 30
   Insn 23(l0): point = 32
   Insn 22(l0): point = 34
   Insn 21(l0): point = 36
   Insn 20(l0): point = 38
   Insn 19(l0): point = 40
   Insn 18(l0): point = 42
   Insn 17(l0): point = 44
   Insn 16(l0): point = 46
   Insn 15(l0): point = 48
   Insn 14(l0): point = 50
   Insn 13(l0): point = 52
   Insn 12(l0): point = 54
   Insn 11(l0): point = 56
   Insn 10(l0): point = 58
   Insn 9(l0): point = 60
   Insn 8(l0): point = 62
   Insn 7(l0): point = 64
   Insn 6(l0): point = 66
   Insn 5(l0): point = 68
 a0(r99): [3..4]
 a1(r98): [5..6]
 a2(r93): [17..28]
 a3(r97): [17..18]
 a4(r96): [19..20]
 a5(r106): [21..22]
 a6(r95): [21..24]
 a7(r94): [25..26]
 a8(r105): [29..30]
 a9(r88): [33..46]
 a10(r92): [33..34]
 a11(r91): [35..36]
 a12(r104): [37..38]
 a13(r90): [37..40]
 a14(r89): [41..42]
 a15(r103): [43..44]
 a16(r102): [47..48]
 a17(r101): [55..56]
 a18(r87): [63..66]
 a19(r100): [67..68]
Compressing live ranges: from 71 to 32 - 45%
Ranges after the compression:
 a0(r99): [0..1]
 a1(r98): [2..3]
 a2(r93): [4..11]
 a3(r97): [4..5]
 a4(r96): [6..7]
 a5(r106): [8..9]
 a6(r95): [8..9]
 a7(r94): [10..11]
 a8(r105): [12..13]
 a9(r88): [14..23]
 a10(r92): [14..15]
 a11(r91): [16..17]
 a12(r104): [18..19]
 a13(r90): [18..19]
 a14(r89): [20..21]
 a15(r103): [22..23]
 a16(r102): [24..25]
 a17(r101): [26..27]
 a18(r87): [28..29]
 a19(r100): [30..31]
  pref0:a17(r101)<-hr0@1
  regions=1, blocks=3, points=32
    allocnos=20 (big 0), copies=0, conflicts=0, ranges=20
Disposition:
   18:r87  l0     0    9:r88  l0     1   14:r89  l0     0   13:r90  l0     2
   11:r91  l0     0   10:r92  l0     0    2:r93  l0     1    7:r94  l0     0
    6:r95  l0     2    4:r96  l0     0    3:r97  l0     0    1:r98  l0     0
    0:r99  l0     0   19:r100 l0     0   17:r101 l0     0   16:r102 l0     0
   15:r103 l0     0   12:r104 l0     0    8:r105 l0     0    5:r106 l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual uint32_t KeyboardDriver::HandleInterrupt(uint32_t)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={4d,3u} r1={3d} r2={3d} r6={1d,2u} r7={7d,14u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u,1e} r17={13d} r18={2d} r19={2d} r20={1d,12u,5e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={2d} r38={2d} r39={2d} r40={2d} r41={2d} r42={2d} r43={2d} r44={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r77={2d} r78={2d} r79={2d} r80={2d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u,1e} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u,1e} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} 
;;    total ref usage 255{193d,54u,8e} in 35{33 regular + 2 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [] 22 [] 23 [] 24 [] 25 [] 26 [] 27 [] 28 [] 29 [] 30 [] 31 [] 32 [] 33 [] 34 [] 35 [] 36 [] 37 [] 38 [] 39 [] 40 [] 41 [] 42 [] 43 [] 44 [] 45 [] 46 [] 47 [] 48 [] 49 [] 50 [] 51 [] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg/f:SI 100)
        (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])) keyboard.cpp:20 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (parallel [
            (set (reg/f:SI 87 [ D.1537 ])
                (plus:SI (reg/f:SI 100)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:20 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 100)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (reg/f:SI 16 argp) [0 this+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 7 6 8 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:20 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 8 7 9 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (reg/f:SI 87 [ D.1537 ])) keyboard.cpp:20 66 {*pushsi2}
     (expr_list:REG_DEAD (reg/f:SI 87 [ D.1537 ])
        (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
            (nil))))
(call_insn 9 8 10 2 (set (reg:QI 0 ax)
        (call (mem:QI (symbol_ref:SI ("_ZN8Port8Bit4ReadEv") [flags 0x41]  <function_decl 0x7efe7509d1b0 Read>) [0 Read S1 A8])
            (const_int 16 [0x10]))) keyboard.cpp:20 668 {*call_value}
     (nil)
    (nil))
(insn 10 9 11 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:20 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 11 10 12 2 (set (reg:QI 101)
        (reg:QI 0 ax)) keyboard.cpp:20 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 0 ax)
        (nil)))
(insn 12 11 13 2 (set (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 key+0 S1 A8])
        (reg:QI 101)) keyboard.cpp:20 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 101)
        (nil)))
(insn 13 12 14 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 foo+0 S4 A32])
        (symbol_ref/f:SI ("*.LC0") [flags 0x2]  <var_decl 0x7efe750dab40 *.LC0>)) keyboard.cpp:21 90 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 hex+0 S4 A32])
        (symbol_ref/f:SI ("*.LC1") [flags 0x2]  <var_decl 0x7efe750dabd0 *.LC1>)) keyboard.cpp:22 90 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg/f:SI 102)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 foo+0 S4 A32])) keyboard.cpp:23 90 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (parallel [
            (set (reg/f:SI 88 [ D.1538 ])
                (plus:SI (reg/f:SI 102)
                    (const_int 11 [0xb])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:23 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 102)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 foo+0 S4 A32])
                    (const_int 11 [0xb]))
                (nil)))))
(insn 17 16 18 2 (set (reg:QI 103)
        (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                (const_int -1 [0xffffffffffffffff])) [0 key+0 S1 A8])) keyboard.cpp:23 93 {*movqi_internal}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:QI 89 [ D.1539 ])
                (lshiftrt:QI (reg:QI 103)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:23 552 {*lshrqi3_1}
     (expr_list:REG_DEAD (reg:QI 103)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (lshiftrt:QI (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                            (const_int -1 [0xffffffffffffffff])) [0 key+0 S1 A8])
                    (const_int 4 [0x4]))
                (nil)))))
(insn 19 18 20 2 (set (reg:SI 90 [ D.1540 ])
        (zero_extend:SI (reg:QI 89 [ D.1539 ]))) keyboard.cpp:23 138 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 89 [ D.1539 ])
        (nil)))
(insn 20 19 21 2 (set (reg/f:SI 104)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 hex+0 S4 A32])) keyboard.cpp:23 90 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (parallel [
            (set (reg/f:SI 91 [ D.1538 ])
                (plus:SI (reg:SI 90 [ D.1540 ])
                    (reg/f:SI 104)))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:23 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 104)
        (expr_list:REG_DEAD (reg:SI 90 [ D.1540 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                                (const_int -12 [0xfffffffffffffff4])) [0 hex+0 S4 A32])
                        (reg:SI 90 [ D.1540 ]))
                    (nil))))))
(insn 22 21 23 2 (set (reg:QI 92 [ D.1541 ])
        (mem:QI (reg/f:SI 91 [ D.1538 ]) [0 *_11+0 S1 A8])) keyboard.cpp:23 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 91 [ D.1538 ])
        (nil)))
(insn 23 22 24 2 (set (mem:QI (reg/f:SI 88 [ D.1538 ]) [0 *_8+0 S1 A8])
        (reg:QI 92 [ D.1541 ])) keyboard.cpp:23 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 92 [ D.1541 ])
        (expr_list:REG_DEAD (reg/f:SI 88 [ D.1538 ])
            (nil))))
(insn 24 23 25 2 (set (reg/f:SI 105)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 foo+0 S4 A32])) keyboard.cpp:24 90 {*movsi_internal}
     (nil))
(insn 25 24 26 2 (parallel [
            (set (reg/f:SI 93 [ D.1538 ])
                (plus:SI (reg/f:SI 105)
                    (const_int 12 [0xc])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:24 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 105)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 foo+0 S4 A32])
                    (const_int 12 [0xc]))
                (nil)))))
(insn 26 25 27 2 (set (reg:SI 94 [ D.1540 ])
        (zero_extend:SI (mem/c:QI (plus:SI (reg/f:SI 20 frame)
                    (const_int -1 [0xffffffffffffffff])) [0 key+0 S1 A8]))) keyboard.cpp:24 138 {*zero_extendqisi2}
     (nil))
(insn 27 26 28 2 (parallel [
            (set (reg:SI 95 [ D.1540 ])
                (and:SI (reg:SI 94 [ D.1540 ])
                    (const_int 15 [0xf])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:24 381 {*andsi_1}
     (expr_list:REG_DEAD (reg:SI 94 [ D.1540 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 28 27 29 2 (set (reg/f:SI 106)
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [0 hex+0 S4 A32])) keyboard.cpp:24 90 {*movsi_internal}
     (nil))
(insn 29 28 30 2 (parallel [
            (set (reg/f:SI 96 [ D.1538 ])
                (plus:SI (reg:SI 95 [ D.1540 ])
                    (reg/f:SI 106)))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:24 217 {*addsi_1}
     (expr_list:REG_DEAD (reg/f:SI 106)
        (expr_list:REG_DEAD (reg:SI 95 [ D.1540 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (plus:SI (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                                (const_int -12 [0xfffffffffffffff4])) [0 hex+0 S4 A32])
                        (reg:SI 95 [ D.1540 ]))
                    (nil))))))
(insn 30 29 31 2 (set (reg:QI 97 [ D.1541 ])
        (mem:QI (reg/f:SI 96 [ D.1538 ]) [0 *_17+0 S1 A8])) keyboard.cpp:24 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg/f:SI 96 [ D.1538 ])
        (nil)))
(insn 31 30 32 2 (set (mem:QI (reg/f:SI 93 [ D.1538 ]) [0 *_14+0 S1 A8])
        (reg:QI 97 [ D.1541 ])) keyboard.cpp:24 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:QI 97 [ D.1541 ])
        (expr_list:REG_DEAD (reg/f:SI 93 [ D.1538 ])
            (nil))))
(insn 32 31 33 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:25 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 12 [0xc])
            (nil))))
(insn 33 32 34 2 (set (mem/f:SI (pre_dec:SI (reg/f:SI 7 sp)) [0  S4 A32])
        (mem/f/c:SI (plus:SI (reg/f:SI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 foo+0 S4 A32])) keyboard.cpp:25 66 {*pushsi2}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(call_insn 34 33 35 2 (call (mem:QI (symbol_ref:SI ("_Z6printfPc") [flags 0x41]  <function_decl 0x7efe750c10d8 printf>) [0 printf S1 A8])
        (const_int 16 [0x10])) keyboard.cpp:25 659 {*call}
     (nil)
    (nil))
(insn 35 34 36 2 (parallel [
            (set (reg/f:SI 7 sp)
                (plus:SI (reg/f:SI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) keyboard.cpp:25 217 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (nil))))
(insn 36 35 39 2 (set (reg:SI 98 [ D.1542 ])
        (mem/c:SI (plus:SI (reg/f:SI 16 argp)
                (const_int 4 [0x4])) [0 esp+0 S4 A32])) keyboard.cpp:26 90 {*movsi_internal}
     (nil))
(insn 39 36 43 2 (set (reg:SI 99 [ <retval> ])
        (reg:SI 98 [ D.1542 ])) keyboard.cpp:26 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 98 [ D.1542 ])
        (nil)))
(insn 43 39 44 2 (set (reg/i:SI 0 ax)
        (reg:SI 99 [ <retval> ])) keyboard.cpp:27 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 99 [ <retval> ])
        (nil)))
(insn 44 43 0 2 (use (reg/i:SI 0 ax)) keyboard.cpp:27 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

